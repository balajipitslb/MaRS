package its.mnr.mp5.vo.asset;

import its.mnr.mp5.baseclass.ExtendedViewObjectImpl;

import its.mnr.mp5.vo.asset.common.AssetReading;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 10 15:58:00 PDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssetReadingImpl extends ExtendedViewObjectImpl implements AssetReading {
    
    public static int VARCHAR2 = Types.VARCHAR;
    
    /* Helper methods */    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    
    public String getAssetStatusFnc(String PASSET, String PORG) {
        
        String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.GETASSETSTATUS(?,?)",
                                          new Object[] {PASSET, PORG});
        //System.out.println("ITS_EstimateIns Ret = " + ret);
        return ret;

    }
    /**
     * This is the default constructor (do not remove).
     */
    public AssetReadingImpl() {
    }

    /**
     * Returns the bind variable value for Bind_AssetOrg.
     * @return bind variable value for Bind_AssetOrg
     */
    public String getBind_AssetOrg() {
        return (String)getNamedWhereClauseParam("Bind_AssetOrg");
    }

    /**
     * Sets <code>value</code> for bind variable Bind_AssetOrg.
     * @param value value to bind as Bind_AssetOrg
     */
    public void setBind_AssetOrg(String value) {
        setNamedWhereClauseParam("Bind_AssetOrg", value);
    }

    /**
     * Returns the bind variable value for Bind_AssetCd.
     * @return bind variable value for Bind_AssetCd
     */
    public String getBind_AssetCd() {
        return (String)getNamedWhereClauseParam("Bind_AssetCd");
    }

    /**
     * Sets <code>value</code> for bind variable Bind_AssetCd.
     * @param value value to bind as Bind_AssetCd
     */
    public void setBind_AssetCd(String value) {
        setNamedWhereClauseParam("Bind_AssetCd", value);
    }

    /**
     * Returns the variable value for Bind_Type.
     * @return variable value for Bind_Type
     */
    public String getBind_Type() {
        return (String)ensureVariableManager().getVariableValue("Bind_Type");
    }

    /**
     * Sets <code>value</code> for variable Bind_Type.
     * @param value value to bind as Bind_Type
     */
    public void setBind_Type(String value) {
        ensureVariableManager().setVariableValue("Bind_Type", value);
    }
}
