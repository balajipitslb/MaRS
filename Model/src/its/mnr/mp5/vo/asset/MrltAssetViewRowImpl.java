package its.mnr.mp5.vo.asset;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;
import its.mnr.mp5.eo.local.MrltAssetImpl;


import its.mnr.mp5.vo.asset.common.MrltAssetViewRow;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 06 09:57:44 PDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltAssetViewRowImpl extends ExtendedViewRowImpl implements MrltAssetViewRow {


    public static final int ENTITY_MRLTASSET = 0;
    public static int VARCHAR2 = Types.VARCHAR;
    
    /* Helper methods */    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    
    public String copyAsset(String PCOPYASSET, String PCOPYORG,String PNEWASSET, String PNEWMODEL, String PNEWSERIAL) {
        //System.out.println("updateWODates()");
        
        String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.COPYASSET(?,?,?,?,?)",
                                          new Object[] {PCOPYASSET, PCOPYORG, PNEWASSET, PNEWMODEL, PNEWSERIAL});
        //System.out.println("ITS_EstimateIns Ret = " + ret);
        return ret;

    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Assetcd {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetcd();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetcd((String)value);
            }
        }
        ,
        Assetclass {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetclass();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetclass((String)value);
            }
        }
        ,
        Assetmanufact {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetmanufact();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetmanufact((String)value);
            }
        }
        ,
        Assetstatus {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetstatus();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetstatus((String)value);
            }
        }
        ,
        Commiss {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getCommiss();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setCommiss((Timestamp)value);
            }
        }
        ,
        Withdraw {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getWithdraw();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setWithdraw((Timestamp)value);
            }
        }
        ,
        Created {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getCreated();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setCreated((Timestamp)value);
            }
        }
        ,
        Model {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getModel();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setModel((String)value);
            }
        }
        ,
        Updated {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getUpdated();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setUpdated((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Org {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getOrg();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setOrg((String)value);
            }
        }
        ,
        Assetacctnum {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetacctnum();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetacctnum((String)value);
            }
        }
        ,
        Uom {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getUom();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        Criticality {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getCriticality();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setCriticality((String)value);
            }
        }
        ,
        Assetdocid {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetdocid();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAssetdocid((Long)value);
            }
        }
        ,
        Isresource {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getIsresource();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setIsresource((String)value);
            }
        }
        ,
        Notavailable {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getNotavailable();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setNotavailable((String)value);
            }
        }
        ,
        Serialno {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getSerialno();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setSerialno((String)value);
            }
        }
        ,
        tUploadPhoto {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.gettUploadPhoto();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.settUploadPhoto((String)value);
            }
        }
        ,
        tPostedAssetDocId {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.gettPostedAssetDocId();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.settPostedAssetDocId((String)value);
            }
        }
        ,
        MrltCustattribvaluesView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltCustattribvaluesView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltReadingView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltReadingView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltSparesView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltSparesView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AssetCommentsView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetCommentsView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOEvents {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getWOEvents();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAssetdocumentsView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltAssetdocumentsView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AssetReading {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetReading();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAssetdocsvwView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltAssetdocsvwView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOTotalsView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getWOTotalsView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefClassView1 {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrlrefClassView1();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AssetCriticalityLOV {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetCriticalityLOV();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAccountmasterView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltAccountmasterView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefPerView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrlrefPerView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefClassViewManu {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrlrefClassViewManu();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltDocumentsView {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getMrltDocumentsView();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AssetStatusLOV1 {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getAssetStatusLOV1();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CustattribsForAssets {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getCustattribsForAssets();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        YesNoBooleanAsset {
            public Object get(MrltAssetViewRowImpl obj) {
                return obj.getYesNoBooleanAsset();
            }

            public void put(MrltAssetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltAssetViewRowImpl object);

        public abstract void put(MrltAssetViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ASSETCD = AttributesEnum.Assetcd.index();
    public static final int ASSETCLASS = AttributesEnum.Assetclass.index();
    public static final int ASSETMANUFACT = AttributesEnum.Assetmanufact.index();
    public static final int ASSETSTATUS = AttributesEnum.Assetstatus.index();
    public static final int COMMISS = AttributesEnum.Commiss.index();
    public static final int WITHDRAW = AttributesEnum.Withdraw.index();
    public static final int CREATED = AttributesEnum.Created.index();
    public static final int MODEL = AttributesEnum.Model.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int ORG = AttributesEnum.Org.index();
    public static final int ASSETACCTNUM = AttributesEnum.Assetacctnum.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int CRITICALITY = AttributesEnum.Criticality.index();
    public static final int ASSETDOCID = AttributesEnum.Assetdocid.index();
    public static final int ISRESOURCE = AttributesEnum.Isresource.index();
    public static final int NOTAVAILABLE = AttributesEnum.Notavailable.index();
    public static final int SERIALNO = AttributesEnum.Serialno.index();
    public static final int TUPLOADPHOTO = AttributesEnum.tUploadPhoto.index();
    public static final int TPOSTEDASSETDOCID = AttributesEnum.tPostedAssetDocId.index();
    public static final int MRLTCUSTATTRIBVALUESVIEW = AttributesEnum.MrltCustattribvaluesView.index();
    public static final int MRLTREADINGVIEW = AttributesEnum.MrltReadingView.index();
    public static final int MRLTSPARESVIEW = AttributesEnum.MrltSparesView.index();
    public static final int ASSETCOMMENTSVIEW = AttributesEnum.AssetCommentsView.index();
    public static final int WOEVENTS = AttributesEnum.WOEvents.index();
    public static final int MRLTASSETDOCUMENTSVIEW = AttributesEnum.MrltAssetdocumentsView.index();
    public static final int ASSETREADING = AttributesEnum.AssetReading.index();
    public static final int MRLTASSETDOCSVWVIEW = AttributesEnum.MrltAssetdocsvwView.index();
    public static final int WOTOTALSVIEW = AttributesEnum.WOTotalsView.index();
    public static final int MRLREFCLASSVIEW1 = AttributesEnum.MrlrefClassView1.index();
    public static final int ASSETCRITICALITYLOV = AttributesEnum.AssetCriticalityLOV.index();
    public static final int MRLTACCOUNTMASTERVIEW = AttributesEnum.MrltAccountmasterView.index();
    public static final int MRLREFPERVIEW = AttributesEnum.MrlrefPerView.index();
    public static final int MRLREFCLASSVIEWMANU = AttributesEnum.MrlrefClassViewManu.index();
    public static final int MRLTDOCUMENTSVIEW = AttributesEnum.MrltDocumentsView.index();
    public static final int ASSETSTATUSLOV1 = AttributesEnum.AssetStatusLOV1.index();
    public static final int CUSTATTRIBSFORASSETS = AttributesEnum.CustattribsForAssets.index();
    public static final int YESNOBOOLEANASSET = AttributesEnum.YesNoBooleanAsset.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltAssetViewRowImpl() {
    }

    /**
     * Gets MrltAsset entity object.
     * @return the MrltAsset
     */
    public MrltAssetImpl getMrltAsset() {
        return (MrltAssetImpl)getEntity(ENTITY_MRLTASSET);
    }

    /**
     * Gets the attribute value for ASSETCD using the alias name Assetcd.
     * @return the ASSETCD
     */
    public String getAssetcd() {
        return (String) getAttributeInternal(ASSETCD);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETCD using the alias name Assetcd.
     * @param value value to set the ASSETCD
     */
    public void setAssetcd(String value) {
        setAttributeInternal(ASSETCD, value);
    }

    /**
     * Gets the attribute value for ASSETCLASS using the alias name Assetclass.
     * @return the ASSETCLASS
     */
    public String getAssetclass() {
        return (String) getAttributeInternal(ASSETCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETCLASS using the alias name Assetclass.
     * @param value value to set the ASSETCLASS
     */
    public void setAssetclass(String value) {
        setAttributeInternal(ASSETCLASS, value);
    }

    /**
     * Gets the attribute value for ASSETMANUFACT using the alias name Assetmanufact.
     * @return the ASSETMANUFACT
     */
    public String getAssetmanufact() {
        return (String) getAttributeInternal(ASSETMANUFACT);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETMANUFACT using the alias name Assetmanufact.
     * @param value value to set the ASSETMANUFACT
     */
    public void setAssetmanufact(String value) {
        setAttributeInternal(ASSETMANUFACT, value);
    }

    /**
     * Gets the attribute value for ASSETSTATUS using the alias name Assetstatus.
     * @return the ASSETSTATUS
     */
    public String getAssetstatus() {
        return (String) getAttributeInternal(ASSETSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETSTATUS using the alias name Assetstatus.
     * @param value value to set the ASSETSTATUS
     */
    public void setAssetstatus(String value) {
        setAttributeInternal(ASSETSTATUS, value);
    }

    /**
     * Gets the attribute value for COMMISS using the alias name Commiss.
     * @return the COMMISS
     */
    public Timestamp getCommiss() {
        return (Timestamp) getAttributeInternal(COMMISS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMISS using the alias name Commiss.
     * @param value value to set the COMMISS
     */
    public void setCommiss(Timestamp value) {
        setAttributeInternal(COMMISS, value);
    }

    /**
     * Gets the attribute value for WITHDRAW using the alias name Withdraw.
     * @return the WITHDRAW
     */
    public Timestamp getWithdraw() {
        return (Timestamp) getAttributeInternal(WITHDRAW);
    }

    /**
     * Sets <code>value</code> as attribute value for WITHDRAW using the alias name Withdraw.
     * @param value value to set the WITHDRAW
     */
    public void setWithdraw(Timestamp value) {
        setAttributeInternal(WITHDRAW, value);
    }

    /**
     * Gets the attribute value for CREATED using the alias name Created.
     * @return the CREATED
     */
    public Timestamp getCreated() {
        return (Timestamp) getAttributeInternal(CREATED);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED using the alias name Created.
     * @param value value to set the CREATED
     */
    public void setCreated(Timestamp value) {
        setAttributeInternal(CREATED, value);
    }

    /**
     * Gets the attribute value for MODEL using the alias name Model.
     * @return the MODEL
     */
    public String getModel() {
        return (String) getAttributeInternal(MODEL);
    }

    /**
     * Sets <code>value</code> as attribute value for MODEL using the alias name Model.
     * @param value value to set the MODEL
     */
    public void setModel(String value) {
        setAttributeInternal(MODEL, value);
    }

    /**
     * Gets the attribute value for UPDATED using the alias name Updated.
     * @return the UPDATED
     */
    public Timestamp getUpdated() {
        return (Timestamp) getAttributeInternal(UPDATED);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED using the alias name Updated.
     * @param value value to set the UPDATED
     */
    public void setUpdated(Timestamp value) {
        setAttributeInternal(UPDATED, value);
    }

    /**
     * Gets the attribute value for UPDATEDBY using the alias name Updatedby.
     * @return the UPDATEDBY
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATEDBY using the alias name Updatedby.
     * @param value value to set the UPDATEDBY
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for ORG using the alias name Org.
     * @return the ORG
     */
    public String getOrg() {
        return (String) getAttributeInternal(ORG);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG using the alias name Org.
     * @param value value to set the ORG
     */
    public void setOrg(String value) {
        setAttributeInternal(ORG, value);
    }

    /**
     * Gets the attribute value for ASSETACCTNUM using the alias name Assetacctnum.
     * @return the ASSETACCTNUM
     */
    public String getAssetacctnum() {
        return (String) getAttributeInternal(ASSETACCTNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETACCTNUM using the alias name Assetacctnum.
     * @param value value to set the ASSETACCTNUM
     */
    public void setAssetacctnum(String value) {
        setAttributeInternal(ASSETACCTNUM, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for CRITICALITY using the alias name Criticality.
     * @return the CRITICALITY
     */
    public String getCriticality() {
        return (String) getAttributeInternal(CRITICALITY);
    }

    /**
     * Sets <code>value</code> as attribute value for CRITICALITY using the alias name Criticality.
     * @param value value to set the CRITICALITY
     */
    public void setCriticality(String value) {
        setAttributeInternal(CRITICALITY, value);
    }

    /**
     * Gets the attribute value for ASSETDOCID using the alias name Assetdocid.
     * @return the ASSETDOCID
     */
    public Long getAssetdocid() {
        return (Long) getAttributeInternal(ASSETDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSETDOCID using the alias name Assetdocid.
     * @param value value to set the ASSETDOCID
     */
    public void setAssetdocid(Long value) {
        setAttributeInternal(ASSETDOCID, value);
    }

    /**
     * Gets the attribute value for ISRESOURCE using the alias name Isresource.
     * @return the ISRESOURCE
     */
    public String getIsresource() {
        return (String) getAttributeInternal(ISRESOURCE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISRESOURCE using the alias name Isresource.
     * @param value value to set the ISRESOURCE
     */
    public void setIsresource(String value) {
        setAttributeInternal(ISRESOURCE, value);
    }

    /**
     * Gets the attribute value for NOTAVAILABLE using the alias name Notavailable.
     * @return the NOTAVAILABLE
     */
    public String getNotavailable() {
        return (String) getAttributeInternal(NOTAVAILABLE);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTAVAILABLE using the alias name Notavailable.
     * @param value value to set the NOTAVAILABLE
     */
    public void setNotavailable(String value) {
        setAttributeInternal(NOTAVAILABLE, value);
    }

    /**
     * Gets the attribute value for SERIALNO using the alias name Serialno.
     * @return the SERIALNO
     */
    public String getSerialno() {
        return (String) getAttributeInternal(SERIALNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SERIALNO using the alias name Serialno.
     * @param value value to set the SERIALNO
     */
    public void setSerialno(String value) {
        setAttributeInternal(SERIALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tUploadPhoto.
     * @return the tUploadPhoto
     */
    public String gettUploadPhoto() {
        return (String) getAttributeInternal(TUPLOADPHOTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tUploadPhoto.
     * @param value value to set the  tUploadPhoto
     */
    public void settUploadPhoto(String value) {
        setAttributeInternal(TUPLOADPHOTO, value);
    }

    /**
     * Gets the attribute value for T_POSTED_ASSET_DOC_ID using the alias name tPostedAssetDocId.
     * @return the T_POSTED_ASSET_DOC_ID
     */
    public String gettPostedAssetDocId() {
        return (String) getAttributeInternal(TPOSTEDASSETDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for T_POSTED_ASSET_DOC_ID using the alias name tPostedAssetDocId.
     * @param value value to set the T_POSTED_ASSET_DOC_ID
     */
    public void settPostedAssetDocId(String value) {
        setAttributeInternal(TPOSTEDASSETDOCID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltCustattribvaluesView.
     */
    public RowIterator getMrltCustattribvaluesView() {
        return (RowIterator)getAttributeInternal(MRLTCUSTATTRIBVALUESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltReadingView.
     */
    public RowIterator getMrltReadingView() {
        return (RowIterator)getAttributeInternal(MRLTREADINGVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltSparesView.
     */
    public RowIterator getMrltSparesView() {
        return (RowIterator)getAttributeInternal(MRLTSPARESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AssetCommentsView.
     */
    public RowIterator getAssetCommentsView() {
        return (RowIterator)getAttributeInternal(ASSETCOMMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WOEvents.
     */
    public RowIterator getWOEvents() {
        return (RowIterator)getAttributeInternal(WOEVENTS);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltAssetdocumentsView.
     */
    public RowIterator getMrltAssetdocumentsView() {
        return (RowIterator)getAttributeInternal(MRLTASSETDOCUMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AssetReading.
     */
    public RowIterator getAssetReading() {
        return (RowIterator)getAttributeInternal(ASSETREADING);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltAssetdocsvwView.
     */
    public RowIterator getMrltAssetdocsvwView() {
        return (RowIterator)getAttributeInternal(MRLTASSETDOCSVWVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link WOTotalsView.
     */
    public RowIterator getWOTotalsView() {
        return (RowIterator)getAttributeInternal(WOTOTALSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefClassView1.
     */
    public RowSet getMrlrefClassView1() {
        return (RowSet)getAttributeInternal(MRLREFCLASSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AssetCriticalityLOV.
     */
    public RowSet getAssetCriticalityLOV() {
        return (RowSet)getAttributeInternal(ASSETCRITICALITYLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltAccountmasterView.
     */
    public RowSet getMrltAccountmasterView() {
        return (RowSet)getAttributeInternal(MRLTACCOUNTMASTERVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefPerView.
     */
    public RowSet getMrlrefPerView() {
        return (RowSet)getAttributeInternal(MRLREFPERVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefClassViewManu.
     */
    public RowSet getMrlrefClassViewManu() {
        return (RowSet)getAttributeInternal(MRLREFCLASSVIEWMANU);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltDocumentsView.
     */
    public RowSet getMrltDocumentsView() {
        return (RowSet)getAttributeInternal(MRLTDOCUMENTSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AssetStatusLOV1.
     */
    public RowSet getAssetStatusLOV1() {
        return (RowSet)getAttributeInternal(ASSETSTATUSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustattribsForAssets.
     */
    public RowSet getCustattribsForAssets() {
        return (RowSet)getAttributeInternal(CUSTATTRIBSFORASSETS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoBooleanAsset.
     */
    public RowSet getYesNoBooleanAsset() {
        return (RowSet)getAttributeInternal(YESNOBOOLEANASSET);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
