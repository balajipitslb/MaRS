package its.mnr.mp5.vo.workorder;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;
import its.mnr.mp5.eo.local.R5eventsImpl;

import its.mnr.mp5.lov.UcodesImpl;
import its.mnr.mp5.lov.isAccountActiveImpl;
import its.mnr.mp5.vo.workorder.common.WOEventsRow;

import java.sql.CallableStatement;
import java.sql.SQLException;
import its.mnr.mp5.model.Util;

import its.mnr.mp5.vo.admin.MrlrefMp5profileViewImpl;
import its.mnr.mp5.vo.admin.MrltAccountmasterViewImpl;

import java.io.IOException;
import java.io.PrintWriter;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;

import oracle.jbo.domain.Char;

import oracle.xml.parser.v2.XMLNode;
import org.w3c.dom.Node;

import java.sql.Types;
import java.util.HashMap;

import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.XMLInterface;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.DBTransaction;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 18 11:27:52 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WOEventsRowImpl extends ExtendedViewRowImpl implements WOEventsRow {

    public static final int ENTITY_R5EVENTS = 0;
    public static int VARCHAR2 = Types.VARCHAR;
    
    /* Helper methods */    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /* Helper methods */  
    public Boolean sendEstimateFailure(String toaddress, String subject, String body){
            String fromemail= getMP5Profile("AdminEmailAddress");
            String host = getMP5Profile("SMTPHost");
            String sport = getMP5Profile("SMTPPort");
            Integer iport = Integer.parseInt(sport);
            //callStoredFunction(VARCHAR2, "mnrpkg.sendEmail(?,?,?,?,?)", new Object[] {toaddress,  subject,  body,  host,  iport,  fromemail});        
                        
            Util.sendMessage(toaddress,  subject,  body,  host,  iport,  fromemail);
        return null;
        }
    public String getEstimateCriteria(){            
            String ret;
            String sEst;
            String sOver = null;
            Double dOver = null;
            String sOverUom  = null;
            String sAcctNum = getEvtCostcode();
                        
            //set and execute View Criteria            
            RowSet rs = this.getMrltAccountmasterView();
            MrltAccountmasterViewImpl impl = (MrltAccountmasterViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("AllAccountsByAcctCd");
            vc.resetCriteria();
            impl.setActNumBind(sAcctNum);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                //System.out.println("ITS_EstimateIns Ret = " + (String)rw.getAttribute("Acctnum"));
                sEst = (String)rw.getAttribute("Estimate");
                //System.out.println("sEst: " + sEst);
                if (sEst.equals("Y")){
                    //System.out.println("equals Y");
                    dOver = (Double)rw.getAttribute("Over");
                        //System.out.println("dOver: " + dOver);
                     sOver =  dOver.toString();
                        //System.out.println("sOver: " + sOver);
                    sOverUom = (String)rw.getAttribute("Overuom"); 
                        //System.out.println("sOverUom: " + sOverUom);
                    }
                rs.closeRowSet();
                ret = "EST:" + sEst + "," + "OVER:" + sOver + "," + "UOM:" + sOverUom + ",";
                return ret;
            }
            //System.out.println("rw == null");
            return null;
        }
    
    public String getEstimateCriteriaFBK(){
            String ret;
            String sEst;
            String sOver = null;
            String sOverUom  = null;
            String sAcctNum = getEvtCostcode();
            DBTransaction trans = getDBTransaction();
            //ApplicationModule am = trans.getRootApplicationModule();
            ViewObject vo = trans.findViewObject("MrltAccountmasterView");
            Key voKey = new Key(new Object[] { sAcctNum });
            Row[] traFound = vo.findByKey(voKey, 1);

            if (traFound != null && traFound.length > 0) {
                //System.out.println("Criteria Found");
                Row rw = traFound[0];
                sEst = (String)rw.getAttribute("Estimate");
                sOver = (String)rw.getAttribute("Over");
                sOverUom = (String)rw.getAttribute("Overuom");
                ret = "EST:" + sEst + "," + "OVER:" + sOver + "," + "UOM:" + sOverUom + ",";    
            return ret;
            }
            return null;
        }
    public Boolean SendEstimateThruEDIFlg(){
            String ret= getMP5Profile("SendEstimateThruEDIFlg");
            return (ret.equals("Y")? true :false);
        }
    public Boolean SendEstimateExceedAlert(){
            String ret= getMP5Profile("SendEstimateExceedAlert");
            return (ret.equals("Y")? true :false);
        }
    
    public String getMP5Profile(String sprofile){
            String ret;
            //set and execute View Criteria
            
            RowSet rs = this.getMrlrefMp5profileView();
            MrlrefMp5profileViewImpl impl = (MrlrefMp5profileViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("MP5ProfileByProfile");
            vc.resetCriteria();
            impl.setprofileBind(sprofile);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ret = (String)rw.getAttribute("Value");
                rs.closeRowSet();
                return ret;
            }

            return null;
        }
    public String getAccountDetail(String sacctnum, String sattribute){
            String ret;
            //set and execute View Criteria
            
            RowSet rs = this.getMrltAccountmasterView();
            MrltAccountmasterViewImpl impl = (MrltAccountmasterViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("AllAccountsByAcctCd");
            vc.resetCriteria();
            impl.setActNumBind(sacctnum);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ret = (String)rw.getAttribute(sattribute);
                rs.closeRowSet();
                return ret;
            }

            return null;
        }

    public Boolean writeEstimateXML(String sestid){        
        //set and execute View Criteria            
        RowSet rs = this.getEstimate();
        EstimateImpl impl = (EstimateImpl)rs.getViewObject();
        ViewCriteria vc = impl.getViewCriteria("EstimateCriteria");
        vc.resetCriteria();
        impl.setEIdBind(sestid);
        impl.applyViewCriteria(vc);
        // set range size to 1 since we expect a single record
        impl.setRangeSize(1);
        // execute query to make sure we get latest data!
        impl.executeQuery();
        Row rw = impl.first();

        if (rw != null) {
            //System.out.println("Estimate Found");
            String filepath = getMP5Profile("EstimateOutPath");            
            String filename = filepath + sestid + ".xml";
            //System.out.println(filename + " : " + rw.getAttribute("Estid"));
            Util.printXML(rw.writeXML(-1, XMLInterface.XML_OPT_ALL_ROWS), filename);
            //System.out.println("after writeXML");
            return true;
        }
        return false;
    }
    public Boolean writeEstimateCompletionXML(String sacctnum, String sevtcode){     
        //System.out.println("inside writeEstimateCompletionXML:" + sacctnum + ":" + sevtcode);
        Boolean ret = false;
        Boolean bSendEstCompletion = false;

        //check Profile Invoice EDI Flag and Account Master Estimate Completion Flag.
        String sendInvoiceThruEDIFlg = getMP5Profile("SendInvoiceThruEDIFlg");
        if (!sendInvoiceThruEDIFlg.equals("Y")) {
           //System.out.println("! Y");
            return true;
        } else if (sendInvoiceThruEDIFlg.equals("Y")) {
            String sEstcmpltn = getAccountDetail(sacctnum, "Estcmpltn");
            if ("Y".equals(sEstcmpltn)) {
                bSendEstCompletion = true;
            }
            //System.out.println("bSendEstCompletion =" + bSendEstCompletion);
        }
        
        if (bSendEstCompletion) {
            //System.out.println("getting WO details:" + sevtcode);
            WOEventsImpl impl = (WOEventsImpl)this.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("WObyEvtCode");
            vc.resetCriteria();
            impl.setWOEvtCodeBind(sevtcode);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();

            if (rw != null) {
                //check Estimate ID exists and status = Approved
                RowSet rs = this.getEstimate();
                EstimateImpl implEst = (EstimateImpl)rs.getViewObject();
                ViewCriteria vcEst = implEst.getViewCriteria("EstimateCriteria");
                vcEst.resetCriteria();
                implEst.setEIdBind((String)rw.getAttribute("ItsEstid"));
                implEst.applyViewCriteria(vcEst);
                // set range size to 1 since we expect a single record
                implEst.setRangeSize(1);
                // execute query to make sure we get latest data!
                implEst.executeQuery();
                Row rwEst = implEst.first();
                if (rwEst != null) {
                    String sEstimateStatus = (String)rwEst.getAttribute("Status");
                    if ("APP".equals(sEstimateStatus)) {
                        //System.out.println("Estimate APPROVED");
                        HashMap attrMap = new HashMap(2);
                        String HEADERVODEF = "its.mnr.mp5.vo.workorder.WOEvents";
                        String DETAILVODEF = "its.mnr.mp5.vo.workorder.Estimate";
                        String[] HEADERATTRS =
                        { "EvtCostcode", "EvtDesc", "EvtStart", "EvtStatus", "EvtCostcode", "ItsEstid", "Estimate1" };
                        String[] DETAILATTRS =
                        { "Estid", "Wonum", "Ver", "Estdt", "Status", "Upddt", "Updby", "Appnum", "Equipnum",
                          "Acctnum", "Tlbrhrs", "Tlbrcst", "Tpartcst", "Eqtype" };
                        attrMap.put(HEADERVODEF, HEADERATTRS);
                        attrMap.put(DETAILVODEF, DETAILATTRS);
                        ///*
                        String filepath = getMP5Profile("EstimateOutPath");
                        String filename = filepath + sevtcode + "#EstComp.xml";
                        Util.printXML(rw.writeXML(XMLInterface.XML_OPT_ALL_ROWS, attrMap), filename);
                        //*/
                        /*Uncomment to print to screen*/
                        /*
                        Node n = rw.writeXML(-1, attrMap);
                        PrintWriter pw = new PrintWriter(System.out);
                        try {
                            ((XMLNode)n).print(pw);
                        } catch (IOException e) {
                        }
                        */
                        ret = true;
                    }
                }
            }
        }
        return ret;
    }

    public Boolean updateWOStatus(String newSts) {
        //System.out.println("updateWOStatus(), newSts: " + newSts);
        Boolean ret = false;
        String cENTITY = "EVST";       
        RowSet rs = this.getUcodes();
        UcodesImpl impl = (UcodesImpl)rs.getViewObject();
        ViewCriteria vc = impl.getViewCriteria("UcodesCriteria");
        vc.resetCriteria();
        impl.setUcoEntityBind(cENTITY);
        impl.setUcoCodeBind(newSts);
        impl.applyViewCriteria(vc);
        // set range size to 1 since we expect a single record
        impl.setRangeSize(1);
        // execute query to make sure we get latest data!
        impl.executeQuery();
        Row rw = impl.first();
        //find RCODE
        if (rw != null) {
            String rcode = (String)rw.getAttribute("UcoRcode");
            //System.out.println("rcode: " + rcode);
            if (rcode != null) {
                //update status
                //System.out.println("!= null" );
                //System.out.println("newSts: " + newSts);
                setPostedEvtStatus(newSts);
                setEvtStatus(newSts);
                setEvtRstatus(rcode);
                //System.out.println("getEvtStatus(): " + getEvtStatus());
            }
            ret = true;
        }
        return ret;

    }
    
    public String updateWODates(String sEvtcode, Date newDate) {
        //System.out.println("updateWODates()");
        
        String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.WORKORDERDATEUPD(?,?)",
                                          new Object[] {sEvtcode,newDate});
        //System.out.println("ITS_EstimateIns Ret = " + ret);
        return ret;

    }

    public String ITS_EstimateIns(String WOEventCode, String WOAcctNum) {
             //System.out.println("inside ITS_EstimateIns function: " + WOEventCode + ", " +WOAcctNum);
             
             String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.ITS_EstimateIns(?,?)",
                                               new Object[] {WOEventCode,WOAcctNum});
             //System.out.println("ITS_EstimateIns Ret = " + ret);
             return ret;
         }
    public String ITS_EstimateUpd(String pEstId, String pStatus, String pUpdBy, String pAppNum, String pReason, String pRspType, String pIp) {
             //System.out.println("inside ITS_EstimateUpd function() ");
             
             String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.ITS_EstimateUpd(?,?,?,?,?,?,?)",
                                               new Object[] {pEstId,pStatus,pUpdBy,pAppNum,pReason,pRspType,pIp});
             //System.out.println("ITS_EstimateUpd Ret = " + ret);
             return ret;
         }
    public String setEstId(String sestid){
        setItsEstid(sestid);
        //System.out.println("setItsEstid:" + sestid);
        return null;
    }

    public boolean isAccountActive(String sacctnum) {
        boolean ret = false;
        //set and execute View Criteria

        RowSet rs = this.getisAccountActive();
        isAccountActiveImpl impl = (isAccountActiveImpl)rs.getViewObject();
        impl.setActNumBind(sacctnum);
        // set range size to 1 since we expect a single record
        impl.setRangeSize(1);
        // execute query to make sure we get latest data!
        impl.executeQuery();
        Row rw = impl.first();
        if (rw != null) {
            String isActive = (String)rw.getAttribute("Amstractive");
            //System.out.println("isActive: " + isActive);
            ret = (isActive.equals("Y")?true: false);
        }

        return ret;
    }
    public String RejWOPartsReturn(String pEvtCode) {
             //System.out.println("inside brRejWOPartsReturn function: " + pEvtCode);
             
             String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.RejWOPartsReturn(?)",
                                               new Object[] {pEvtCode});
             //System.out.println("brRejWOPartsReturn Ret = " + ret);
             return ret;
         }
    
    public String createEstimateInvoice(String pEvtCode) {
             //System.out.println("inside createEstimateInvoice function: " + pEvtCode);
             
             String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.createEstimateInvoice(?)",
                                               new Object[] {pEvtCode});
             //System.out.println("createEstimateInvoice Ret = " + ret);
             return ret;
         }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EvtAcd {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtAcd();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtAcd((Integer) value);
            }
        }
        ,
        EvtClass {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtClass();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtClass((String) value);
            }
        }
        ,
        EvtClassOrg {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtClassOrg();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtClassOrg((String) value);
            }
        }
        ,
        EvtCode {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtCode();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EvtCompleted {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtCompleted();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtCompleted((Timestamp) value);
            }
        }
        ,
        EvtCostcode {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtCostcode();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtCostcode((String) value);
            }
        }
        ,
        EvtCreated {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtCreated();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtCreated((Timestamp) value);
            }
        }
        ,
        EvtCreatedby {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtCreatedby();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtCreatedby((String) value);
            }
        }
        ,
        EvtDate {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtDate();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtDate((Timestamp) value);
            }
        }
        ,
        EvtDesc {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtDesc();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtDesc((String) value);
            }
        }
        ,
        EvtEnteredby {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtEnteredby();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtEnteredby((String) value);
            }
        }
        ,
        EvtJobtype {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtJobtype();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtJobtype((String) value);
            }
        }
        ,
        EvtObject {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtObject();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtObject((String) value);
            }
        }
        ,
        EvtObjectOrg {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtObjectOrg();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtObjectOrg((String) value);
            }
        }
        ,
        EvtOrg {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtOrg();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtOrg((String) value);
            }
        }
        ,
        EvtOrigin {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtOrigin();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtOrigin((String) value);
            }
        }
        ,
        EvtReported {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtReported();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtReported((Timestamp) value);
            }
        }
        ,
        EvtRstatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtRstatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtRstatus((String) value);
            }
        }
        ,
        EvtRtype {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtRtype();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtRtype((String) value);
            }
        }
        ,
        EvtShift {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtShift();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtShift((String) value);
            }
        }
        ,
        EvtStart {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtStart();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtStart((Timestamp) value);
            }
        }
        ,
        EvtStatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtStatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtStatus((String) value);
            }
        }
        ,
        EvtType {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtType();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtType((String) value);
            }
        }
        ,
        EvtUpdated {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtUpdated();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtUpdated((Timestamp) value);
            }
        }
        ,
        EvtUpdatedby {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtUpdatedby();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtUpdatedby((String) value);
            }
        }
        ,
        EvtWOType {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEvtWOType();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setEvtWOType((String) value);
            }
        }
        ,
        ItsEstid {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsEstid();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsEstid((String) value);
            }
        }
        ,
        ItsIsadf {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsIsadf();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItsIsasset {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsIsasset();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsIsasset((String) value);
            }
        }
        ,
        ItsIspm {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsIspm();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItsNote {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsNote();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsNote((String) value);
            }
        }
        ,
        PostedEvtStatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getPostedEvtStatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TotalHours {
            public Object get(WOEventsRowImpl obj) {
                return obj.getTotalHours();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setTotalHours((Double) value);
            }
        }
        ,
        TotalLaborCst {
            public Object get(WOEventsRowImpl obj) {
                return obj.getTotalLaborCst();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setTotalLaborCst((Double) value);
            }
        }
        ,
        TotalPartCst {
            public Object get(WOEventsRowImpl obj) {
                return obj.getTotalPartCst();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setTotalPartCst((Double) value);
            }
        }
        ,
        TotalPartsLabor {
            public Object get(WOEventsRowImpl obj) {
                return obj.getTotalPartsLabor();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setTotalPartsLabor((Double) value);
            }
        }
        ,
        StatusSwitcher {
            public Object get(WOEventsRowImpl obj) {
                return obj.getStatusSwitcher();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CostcodeSwitcher {
            public Object get(WOEventsRowImpl obj) {
                return obj.getCostcodeSwitcher();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JobtypeSwitcher {
            public Object get(WOEventsRowImpl obj) {
                return obj.getJobtypeSwitcher();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ClassSwitcher {
            public Object get(WOEventsRowImpl obj) {
                return obj.getClassSwitcher();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setClassSwitcher((String) value);
            }
        }
        ,
        isTotalHourOver {
            public Object get(WOEventsRowImpl obj) {
                return obj.getisTotalHourOver();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isTotalPartsLaborOver {
            public Object get(WOEventsRowImpl obj) {
                return obj.getisTotalPartsLaborOver();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItsAccountrateid {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsAccountrateid();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsAccountrateid((String) value);
            }
        }
        ,
        ItsReviewed {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsReviewed();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsReviewed((String) value);
            }
        }
        ,
        ItsReviewedby {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsReviewedby();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsReviewedby((String) value);
            }
        }
        ,
        ItsReviewdt {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsReviewdt();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsReviewdt((Timestamp) value);
            }
        }
        ,
        ItsPerformdt {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsPerformdt();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsPerformdt((Timestamp) value);
            }
        }
        ,
        ItsPerformed {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsPerformed();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsPerformed((String) value);
            }
        }
        ,
        ItsPerformedby {
            public Object get(WOEventsRowImpl obj) {
                return obj.getItsPerformedby();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setItsPerformedby((String) value);
            }
        }
        ,
        tTaxPerc {
            public Object get(WOEventsRowImpl obj) {
                return obj.gettTaxPerc();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.settTaxPerc((Double) value);
            }
        }
        ,
        tTotalTax {
            public Object get(WOEventsRowImpl obj) {
                return obj.gettTotalTax();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.settTotalTax((Double) value);
            }
        }
        ,
        tWOTotal {
            public Object get(WOEventsRowImpl obj) {
                return obj.gettWOTotal();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.settWOTotal((Double) value);
            }
        }
        ,
        tt {
            public Object get(WOEventsRowImpl obj) {
                return obj.gettt();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAccountmasterView1 {
            public Object get(WOEventsRowImpl obj) {
                return obj.getMrltAccountmasterView1();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Estimate1 {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEstimate1();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltFlagassociation_VO {
            public Object get(WOEventsRowImpl obj) {
                return obj.getMrltFlagassociation_VO();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FlagAssoc_VVO {
            public Object get(WOEventsRowImpl obj) {
                return obj.getFlagAssoc_VVO();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefMp5profileView {
            public Object get(WOEventsRowImpl obj) {
                return obj.getMrlrefMp5profileView();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAccountmasterView {
            public Object get(WOEventsRowImpl obj) {
                return obj.getMrltAccountmasterView();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WorkOrderMaster {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWorkOrderMaster();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WorkorderStatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWorkorderStatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WorkorderStatusAll {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWorkorderStatusAll();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HeaderCodes {
            public Object get(WOEventsRowImpl obj) {
                return obj.getHeaderCodes();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HeaderCodesAFQuery {
            public Object get(WOEventsRowImpl obj) {
                return obj.getHeaderCodesAFQuery();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Estimate {
            public Object get(WOEventsRowImpl obj) {
                return obj.getEstimate();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Ucodes {
            public Object get(WOEventsRowImpl obj) {
                return obj.getUcodes();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOStatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWOStatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UcodesWOStatus {
            public Object get(WOEventsRowImpl obj) {
                return obj.getUcodesWOStatus();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOAccountMaster {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWOAccountMaster();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOAccountMasterAFQuery {
            public Object get(WOEventsRowImpl obj) {
                return obj.getWOAccountMasterAFQuery();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        isAccountActive {
            public Object get(WOEventsRowImpl obj) {
                return obj.getisAccountActive();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        YesNoBoolean {
            public Object get(WOEventsRowImpl obj) {
                return obj.getYesNoBoolean();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TaxRateValues1 {
            public Object get(WOEventsRowImpl obj) {
                return obj.getTaxRateValues1();
            }

            public void put(WOEventsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(WOEventsRowImpl object);

        public abstract void put(WOEventsRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EVTACD = AttributesEnum.EvtAcd.index();
    public static final int EVTCLASS = AttributesEnum.EvtClass.index();
    public static final int EVTCLASSORG = AttributesEnum.EvtClassOrg.index();
    public static final int EVTCODE = AttributesEnum.EvtCode.index();
    public static final int EVTCOMPLETED = AttributesEnum.EvtCompleted.index();
    public static final int EVTCOSTCODE = AttributesEnum.EvtCostcode.index();
    public static final int EVTCREATED = AttributesEnum.EvtCreated.index();
    public static final int EVTCREATEDBY = AttributesEnum.EvtCreatedby.index();
    public static final int EVTDATE = AttributesEnum.EvtDate.index();
    public static final int EVTDESC = AttributesEnum.EvtDesc.index();
    public static final int EVTENTEREDBY = AttributesEnum.EvtEnteredby.index();
    public static final int EVTJOBTYPE = AttributesEnum.EvtJobtype.index();
    public static final int EVTOBJECT = AttributesEnum.EvtObject.index();
    public static final int EVTOBJECTORG = AttributesEnum.EvtObjectOrg.index();
    public static final int EVTORG = AttributesEnum.EvtOrg.index();
    public static final int EVTORIGIN = AttributesEnum.EvtOrigin.index();
    public static final int EVTREPORTED = AttributesEnum.EvtReported.index();
    public static final int EVTRSTATUS = AttributesEnum.EvtRstatus.index();
    public static final int EVTRTYPE = AttributesEnum.EvtRtype.index();
    public static final int EVTSHIFT = AttributesEnum.EvtShift.index();
    public static final int EVTSTART = AttributesEnum.EvtStart.index();
    public static final int EVTSTATUS = AttributesEnum.EvtStatus.index();
    public static final int EVTTYPE = AttributesEnum.EvtType.index();
    public static final int EVTUPDATED = AttributesEnum.EvtUpdated.index();
    public static final int EVTUPDATEDBY = AttributesEnum.EvtUpdatedby.index();
    public static final int EVTWOTYPE = AttributesEnum.EvtWOType.index();
    public static final int ITSESTID = AttributesEnum.ItsEstid.index();
    public static final int ITSISADF = AttributesEnum.ItsIsadf.index();
    public static final int ITSISASSET = AttributesEnum.ItsIsasset.index();
    public static final int ITSISPM = AttributesEnum.ItsIspm.index();
    public static final int ITSNOTE = AttributesEnum.ItsNote.index();
    public static final int POSTEDEVTSTATUS = AttributesEnum.PostedEvtStatus.index();
    public static final int TOTALHOURS = AttributesEnum.TotalHours.index();
    public static final int TOTALLABORCST = AttributesEnum.TotalLaborCst.index();
    public static final int TOTALPARTCST = AttributesEnum.TotalPartCst.index();
    public static final int TOTALPARTSLABOR = AttributesEnum.TotalPartsLabor.index();
    public static final int STATUSSWITCHER = AttributesEnum.StatusSwitcher.index();
    public static final int COSTCODESWITCHER = AttributesEnum.CostcodeSwitcher.index();
    public static final int JOBTYPESWITCHER = AttributesEnum.JobtypeSwitcher.index();
    public static final int CLASSSWITCHER = AttributesEnum.ClassSwitcher.index();
    public static final int ISTOTALHOUROVER = AttributesEnum.isTotalHourOver.index();
    public static final int ISTOTALPARTSLABOROVER = AttributesEnum.isTotalPartsLaborOver.index();
    public static final int ITSACCOUNTRATEID = AttributesEnum.ItsAccountrateid.index();
    public static final int ITSREVIEWED = AttributesEnum.ItsReviewed.index();
    public static final int ITSREVIEWEDBY = AttributesEnum.ItsReviewedby.index();
    public static final int ITSREVIEWDT = AttributesEnum.ItsReviewdt.index();
    public static final int ITSPERFORMDT = AttributesEnum.ItsPerformdt.index();
    public static final int ITSPERFORMED = AttributesEnum.ItsPerformed.index();
    public static final int ITSPERFORMEDBY = AttributesEnum.ItsPerformedby.index();
    public static final int TTAXPERC = AttributesEnum.tTaxPerc.index();
    public static final int TTOTALTAX = AttributesEnum.tTotalTax.index();
    public static final int TWOTOTAL = AttributesEnum.tWOTotal.index();
    public static final int TT = AttributesEnum.tt.index();
    public static final int MRLTACCOUNTMASTERVIEW1 = AttributesEnum.MrltAccountmasterView1.index();
    public static final int ESTIMATE1 = AttributesEnum.Estimate1.index();
    public static final int MRLTFLAGASSOCIATION_VO = AttributesEnum.MrltFlagassociation_VO.index();
    public static final int FLAGASSOC_VVO = AttributesEnum.FlagAssoc_VVO.index();
    public static final int MRLREFMP5PROFILEVIEW = AttributesEnum.MrlrefMp5profileView.index();
    public static final int MRLTACCOUNTMASTERVIEW = AttributesEnum.MrltAccountmasterView.index();
    public static final int WORKORDERMASTER = AttributesEnum.WorkOrderMaster.index();
    public static final int WORKORDERSTATUS = AttributesEnum.WorkorderStatus.index();
    public static final int WORKORDERSTATUSALL = AttributesEnum.WorkorderStatusAll.index();
    public static final int HEADERCODES = AttributesEnum.HeaderCodes.index();
    public static final int HEADERCODESAFQUERY = AttributesEnum.HeaderCodesAFQuery.index();
    public static final int ESTIMATE = AttributesEnum.Estimate.index();
    public static final int UCODES = AttributesEnum.Ucodes.index();
    public static final int WOSTATUS = AttributesEnum.WOStatus.index();
    public static final int UCODESWOSTATUS = AttributesEnum.UcodesWOStatus.index();
    public static final int WOACCOUNTMASTER = AttributesEnum.WOAccountMaster.index();
    public static final int WOACCOUNTMASTERAFQUERY = AttributesEnum.WOAccountMasterAFQuery.index();
    public static final int ISACCOUNTACTIVE = AttributesEnum.isAccountActive.index();
    public static final int YESNOBOOLEAN = AttributesEnum.YesNoBoolean.index();
    public static final int TAXRATEVALUES1 = AttributesEnum.TaxRateValues1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WOEventsRowImpl() {
    }

    /**
     * Gets R5events entity object.
     * @return the R5events
     */
    public R5eventsImpl getR5events() {
        return (R5eventsImpl)getEntity(ENTITY_R5EVENTS);
    }

    /**
     * Gets the attribute value for EVT_ACD using the alias name EvtAcd.
     * @return the EVT_ACD
     */
    public Integer getEvtAcd() {
        return (Integer) getAttributeInternal(EVTACD);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_ACD using the alias name EvtAcd.
     * @param value value to set the EVT_ACD
     */
    public void setEvtAcd(Integer value) {
        setAttributeInternal(EVTACD, value);
    }

    /**
     * Gets the attribute value for EVT_CLASS using the alias name EvtClass.
     * @return the EVT_CLASS
     */
    public String getEvtClass() {
        return (String) getAttributeInternal(EVTCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_CLASS using the alias name EvtClass.
     * @param value value to set the EVT_CLASS
     */
    public void setEvtClass(String value) {
        setAttributeInternal(EVTCLASS, value);
    }

    /**
     * Gets the attribute value for EVT_CLASS_ORG using the alias name EvtClassOrg.
     * @return the EVT_CLASS_ORG
     */
    public String getEvtClassOrg() {
        return (String) getAttributeInternal(EVTCLASSORG);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_CLASS_ORG using the alias name EvtClassOrg.
     * @param value value to set the EVT_CLASS_ORG
     */
    public void setEvtClassOrg(String value) {
        setAttributeInternal(EVTCLASSORG, value);
    }

    /**
     * Gets the attribute value for EVT_CODE using the alias name EvtCode.
     * @return the EVT_CODE
     */
    public String getEvtCode() {
        return (String) getAttributeInternal(EVTCODE);
    }


    /**
     * Gets the attribute value for EVT_COMPLETED using the alias name EvtCompleted.
     * @return the EVT_COMPLETED
     */
    public Timestamp getEvtCompleted() {
        return (Timestamp) getAttributeInternal(EVTCOMPLETED);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_COMPLETED using the alias name EvtCompleted.
     * @param value value to set the EVT_COMPLETED
     */
    public void setEvtCompleted(Timestamp value) {
        setAttributeInternal(EVTCOMPLETED, value);
    }

    /**
     * Gets the attribute value for EVT_COSTCODE using the alias name EvtCostcode.
     * @return the EVT_COSTCODE
     */
    public String getEvtCostcode() {
        return (String) getAttributeInternal(EVTCOSTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_COSTCODE using the alias name EvtCostcode.
     * @param value value to set the EVT_COSTCODE
     */
    public void setEvtCostcode(String value) {
        setAttributeInternal(EVTCOSTCODE, value);
    }

    /**
     * Gets the attribute value for EVT_CREATED using the alias name EvtCreated.
     * @return the EVT_CREATED
     */
    public Timestamp getEvtCreated() {
        return (Timestamp) getAttributeInternal(EVTCREATED);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_CREATED using the alias name EvtCreated.
     * @param value value to set the EVT_CREATED
     */
    public void setEvtCreated(Timestamp value) {
        setAttributeInternal(EVTCREATED, value);
    }

    /**
     * Gets the attribute value for EVT_CREATEDBY using the alias name EvtCreatedby.
     * @return the EVT_CREATEDBY
     */
    public String getEvtCreatedby() {
        return (String) getAttributeInternal(EVTCREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_CREATEDBY using the alias name EvtCreatedby.
     * @param value value to set the EVT_CREATEDBY
     */
    public void setEvtCreatedby(String value) {
        setAttributeInternal(EVTCREATEDBY, value);
    }

    /**
     * Gets the attribute value for EVT_DATE using the alias name EvtDate.
     * @return the EVT_DATE
     */
    public Timestamp getEvtDate() {
        return (Timestamp) getAttributeInternal(EVTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_DATE using the alias name EvtDate.
     * @param value value to set the EVT_DATE
     */
    public void setEvtDate(Timestamp value) {
        setAttributeInternal(EVTDATE, value);
    }

    /**
     * Gets the attribute value for EVT_DESC using the alias name EvtDesc.
     * @return the EVT_DESC
     */
    public String getEvtDesc() {
        return (String) getAttributeInternal(EVTDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_DESC using the alias name EvtDesc.
     * @param value value to set the EVT_DESC
     */
    public void setEvtDesc(String value) {
        setAttributeInternal(EVTDESC, value.toUpperCase());
    }

    /**
     * Gets the attribute value for EVT_ENTEREDBY using the alias name EvtEnteredby.
     * @return the EVT_ENTEREDBY
     */
    public String getEvtEnteredby() {
        return (String) getAttributeInternal(EVTENTEREDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_ENTEREDBY using the alias name EvtEnteredby.
     * @param value value to set the EVT_ENTEREDBY
     */
    public void setEvtEnteredby(String value) {
        setAttributeInternal(EVTENTEREDBY, value);
    }

    /**
     * Gets the attribute value for EVT_JOBTYPE using the alias name EvtJobtype.
     * @return the EVT_JOBTYPE
     */
    public String getEvtJobtype() {
        return (String) getAttributeInternal(EVTJOBTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_JOBTYPE using the alias name EvtJobtype.
     * @param value value to set the EVT_JOBTYPE
     */
    public void setEvtJobtype(String value) {
        setAttributeInternal(EVTJOBTYPE, value);
    }

    /**
     * Gets the attribute value for EVT_OBJECT using the alias name EvtObject.
     * @return the EVT_OBJECT
     */
    public String getEvtObject() {
        return (String) getAttributeInternal(EVTOBJECT);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_OBJECT using the alias name EvtObject.
     * @param value value to set the EVT_OBJECT
     */
    public void setEvtObject(String value) {
        setAttributeInternal(EVTOBJECT, value);
    }

    /**
     * Gets the attribute value for EVT_OBJECT_ORG using the alias name EvtObjectOrg.
     * @return the EVT_OBJECT_ORG
     */
    public String getEvtObjectOrg() {
        return (String) getAttributeInternal(EVTOBJECTORG);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_OBJECT_ORG using the alias name EvtObjectOrg.
     * @param value value to set the EVT_OBJECT_ORG
     */
    public void setEvtObjectOrg(String value) {
        setAttributeInternal(EVTOBJECTORG, value);
    }

    /**
     * Gets the attribute value for EVT_ORG using the alias name EvtOrg.
     * @return the EVT_ORG
     */
    public String getEvtOrg() {
        return (String) getAttributeInternal(EVTORG);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_ORG using the alias name EvtOrg.
     * @param value value to set the EVT_ORG
     */
    public void setEvtOrg(String value) {
        setAttributeInternal(EVTORG, value);
    }

    /**
     * Gets the attribute value for EVT_ORIGIN using the alias name EvtOrigin.
     * @return the EVT_ORIGIN
     */
    public String getEvtOrigin() {
        return (String) getAttributeInternal(EVTORIGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_ORIGIN using the alias name EvtOrigin.
     * @param value value to set the EVT_ORIGIN
     */
    public void setEvtOrigin(String value) {
        setAttributeInternal(EVTORIGIN, value);
    }

    /**
     * Gets the attribute value for EVT_REPORTED using the alias name EvtReported.
     * @return the EVT_REPORTED
     */
    public Timestamp getEvtReported() {
        return (Timestamp) getAttributeInternal(EVTREPORTED);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_REPORTED using the alias name EvtReported.
     * @param value value to set the EVT_REPORTED
     */
    public void setEvtReported(Timestamp value) {
        setAttributeInternal(EVTREPORTED, value);
    }

    /**
     * Gets the attribute value for EVT_RSTATUS using the alias name EvtRstatus.
     * @return the EVT_RSTATUS
     */
    public String getEvtRstatus() {
        return (String) getAttributeInternal(EVTRSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_RSTATUS using the alias name EvtRstatus.
     * @param value value to set the EVT_RSTATUS
     */
    public void setEvtRstatus(String value) {
        setAttributeInternal(EVTRSTATUS, value);
    }

    /**
     * Gets the attribute value for EVT_RTYPE using the alias name EvtRtype.
     * @return the EVT_RTYPE
     */
    public String getEvtRtype() {
        return (String) getAttributeInternal(EVTRTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_RTYPE using the alias name EvtRtype.
     * @param value value to set the EVT_RTYPE
     */
    public void setEvtRtype(String value) {
        setAttributeInternal(EVTRTYPE, value);
    }

    /**
     * Gets the attribute value for EVT_SHIFT using the alias name EvtShift.
     * @return the EVT_SHIFT
     */
    public String getEvtShift() {
        return (String) getAttributeInternal(EVTSHIFT);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_SHIFT using the alias name EvtShift.
     * @param value value to set the EVT_SHIFT
     */
    public void setEvtShift(String value) {
        setAttributeInternal(EVTSHIFT, value);
    }

    /**
     * Gets the attribute value for EVT_START using the alias name EvtStart.
     * @return the EVT_START
     */
    public Timestamp getEvtStart() {
        return (Timestamp) getAttributeInternal(EVTSTART);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_START using the alias name EvtStart.
     * @param value value to set the EVT_START
     */
    public void setEvtStart(Timestamp value) {
        setAttributeInternal(EVTSTART, value);
    }

    /**
     * Gets the attribute value for EVT_STATUS using the alias name EvtStatus.
     * @return the EVT_STATUS
     */
    public String getEvtStatus() {
        return (String) getAttributeInternal(EVTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_STATUS using the alias name EvtStatus.
     * @param value value to set the EVT_STATUS
     */
    public void setEvtStatus(String value) {
        setAttributeInternal(EVTSTATUS, value);
    }

    /**
     * Gets the attribute value for EVT_TYPE using the alias name EvtType.
     * @return the EVT_TYPE
     */
    public String getEvtType() {
        return (String) getAttributeInternal(EVTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_TYPE using the alias name EvtType.
     * @param value value to set the EVT_TYPE
     */
    public void setEvtType(String value) {
        setAttributeInternal(EVTTYPE, value);
    }

    /**
     * Gets the attribute value for EVT_UPDATED using the alias name EvtUpdated.
     * @return the EVT_UPDATED
     */
    public Timestamp getEvtUpdated() {
        return (Timestamp) getAttributeInternal(EVTUPDATED);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_UPDATED using the alias name EvtUpdated.
     * @param value value to set the EVT_UPDATED
     */
    public void setEvtUpdated(Timestamp value) {
        setAttributeInternal(EVTUPDATED, value);
    }

    /**
     * Gets the attribute value for EVT_UPDATEDBY using the alias name EvtUpdatedby.
     * @return the EVT_UPDATEDBY
     */
    public String getEvtUpdatedby() {
        return (String) getAttributeInternal(EVTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_UPDATEDBY using the alias name EvtUpdatedby.
     * @param value value to set the EVT_UPDATEDBY
     */
    public void setEvtUpdatedby(String value) {
        setAttributeInternal(EVTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for EVT_WOTYPE using the alias name EvtWOType.
     * @return the EVT_WOTYPE
     */
    public String getEvtWOType() {
        return (String) getAttributeInternal(EVTWOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVT_WOTYPE using the alias name EvtWOType.
     * @param value value to set the EVT_WOTYPE
     */
    public void setEvtWOType(String value) {
        setAttributeInternal(EVTWOTYPE, value);
    }

    /**
     * Gets the attribute value for ITS_ESTID using the alias name ItsEstid.
     * @return the ITS_ESTID
     */
    public String getItsEstid() {
        return (String)getAttributeInternal(ITSESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_ESTID using the alias name ItsEstid.
     * @param value value to set the ITS_ESTID
     */
    public void setItsEstid(String value) {
        setAttributeInternal(ITSESTID, value);
    }

    /**
     * Gets the attribute value for ITS_ISADF using the alias name ItsIsadf.
     * @return the ITS_ISADF
     */
    public String getItsIsadf() {
        return (String) getAttributeInternal(ITSISADF);
    }


    /**
     * Gets the attribute value for ITS_ISASSET using the alias name ItsIsasset.
     * @return the ITS_ISASSET
     */
    public String getItsIsasset() {
        return (String) getAttributeInternal(ITSISASSET);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_ISASSET using the alias name ItsIsasset.
     * @param value value to set the ITS_ISASSET
     */
    public void setItsIsasset(String value) {
        setAttributeInternal(ITSISASSET, value);
    }

    /**
     * Gets the attribute value for ITS_ISPM using the alias name ItsIspm.
     * @return the ITS_ISPM
     */
    public String getItsIspm() {
        return (String) getAttributeInternal(ITSISPM);
    }


    /**
     * Gets the attribute value for ITS_NOTE using the alias name ItsNote.
     * @return the ITS_NOTE
     */
    public String getItsNote() {
        return (String) getAttributeInternal(ITSNOTE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_NOTE using the alias name ItsNote.
     * @param value value to set the ITS_NOTE
     */
    public void setItsNote(String value) {
        setAttributeInternal(ITSNOTE, value);
    }

    /**
     * Gets the attribute value for POSTED_EVT_STATUS using the alias name PostedEvtStatus.
     * @return the POSTED_EVT_STATUS
     */
    public String getPostedEvtStatus() {
        return (String) getAttributeInternal(POSTEDEVTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for POSTED_EVT_STATUS using the alias name PostedEvtStatus.
     * @param value value to set the POSTED_EVT_STATUS
     */
    public void setPostedEvtStatus(String value) {
        setAttributeInternal(POSTEDEVTSTATUS, value);
    }

    /**
     * Gets the attribute value for TOTAL_HOURS using the alias name TotalHours.
     * @return the TOTAL_HOURS
     */
    public Double getTotalHours() {
        return (Double)getAttributeInternal(TOTALHOURS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_HOURS using the alias name TotalHours.
     * @param value value to set the TOTAL_HOURS
     */
    public void setTotalHours(Double value) {
        setAttributeInternal(TOTALHOURS, value);
    }

    /**
     * Gets the attribute value for TOTAL_LABOR_CST using the alias name TotalLaborCst.
     * @return the TOTAL_LABOR_CST
     */
    public Double getTotalLaborCst() {
        return (Double)getAttributeInternal(TOTALLABORCST);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_LABOR_CST using the alias name TotalLaborCst.
     * @param value value to set the TOTAL_LABOR_CST
     */
    public void setTotalLaborCst(Double value) {
        setAttributeInternal(TOTALLABORCST, value);
    }

    /**
     * Gets the attribute value for TOTAL_PART_CST using the alias name TotalPartCst.
     * @return the TOTAL_PART_CST
     */
    public Double getTotalPartCst() {
        return (Double) getAttributeInternal(TOTALPARTCST);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_PART_CST using the alias name TotalPartCst.
     * @param value value to set the TOTAL_PART_CST
     */
    public void setTotalPartCst(Double value) {
        setAttributeInternal(TOTALPARTCST, value);
    }

    /**
     * Gets the attribute value for TOTAL_PARTS_LABOR using the alias name TotalPartsLabor.
     * @return the TOTAL_PARTS_LABOR
     */
    public Double getTotalPartsLabor() {
        return (Double)getAttributeInternal(TOTALPARTSLABOR);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_PARTS_LABOR using the alias name TotalPartsLabor.
     * @param value value to set the TOTAL_PARTS_LABOR
     */
    public void setTotalPartsLabor(Double value) {
        setAttributeInternal(TOTALPARTSLABOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatusSwitcher.
     * @return the StatusSwitcher
     */
    public String getStatusSwitcher() {
        return (String) getAttributeInternal(STATUSSWITCHER);
    }


    /**
     * Gets the attribute value for the calculated attribute CostcodeSwitcher.
     * @return the CostcodeSwitcher
     */
    public String getCostcodeSwitcher() {
        return (String) getAttributeInternal(COSTCODESWITCHER);
    }


    /**
     * Gets the attribute value for the calculated attribute JobtypeSwitcher.
     * @return the JobtypeSwitcher
     */
    public String getJobtypeSwitcher() {
        return (String) getAttributeInternal(JOBTYPESWITCHER);
    }


    /**
     * Gets the attribute value for the calculated attribute ClassSwitcher.
     * @return the ClassSwitcher
     */
    public String getClassSwitcher() {
        return (String) getAttributeInternal(CLASSSWITCHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ClassSwitcher.
     * @param value value to set the  ClassSwitcher
     */
    public void setClassSwitcher(String value) {
        setAttributeInternal(CLASSSWITCHER, value);
    }


    /**
     * Gets the attribute value for IS_TOTAL_HOUR_OVER using the alias name isTotalHourOver.
     * @return the IS_TOTAL_HOUR_OVER
     */
    public Boolean getisTotalHourOver() {
        return (Boolean) getAttributeInternal(ISTOTALHOUROVER);
    }


    /**
     * Gets the attribute value for IS_TOTAL_PARTS_LABOR_OVER using the alias name isTotalPartsLaborOver.
     * @return the IS_TOTAL_PARTS_LABOR_OVER
     */
    public Boolean getisTotalPartsLaborOver() {
        return (Boolean) getAttributeInternal(ISTOTALPARTSLABOROVER);
    }


    /**
     * Gets the attribute value for ITS_ACCOUNTRATEID using the alias name ItsAccountrateid.
     * @return the ITS_ACCOUNTRATEID
     */
    public String getItsAccountrateid() {
        return (String) getAttributeInternal(ITSACCOUNTRATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_ACCOUNTRATEID using the alias name ItsAccountrateid.
     * @param value value to set the ITS_ACCOUNTRATEID
     */
    public void setItsAccountrateid(String value) {
        setAttributeInternal(ITSACCOUNTRATEID, value);
    }

    /**
     * Gets the attribute value for ITS_REVIEWED using the alias name ItsReviewed.
     * @return the ITS_REVIEWED
     */
    public String getItsReviewed() {
        return (String) getAttributeInternal(ITSREVIEWED);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_REVIEWED using the alias name ItsReviewed.
     * @param value value to set the ITS_REVIEWED
     */
    public void setItsReviewed(String value) {
        //System.out.println("setItsReviewed: " + value);
        if (value == "Y") {
            //System.out.println("Y");
            setItsReviewdt(new Timestamp(new java.sql.Timestamp(System.currentTimeMillis())));
            setItsReviewedby(ADFContext.getCurrent().getSecurityContext().getUserName().toUpperCase());
        } else if (value == "N") {
            //System.out.println("N");
            setItsReviewdt(null);
            setItsReviewedby(null);
        }

        setAttributeInternal(ITSREVIEWED, value);
    }

    /**
     * Gets the attribute value for ITS_REVIEWEDBY using the alias name ItsReviewedby.
     * @return the ITS_REVIEWEDBY
     */
    public String getItsReviewedby() {
        return (String) getAttributeInternal(ITSREVIEWEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_REVIEWEDBY using the alias name ItsReviewedby.
     * @param value value to set the ITS_REVIEWEDBY
     */
    public void setItsReviewedby(String value) {
        setAttributeInternal(ITSREVIEWEDBY, value);
    }

    /**
     * Gets the attribute value for ITS_REVIEWDT using the alias name ItsReviewdt.
     * @return the ITS_REVIEWDT
     */
    public Timestamp getItsReviewdt() {
        return (Timestamp) getAttributeInternal(ITSREVIEWDT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_REVIEWDT using the alias name ItsReviewdt.
     * @param value value to set the ITS_REVIEWDT
     */
    public void setItsReviewdt(Timestamp value) {
        setAttributeInternal(ITSREVIEWDT, value);
    }

    /**
     * Gets the attribute value for ITS_PERFORMDT using the alias name ItsPerformdt.
     * @return the ITS_PERFORMDT
     */
    public Timestamp getItsPerformdt() {
        return (Timestamp) getAttributeInternal(ITSPERFORMDT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_PERFORMDT using the alias name ItsPerformdt.
     * @param value value to set the ITS_PERFORMDT
     */
    public void setItsPerformdt(Timestamp value) {
        setAttributeInternal(ITSPERFORMDT, value);
    }

    /**
     * Gets the attribute value for ITS_PERFORMED using the alias name ItsPerformed.
     * @return the ITS_PERFORMED
     */
    public String getItsPerformed() {
        return (String) getAttributeInternal(ITSPERFORMED);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_PERFORMED using the alias name ItsPerformed.
     * @param value value to set the ITS_PERFORMED
     */
    public void setItsPerformed(String value) {
        //System.out.println("setItsPerformed: " + value);
        if (value == "Y") {
            //System.out.println("Y");
            setItsPerformdt(new Timestamp(new java.sql.Timestamp(System.currentTimeMillis())));
            setItsPerformedby(ADFContext.getCurrent().getSecurityContext().getUserName().toUpperCase());
        } else if (value == "N") {
            //System.out.println("N");
            setItsPerformdt(null);
            setItsPerformedby(null);
        }
        setAttributeInternal(ITSPERFORMED, value);
    }

    /**
     * Gets the attribute value for ITS_PERFORMEDBY using the alias name ItsPerformedby.
     * @return the ITS_PERFORMEDBY
     */
    public String getItsPerformedby() {
        return (String) getAttributeInternal(ITSPERFORMEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITS_PERFORMEDBY using the alias name ItsPerformedby.
     * @param value value to set the ITS_PERFORMEDBY
     */
    public void setItsPerformedby(String value) {
        setAttributeInternal(ITSPERFORMEDBY, value);
    }


    /**
     * Gets the attribute value for T_TAX_PERC using the alias name tTaxPerc.
     * @return the T_TAX_PERC
     */
    public Double gettTaxPerc() {
        return (Double) getAttributeInternal(TTAXPERC);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tTaxPerc.
     * @param value value to set the  tTaxPerc
     */
    public void settTaxPerc(Double value) {
        setAttributeInternal(TTAXPERC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tTotalTax.
     * @return the tTotalTax
     */
    public Double gettTotalTax() {
        return (Double) getAttributeInternal(TTOTALTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tTotalTax.
     * @param value value to set the  tTotalTax
     */
    public void settTotalTax(Double value) {
        setAttributeInternal(TTOTALTAX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tWOTotal.
     * @return the tWOTotal
     */
    public Double gettWOTotal() {
        return (Double) getAttributeInternal(TWOTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tWOTotal.
     * @param value value to set the  tWOTotal
     */
    public void settWOTotal(Double value) {
        setAttributeInternal(TWOTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tt.
     * @return the tt
     */
    public String gettt() {
        return (String) getAttributeInternal(TT);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MrltAccountmasterView1.
     */
    public Row getMrltAccountmasterView1() {
        return (Row)getAttributeInternal(MRLTACCOUNTMASTERVIEW1);
    }

    /**
     * Sets the master-detail link MrltAccountmasterView1 between this object and <code>value</code>.
     */
    public void setMrltAccountmasterView1(Row value) {
        setAttributeInternal(MRLTACCOUNTMASTERVIEW1, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Estimate1.
     */
    public RowIterator getEstimate1() {
        return (RowIterator)getAttributeInternal(ESTIMATE1);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltFlagassociation_VO.
     */
    public RowIterator getMrltFlagassociation_VO() {
        return (RowIterator)getAttributeInternal(MRLTFLAGASSOCIATION_VO);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link FlagAssoc_VVO.
     */
    public RowIterator getFlagAssoc_VVO() {
        return (RowIterator)getAttributeInternal(FLAGASSOC_VVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefMp5profileView.
     */
    public RowSet getMrlrefMp5profileView() {
        return (RowSet)getAttributeInternal(MRLREFMP5PROFILEVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltAccountmasterView.
     */
    public RowSet getMrltAccountmasterView() {
        return (RowSet)getAttributeInternal(MRLTACCOUNTMASTERVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WorkOrderMaster.
     */
    public RowSet getWorkOrderMaster() {
        return (RowSet)getAttributeInternal(WORKORDERMASTER);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WorkorderStatus.
     */
    public RowSet getWorkorderStatus() {
        return (RowSet)getAttributeInternal(WORKORDERSTATUS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WorkorderStatusAll.
     */
    public RowSet getWorkorderStatusAll() {
        return (RowSet)getAttributeInternal(WORKORDERSTATUSALL);
    }


    /**
     * Gets the view accessor <code>RowSet</code> HeaderCodes.
     */
    public RowSet getHeaderCodes() {
        return (RowSet)getAttributeInternal(HEADERCODES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> HeaderCodesAFQuery.
     */
    public RowSet getHeaderCodesAFQuery() {
        return (RowSet)getAttributeInternal(HEADERCODESAFQUERY);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Estimate.
     */
    public RowSet getEstimate() {
        return (RowSet)getAttributeInternal(ESTIMATE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Ucodes.
     */
    public RowSet getUcodes() {
        return (RowSet)getAttributeInternal(UCODES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WOStatus.
     */
    public RowSet getWOStatus() {
        return (RowSet)getAttributeInternal(WOSTATUS);
    }


    /**
     * Gets the view accessor <code>RowSet</code> UcodesWOStatus.
     */
    public RowSet getUcodesWOStatus() {
        return (RowSet)getAttributeInternal(UCODESWOSTATUS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WOAccountMaster.
     */
    public RowSet getWOAccountMaster() {
        return (RowSet)getAttributeInternal(WOACCOUNTMASTER);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WOAccountMasterAFQuery.
     */
    public RowSet getWOAccountMasterAFQuery() {
        return (RowSet)getAttributeInternal(WOACCOUNTMASTERAFQUERY);
    }

    /**
     * Gets the view accessor <code>RowSet</code> isAccountActive.
     */
    public RowSet getisAccountActive() {
        return (RowSet)getAttributeInternal(ISACCOUNTACTIVE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoBoolean.
     */
    public RowSet getYesNoBoolean() {
        return (RowSet)getAttributeInternal(YESNOBOOLEAN);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TaxRateValues1.
     */
    public RowSet getTaxRateValues1() {
        return (RowSet) getAttributeInternal(TAXRATEVALUES1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
