package its.mnr.mp5.vo.workorder;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 03 11:50:57 PST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltFlagassociation_VORowImpl extends ExtendedViewRowImpl {


    public static final int ENTITY_MRLTFLAGASSOCIATION_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Faactive {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFaactive();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFaactive((String)value);
            }
        }
        ,
        Faid {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFaid();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFaid((DBSequence)value);
            }
        }
        ,
        Faitem {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFaitem();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFaitem((String)value);
            }
        }
        ,
        Faupdby {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFaupdby();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFaupdby((String)value);
            }
        }
        ,
        Faupddt {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFaupddt();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFaupddt((Timestamp)value);
            }
        }
        ,
        Fid {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getFid();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setFid((Integer)value);
            }
        }
        ,
        MrltFlag_VO {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getMrltFlag_VO();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltFlag_VO1 {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getMrltFlag_VO1();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WODataControl_ActiveMrltFlag1 {
            public Object get(MrltFlagassociation_VORowImpl obj) {
                return obj.getWODataControl_ActiveMrltFlag1();
            }

            public void put(MrltFlagassociation_VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltFlagassociation_VORowImpl object);

        public abstract void put(MrltFlagassociation_VORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int FAACTIVE = AttributesEnum.Faactive.index();
    public static final int FAID = AttributesEnum.Faid.index();
    public static final int FAITEM = AttributesEnum.Faitem.index();
    public static final int FAUPDBY = AttributesEnum.Faupdby.index();
    public static final int FAUPDDT = AttributesEnum.Faupddt.index();
    public static final int FID = AttributesEnum.Fid.index();
    public static final int MRLTFLAG_VO = AttributesEnum.MrltFlag_VO.index();
    public static final int MRLTFLAG_VO1 = AttributesEnum.MrltFlag_VO1.index();
    public static final int WODATACONTROL_ACTIVEMRLTFLAG1 = AttributesEnum.WODataControl_ActiveMrltFlag1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltFlagassociation_VORowImpl() {
    }

    /**
     * Gets MrltFlagassociation_EO entity object.
     * @return the MrltFlagassociation_EO
     */
    public ExtendedEntityImpl getMrltFlagassociation_EO() {
        return (ExtendedEntityImpl)getEntity(ENTITY_MRLTFLAGASSOCIATION_EO);
    }

    /**
     * Gets the attribute value for FAACTIVE using the alias name Faactive.
     * @return the FAACTIVE
     */
    public String getFaactive() {
        return (String) getAttributeInternal(FAACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for FAACTIVE using the alias name Faactive.
     * @param value value to set the FAACTIVE
     */
    public void setFaactive(String value) {
        setAttributeInternal(FAACTIVE, value);
    }

    /**
     * Gets the attribute value for FAID using the alias name Faid.
     * @return the FAID
     */
    public DBSequence getFaid() {
        return (DBSequence)getAttributeInternal(FAID);
    }

    /**
     * Sets <code>value</code> as attribute value for FAID using the alias name Faid.
     * @param value value to set the FAID
     */
    public void setFaid(DBSequence value) {
        setAttributeInternal(FAID, value);
    }

    /**
     * Gets the attribute value for FAITEM using the alias name Faitem.
     * @return the FAITEM
     */
    public String getFaitem() {
        return (String) getAttributeInternal(FAITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for FAITEM using the alias name Faitem.
     * @param value value to set the FAITEM
     */
    public void setFaitem(String value) {
        setAttributeInternal(FAITEM, value);
    }

    /**
     * Gets the attribute value for FAUPDBY using the alias name Faupdby.
     * @return the FAUPDBY
     */
    public String getFaupdby() {
        return (String) getAttributeInternal(FAUPDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for FAUPDBY using the alias name Faupdby.
     * @param value value to set the FAUPDBY
     */
    public void setFaupdby(String value) {
        setAttributeInternal(FAUPDBY, value);
    }

    /**
     * Gets the attribute value for FAUPDDT using the alias name Faupddt.
     * @return the FAUPDDT
     */
    public Timestamp getFaupddt() {
        return (Timestamp) getAttributeInternal(FAUPDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for FAUPDDT using the alias name Faupddt.
     * @param value value to set the FAUPDDT
     */
    public void setFaupddt(Timestamp value) {
        setAttributeInternal(FAUPDDT, value);
    }

    /**
     * Gets the attribute value for FID using the alias name Fid.
     * @return the FID
     */
    public Integer getFid() {
        return (Integer) getAttributeInternal(FID);
    }

    /**
     * Sets <code>value</code> as attribute value for FID using the alias name Fid.
     * @param value value to set the FID
     */
    public void setFid(Integer value) {
        setAttributeInternal(FID, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MrltFlag_VO.
     */
    public Row getMrltFlag_VO() {
        return (Row)getAttributeInternal(MRLTFLAG_VO);
    }

    /**
     * Sets the master-detail link MrltFlag_VO between this object and <code>value</code>.
     */
    public void setMrltFlag_VO(Row value) {
        setAttributeInternal(MRLTFLAG_VO, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MrltFlag_VO1.
     */
    public RowSet getMrltFlag_VO1() {
        return (RowSet)getAttributeInternal(MRLTFLAG_VO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WODataControl_ActiveMrltFlag1.
     */
    public RowSet getWODataControl_ActiveMrltFlag1() {
        return (RowSet)getAttributeInternal(WODATACONTROL_ACTIVEMRLTFLAG1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
