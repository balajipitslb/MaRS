package its.mnr.mp5.vo.cyclecount;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;
import its.mnr.mp5.eo.local.MrltFifoheaderImpl;


import its.mnr.mp5.vo.cyclecount.common.MrltFifoheaderViewRow;

import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Calendar;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 08 14:46:30 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltFifoheaderViewRowImpl extends ExtendedViewRowImpl implements MrltFifoheaderViewRow {
    public static final int ENTITY_MRLTFIFOHEADER = 0;
    public static int VARCHAR2 = Types.VARCHAR;

    /* Helper methods */    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }


    /**Method to call Database function
         * @param stmt
         * @param bindVars
         * @return
         */
        protected String callSCH_CREATE_JOBS(String stmt, Object[] bindVars) {
            CallableStatement st = null;
            String ret = "";
            try {
              //Creating sql statement
                st = this.getDBTransaction().createCallableStatement("begin " + stmt + ";end;", 0);
                
              
                //  Set the bind values of the IN parameters (Employee Id is Input parameter here)
                st.setObject(1, bindVars[0]);
                st.setObject(2, bindVars[1]);
                st.setObject(3, bindVars[2]);
                st.setObject(4, bindVars[3]);
                st.setObject(5, bindVars[4]);
                st.setObject(6, bindVars[5]);
               //Register out parameters and their types (In this case procedure has 2 out parameters)

                st.registerOutParameter(7, Types.VARCHAR);
                
                // Execute the statement
                st.executeUpdate();
               
               // Print Return Values of out parameters

                ret = st.getString(7);
                //System.out.println("RETURN: " + ret);
            
              
            } catch (SQLException e) {
                throw new JboException(e.getMessage());
              
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {

                    }
                }
            }
            return ret;
        }
    
        //method to get startDate for the dbms_scheduler
        public Timestamp getStartDate(){
            long retryDate = System.currentTimeMillis();
            Timestamp original = new Timestamp(retryDate);
            Calendar cal = Calendar.getInstance();
            cal.setTimeInMillis(original.getTime());
            cal.add(Calendar.SECOND, 3);
            Timestamp startDate = new Timestamp(cal.getTime().getTime());
            return startDate;
        }
        
        //method to get endDate for the dbms_scheduler
        public Timestamp getEndDate(){
            long retryDate = System.currentTimeMillis();
            Timestamp original = new Timestamp(retryDate);
            Calendar cal = Calendar.getInstance();
            cal.setTimeInMillis(original.getTime());
            cal.add(Calendar.MINUTE, 3);
            Timestamp endDate = new Timestamp(cal.getTime().getTime());
            return endDate;
        } 
    
    public String ccFIFO(Integer iListid, Integer iFxhdid, String emailStr) {
        //System.out.println("callStoredFunction");
        //System.out.println("iListid: " +iListid);
        //System.out.println("iFxhdid: " +iFxhdid);
        //System.out.println("emailStr: " +emailStr);
        /*
        String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.CCFIFO(?,?)",
                                          new Object[] {iListid, iFxhdid});
        */
        String str = "";
        str = "BEGIN MNRPKG.CCFIFO_email('"+iListid+"','"+iFxhdid+"','"+emailStr+"'); END;";
         //System.out.println("Inside CCFIFO_email str = " + str);
        //System.out.println("Inside CCFIFO_email str = CCFIFO_email list "+iListid+" "+iFxhdid+" "+emailStr+", SYSDATE + 3/86400, SYSDATE + 3/1440, CCFIFO_email list "+iListid+" "+iFxhdid);
        String jobName = "CC"+iListid+"Create_As_Counted_Fifo";
        
        Timestamp startDate = getStartDate();
        Timestamp endDate = getEndDate();   
        String comments = jobName;
        String ret = callSCH_CREATE_JOBS("mnrpkg.SCH_CREATE_JOBS(?,?,?,?,?,?,?)",new Object[]{str, jobName, startDate, endDate,comments, emailStr});
        //System.out.println("Function WorkOrderRFIUpd = " + ret);
     
        ////System.out.println("ITS_EstimateIns Ret = " + ret);
        return ret;
    }

    public String ccFIFOAdj(Integer iListid, Integer iFxhdid, String emailStr) {
        //System.out.println("callStoredFunction");
        //System.out.println("iListid: " +iListid);
        //System.out.println("iFxhdid: " +iFxhdid);
        //System.out.println("emailStr: " +emailStr);
        /*
        String ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.CCFIFOADJ(?,?)",
                                          new Object[] {iListid, iFxhdid});
*/
        String str = "";
        str = "BEGIN MNRPKG.ccFIFOAdj_email('"+iListid+"','"+iFxhdid+"','"+emailStr+"'); END;";
         //System.out.println("Inside ccFIFOAdj_email str = " + str);
        //System.out.println("Inside ccFIFOAdj_email str = ccFIFOAdj_email list "+iListid+" "+iFxhdid+" "+emailStr+", SYSDATE + 3/86400, SYSDATE + 3/1440, ccFIFOAdj_email list "+iListid+" "+iFxhdid);
        String jobName = "CC"+iListid+"Create_Adjusted_Fifo";
        
        Timestamp startDate = getStartDate();
        Timestamp endDate = getEndDate();   
        String comments = jobName;
        String ret = callSCH_CREATE_JOBS("mnrpkg.SCH_CREATE_JOBS(?,?,?,?,?,?,?)",new Object[]{str, jobName, startDate, endDate,comments, emailStr});
        //System.out.println("Function WorkOrderRFIUpd = " + ret);        
        ////System.out.println("ITS_EstimateIns Ret = " + ret);
        return ret;
    }
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Fhid {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getFhid();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setFhid((Integer)value);
            }
        }
        ,
        Listid {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getListid();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setListid((Integer)value);
            }
        }
        ,
        Accreated {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getAccreated();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAccreated((Timestamp)value);
            }
        }
        ,
        Adjcreated {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getAdjcreated();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAdjcreated((Timestamp)value);
            }
        }
        ,
        Adjtodate {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getAdjtodate();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAdjtodate((Timestamp)value);
            }
        }
        ,
        Fpxhid {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getFpxhid();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setFpxhid((Integer)value);
            }
        }
        ,
        tCCDesc {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.gettCCDesc();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.settCCDesc((String)value);
            }
        }
        ,
        tEntityState {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.gettEntityState();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.settEntityState((String)value);
            }
        }
        ,
        tCCStatus {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.gettCCStatus();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.settCCStatus((String)value);
            }
        }
        ,
        MrltFifoadjitemView {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getMrltFifoadjitemView();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltFifoitemView {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getMrltFifoitemView();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltCyclecountheaderView {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getMrltCyclecountheaderView();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltFifopartxheaderView {
            public Object get(MrltFifoheaderViewRowImpl obj) {
                return obj.getMrltFifopartxheaderView();
            }

            public void put(MrltFifoheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltFifoheaderViewRowImpl object);

        public abstract void put(MrltFifoheaderViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int FHID = AttributesEnum.Fhid.index();
    public static final int LISTID = AttributesEnum.Listid.index();
    public static final int ACCREATED = AttributesEnum.Accreated.index();
    public static final int ADJCREATED = AttributesEnum.Adjcreated.index();
    public static final int ADJTODATE = AttributesEnum.Adjtodate.index();
    public static final int FPXHID = AttributesEnum.Fpxhid.index();
    public static final int TCCDESC = AttributesEnum.tCCDesc.index();
    public static final int TENTITYSTATE = AttributesEnum.tEntityState.index();
    public static final int TCCSTATUS = AttributesEnum.tCCStatus.index();
    public static final int MRLTFIFOADJITEMVIEW = AttributesEnum.MrltFifoadjitemView.index();
    public static final int MRLTFIFOITEMVIEW = AttributesEnum.MrltFifoitemView.index();
    public static final int MRLTCYCLECOUNTHEADERVIEW = AttributesEnum.MrltCyclecountheaderView.index();
    public static final int MRLTFIFOPARTXHEADERVIEW = AttributesEnum.MrltFifopartxheaderView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltFifoheaderViewRowImpl() {
    }

    /**
     * Gets MrltFifoheader entity object.
     * @return the MrltFifoheader
     */
    public MrltFifoheaderImpl getMrltFifoheader() {
        return (MrltFifoheaderImpl)getEntity(ENTITY_MRLTFIFOHEADER);
    }

    /**
     * Gets the attribute value for FHID using the alias name Fhid.
     * @return the FHID
     */
    public Integer getFhid() {
        return (Integer) getAttributeInternal(FHID);
    }

    /**
     * Sets <code>value</code> as attribute value for FHID using the alias name Fhid.
     * @param value value to set the FHID
     */
    public void setFhid(Integer value) {
        setAttributeInternal(FHID, value);
    }

    /**
     * Gets the attribute value for LISTID using the alias name Listid.
     * @return the LISTID
     */
    public Integer getListid() {
        return (Integer) getAttributeInternal(LISTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LISTID using the alias name Listid.
     * @param value value to set the LISTID
     */
    public void setListid(Integer value) {
        setAttributeInternal(LISTID, value);
    }

    /**
     * Gets the attribute value for ACCREATED using the alias name Accreated.
     * @return the ACCREATED
     */
    public Timestamp getAccreated() {
        return (Timestamp) getAttributeInternal(ACCREATED);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCREATED using the alias name Accreated.
     * @param value value to set the ACCREATED
     */
    public void setAccreated(Timestamp value) {
        setAttributeInternal(ACCREATED, value);
    }

    /**
     * Gets the attribute value for ADJCREATED using the alias name Adjcreated.
     * @return the ADJCREATED
     */
    public Timestamp getAdjcreated() {
        return (Timestamp) getAttributeInternal(ADJCREATED);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJCREATED using the alias name Adjcreated.
     * @param value value to set the ADJCREATED
     */
    public void setAdjcreated(Timestamp value) {
        setAttributeInternal(ADJCREATED, value);
    }

    /**
     * Gets the attribute value for ADJTODATE using the alias name Adjtodate.
     * @return the ADJTODATE
     */
    public Timestamp getAdjtodate() {
        return (Timestamp) getAttributeInternal(ADJTODATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJTODATE using the alias name Adjtodate.
     * @param value value to set the ADJTODATE
     */
    public void setAdjtodate(Timestamp value) {
        setAttributeInternal(ADJTODATE, value);
    }

    /**
     * Gets the attribute value for FPXHID using the alias name Fpxhid.
     * @return the FPXHID
     */
    public Integer getFpxhid() {
        return (Integer) getAttributeInternal(FPXHID);
    }

    /**
     * Sets <code>value</code> as attribute value for FPXHID using the alias name Fpxhid.
     * @param value value to set the FPXHID
     */
    public void setFpxhid(Integer value) {
        setAttributeInternal(FPXHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tCCDesc.
     * @return the tCCDesc
     */
    public String gettCCDesc() {
        return (String) getAttributeInternal(TCCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tCCDesc.
     * @param value value to set the  tCCDesc
     */
    public void settCCDesc(String value) {
        setAttributeInternal(TCCDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute tEntityState.
     * @return the tEntityState
     */
    public String gettEntityState() {
        return (String) getAttributeInternal(TENTITYSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tEntityState.
     * @param value value to set the  tEntityState
     */
    public void settEntityState(String value) {
        setAttributeInternal(TENTITYSTATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tCCStatus.
     * @return the tCCStatus
     */
    public String gettCCStatus() {
        return (String) getAttributeInternal(TCCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tCCStatus.
     * @param value value to set the  tCCStatus
     */
    public void settCCStatus(String value) {
        setAttributeInternal(TCCSTATUS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltFifoadjitemView.
     */
    public RowIterator getMrltFifoadjitemView() {
        return (RowIterator)getAttributeInternal(MRLTFIFOADJITEMVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltFifoitemView.
     */
    public RowIterator getMrltFifoitemView() {
        return (RowIterator)getAttributeInternal(MRLTFIFOITEMVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MrltCyclecountheaderView.
     */
    public Row getMrltCyclecountheaderView() {
        return (Row)getAttributeInternal(MRLTCYCLECOUNTHEADERVIEW);
    }

    /**
     * Sets the master-detail link MrltCyclecountheaderView between this object and <code>value</code>.
     */
    public void setMrltCyclecountheaderView(Row value) {
        setAttributeInternal(MRLTCYCLECOUNTHEADERVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltFifopartxheaderView.
     */
    public RowSet getMrltFifopartxheaderView() {
        return (RowSet)getAttributeInternal(MRLTFIFOPARTXHEADERVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
