package its.mnr.mp5.vo.cyclecount;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import its.mnr.mp5.model.Util;
import its.mnr.mp5.vo.admin.MrlrefMp5profileViewImpl;

import its.mnr.mp5.vo.cyclecount.common.CycleCountPartsMain_distBinViewRow;

import java.io.File;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import java.util.HashMap;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.XMLInterface;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 19 16:23:26 PST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CycleCountPartsMain_distBinViewRowImpl
  extends ExtendedViewRowImpl
  implements CycleCountPartsMain_distBinViewRow
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum
  {
    StlBin
    {
      public Object get(CycleCountPartsMain_distBinViewRowImpl obj)
      {
        return obj.getStlBin();
      }

      public void put(CycleCountPartsMain_distBinViewRowImpl obj, Object value)
      {
        obj.setStlBin((String)value);
      }
    }
    ,
    StlListid
    {
      public Object get(CycleCountPartsMain_distBinViewRowImpl obj)
      {
        return obj.getStlListid();
      }

      public void put(CycleCountPartsMain_distBinViewRowImpl obj, Object value)
      {
        obj.setStlListid((Integer)value);
      }
    }
    ,
    MrlrefMp5profileView
    {
      public Object get(CycleCountPartsMain_distBinViewRowImpl obj)
      {
        return obj.getMrlrefMp5profileView();
      }

      public void put(CycleCountPartsMain_distBinViewRowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(CycleCountPartsMain_distBinViewRowImpl object);

    public abstract void put(CycleCountPartsMain_distBinViewRowImpl object, Object value);

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int ENTITY_MRLTCYCLECOUNTPARTS = 0;
  public static int NUMBER = Types.NUMERIC;
  public static int DATE = Types.DATE;
  public static int VARCHAR2 = Types.VARCHAR;

  public static final int STLBIN = AttributesEnum.StlBin.index();
  public static final int STLLISTID = AttributesEnum.StlListid.index();
  public static final int MRLREFMP5PROFILEVIEW = AttributesEnum.MrlrefMp5profileView.index();

  /**
   * This is the default constructor (do not remove).
   */
  public CycleCountPartsMain_distBinViewRowImpl()
  {
  }

  /**
   * Gets the attribute value for the calculated attribute StlBin.
   * @return the StlBin
   */
  public String getStlBin()
  {
    return (String) getAttributeInternal(STLBIN);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute StlBin.
   * @param value value to set the  StlBin
   */
  public void setStlBin(String value)
  {
    setAttributeInternal(STLBIN, value);
  }

  /**
   * Gets the attribute value for the calculated attribute StlListid.
   * @return the StlListid
   */
  public Integer getStlListid()
  {
    return (Integer) getAttributeInternal(STLLISTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute StlListid.
   * @param value value to set the  StlListid
   */
  public void setStlListid(Integer value)
  {
    setAttributeInternal(STLLISTID, value);
  }


  /**
   * Gets the view accessor <code>RowSet</code> MrlrefMp5profileView.
   */
  public RowSet getMrlrefMp5profileView()
  {
    return (RowSet) getAttributeInternal(MRLREFMP5PROFILEVIEW);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef)
    throws Exception
  {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
  
  protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
      CallableStatement st = null;
      try {
          // 1. Create a JDBC CallabledStatement
          st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
          // 2. Register the first bind variable for the return value
          st.registerOutParameter(1, sqlReturnType);
          if (bindVars != null) {
              // 3. Loop over values for the bind variables passed in, if any
              for (int z = 0; z < bindVars.length; z++) {
                  // 4. Set the value of user-supplied bind vars in the stmt
                  st.setObject(z + 2, bindVars[z]);
              }
          }
          // 5. Set the value of user-supplied bind vars in the stmt
          st.executeUpdate();
          // 6. Return the value of the first bind variable
          return st.getObject(1);
      } catch (SQLException e) {
          throw new JboException(e);
      } finally {
          if (st != null) {
              try {
                  // 7. Close the statement
                  st.close();
              } catch (SQLException e) {
              }
          }
      }
  }

  public String getMP5Profile(String sprofile) {
      String ret;
      //set and execute View Criteria
      RowSet rs = this.getMrlrefMp5profileView();
      MrlrefMp5profileViewImpl impl = (MrlrefMp5profileViewImpl)rs.getViewObject();
      ViewCriteria vc = impl.getViewCriteria("MP5ProfileByProfile");
      vc.resetCriteria();
      impl.setprofileBind(sprofile);
      impl.applyViewCriteria(vc);
      // set range size to 1 since we expect a single record
      impl.setRangeSize(1);
      // execute query to make sure we get latest data!
      impl.executeQuery();
      Row rw = impl.first();
      if (rw != null) {
          ret = (String)rw.getAttribute("Value");
          rs.closeRowSet();
          return ret;
      }

      return null;
  }
  
  public  String writeCCStoreList(String pList, String pType, String pBin) {
      //System.out.println("inside writeCCStoreList()");
      String ret = "FALSE";
      //java.util.Date date= new java.util.Date();
      //Timestamp time = new Timestamp(date.getTime());
     // System.out.println("pList, pType, pBin: "+pList+", "+ pType+", "+pBin);
      CycleCountPartsMain_distBinViewImpl vo = (CycleCountPartsMain_distBinViewImpl)this.getViewObject();
      //System.out.println("Start: " + new Timestamp(date.getTime()));

      String filepath = getMP5Profile("CCListOutPath");
      String filename = pList + "#" + pType + "#CCLIST.xml";
      String filenamelong = filepath + filename;

      ret = (String)callStoredFunction(VARCHAR2, "mnrpkg.CCPROCESSSTOREROOMLIST(?,?,?,?)", new Object[] { pList, pType, pBin, filenamelong });

    return ret;
  }  
  
}
