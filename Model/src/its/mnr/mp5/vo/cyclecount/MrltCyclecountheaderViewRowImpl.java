package its.mnr.mp5.vo.cyclecount;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;


import its.mnr.mp5.eo.local.MrltCyclecountheaderImpl;


import its.mnr.mp5.vo.admin.MrlrefMp5profileViewImpl;


import its.mnr.mp5.vo.cyclecount.common.MrltCyclecountheaderViewRow;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.ArrayList;
import java.util.List;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 20 10:32:34 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltCyclecountheaderViewRowImpl extends ExtendedViewRowImpl implements MrltCyclecountheaderViewRow {


    public static final int ENTITY_MRLTCYCLECOUNTHEADER = 0;

    public String getMP5Profile(String sprofile){
            String ret;
            //set and execute View Criteria
            
            RowSet rs = this.getMrlrefMp5profileView();
            MrlrefMp5profileViewImpl impl = (MrlrefMp5profileViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("MP5ProfileByProfile");
            vc.resetCriteria();
            impl.setprofileBind(sprofile);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ret = (String)rw.getAttribute("Value");
                rs.closeRowSet();
                return ret;
            }

            return null;
        }
    
    public boolean chkPartsOtherCount(String pBIN,String pBINSTART, String pBINEND, String pPARTCLASS, String pPARTSTART, String pPARTEND,
                                     String pP1, String pP2, String pP3, String pP4, String pP5, String pP6) {
        //System.out.println("chkPartsOtherCount");
        //System.out.println(pP3);
        //false returns validition error
        boolean ret = false;
        String msg;
        List list = new ArrayList();

        RowSet rs = this.getCCPartsInOtherCountExistence();
        VariableValueManager vm = rs.ensureVariableManager();
        //System.out.println(pBIN + ":" + pBINSTART + ":" + pBINEND  + ":" +pPARTCLASS + ":" + pPARTSTART + ":" + pPARTEND);
        //System.out.println(pP1 + ":" + pP2  + ":" +pP3 + ":" + pP4 + ":" + pP5);
        vm.setVariableValue("BIN", pBIN);
        vm.setVariableValue("BINSTART", pBINSTART);
        vm.setVariableValue("BINEND", pBINEND);
        vm.setVariableValue("PARTCLASS", pPARTCLASS);
        vm.setVariableValue("PARTSTART", pPARTSTART);
        vm.setVariableValue("PARTEND", pPARTEND);
        vm.setVariableValue("P1", pP1);
        vm.setVariableValue("P2", pP2);
        vm.setVariableValue("P3", pP3);
        vm.setVariableValue("P4", pP4);
        vm.setVariableValue("P5", pP5);
        vm.setVariableValue("P6", pP6);
        rs.setForwardOnly(true);
        rs.executeQuery();

        //Row rw = rs.first();
        //if (rw != null) {
        while (rs.hasNext()) {
            //System.out.println("1");
            Row rw = rs.next();
            //Add Parts to list
           // RowSetIterator iter = this.getCCPartsMultBinExistence();
           // while (iter.hasNext()) {
           ////System.out.println(rw.getAttribute("ParCode"));
                list.add((String)rw.getAttribute("ParCode") + " in List # " + String.valueOf(rw.getAttribute("Listid")));
                ret = true;
            //}
        }
        //Display message and throw Exception 
        if (!list.isEmpty()) {
            msg = "Part(s) exists in other Cycle Count Lists: "  + '\n';
            for (int i = 0; i < list.size(); i++) {
                msg = msg + " " + list.get(i) + ", ";
            }
            ////System.out.println(msg);
            throw new JboException(msg);
        }
        ////System.out.println("ret: " + ret);
        return ret;
        
    }
    
    public boolean chkPartsMultiBins(String pBIN,String pBINSTART, String pBINEND, String pPARTCLASS, String pPARTSTART, String pPARTEND,
                                     String pP1, String pP2, String pP3, String pP4, String pP5, String pP6) {
        //System.out.println("chkPartsMultiBins");
        //false returns validition error
        boolean ret = false;
        String msg;
        List list = new ArrayList();

        RowSet rs = this.getCCPartsMultBinExistence();
        VariableValueManager vm = rs.ensureVariableManager();
        //System.out.println(pBIN + ":" + pBINSTART + ":" + pBINEND  + ":" +pPARTCLASS + ":" + pPARTSTART + ":" + pPARTEND);
        //System.out.println(pP1 + ":" + pP2  + ":" +pP3 + ":" + pP4 + ":" + pP5);
        vm.setVariableValue("BIN", pBIN);
        vm.setVariableValue("BINSTART", pBINSTART);
        vm.setVariableValue("BINEND", pBINEND);
        vm.setVariableValue("PARTCLASS", pPARTCLASS);
        vm.setVariableValue("PARTSTART", pPARTSTART);
        vm.setVariableValue("PARTEND", pPARTEND);
        vm.setVariableValue("P1", pP1);
        vm.setVariableValue("P2", pP2);
        vm.setVariableValue("P3", pP3);
        vm.setVariableValue("P4", pP4);
        vm.setVariableValue("P5", pP5);
        vm.setVariableValue("P6", pP6);
        rs.setForwardOnly(true);
        rs.executeQuery();

        //Row rw = rs.first();
        //if (rw != null) {
        while (rs.hasNext()) {
            ////System.out.println("1");
            Row rw = rs.next();
            //Add Parts to list
            // RowSetIterator iter = this.getCCPartsMultBinExistence();
            // while (iter.hasNext()) {
            ////System.out.println(rw.getAttribute("ParCode"));
            list.add((String)rw.getAttribute("ParCode"));
            ret = true;
            //}
        }
        //Display message and throw Exception 
        if (!list.isEmpty()) {
            msg = "Part(s) has multiple Bins: "  + '\n';
            for (int i = 0; i < list.size(); i++) {
                msg = msg + " " + list.get(i) + '\n';
            }
            throw new JboException(msg);
        }
        ////System.out.println("chkPartsMultiBins:end");
        return ret;
    }
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Listid {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getListid();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Ccdesc {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCcdesc();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setCcdesc((String) value);
            }
        }
        ,
        Ccstatus {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCcstatus();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setCcstatus((String) value);
            }
        }
        ,
        Created {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCreated();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Frozen {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getFrozen();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setFrozen((Timestamp) value);
            }
        }
        ,
        Completed {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCompleted();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setCompleted((Timestamp) value);
            }
        }
        ,
        Store {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getStore();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setStore((String) value);
            }
        }
        ,
        Org {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getOrg();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setOrg((String) value);
            }
        }
        ,
        Binstart {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getBinstart();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setBinstart((String) value);
            }
        }
        ,
        Binend {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getBinend();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setBinend((String) value);
            }
        }
        ,
        Partclass {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getPartclass();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setPartclass((String) value);
            }
        }
        ,
        Partstart {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getPartstart();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setPartstart((String) value);
            }
        }
        ,
        Partend {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getPartend();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setPartend((String) value);
            }
        }
        ,
        P1 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP1();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP1((String) value);
            }
        }
        ,
        P2 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP2();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP2((String) value);
            }
        }
        ,
        P3 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP3();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP3((String) value);
            }
        }
        ,
        P4 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP4();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP4((String) value);
            }
        }
        ,
        P5 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP5();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP5((String) value);
            }
        }
        ,
        P6 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getP6();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setP6((String) value);
            }
        }
        ,
        Sttknum {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getSttknum();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RangeType {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getRangeType();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setRangeType((String) value);
            }
        }
        ,
        tStoreroom {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.gettStoreroom();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.settStoreroom((String) value);
            }
        }
        ,
        Bin {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getBin();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setBin((String) value);
            }
        }
        ,
        emailStr {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getemailStr();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Jobid {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getJobid();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setJobid((String) value);
            }
        }
        ,
        MrltCyclecountpartsView {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrltCyclecountpartsView();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltCyclecountpartstoresView {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrltCyclecountpartstoresView();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltCyclecountpartsMainStore {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrltCyclecountpartsMainStore();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltFifoheaderView {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrltFifoheaderView();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CycleCountPartsMain {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCycleCountPartsMain();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CycleCountPartsMain_distBinView {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCycleCountPartsMain_distBinView();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CCPartVO {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCCPartVO();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltCyclecountpartstoresView1 {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrltCyclecountpartstoresView1();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CCStatusLOV {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCCStatusLOV();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CCPartsMultBinExistence {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCCPartsMultBinExistence();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CCPartsInOtherCountExistence {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getCCPartsInOtherCountExistence();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefMp5profileView {
            public Object get(MrltCyclecountheaderViewRowImpl obj) {
                return obj.getMrlrefMp5profileView();
            }

            public void put(MrltCyclecountheaderViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MrltCyclecountheaderViewRowImpl object);

        public abstract void put(MrltCyclecountheaderViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LISTID = AttributesEnum.Listid.index();
    public static final int CCDESC = AttributesEnum.Ccdesc.index();
    public static final int CCSTATUS = AttributesEnum.Ccstatus.index();
    public static final int CREATED = AttributesEnum.Created.index();
    public static final int FROZEN = AttributesEnum.Frozen.index();
    public static final int COMPLETED = AttributesEnum.Completed.index();
    public static final int STORE = AttributesEnum.Store.index();
    public static final int ORG = AttributesEnum.Org.index();
    public static final int BINSTART = AttributesEnum.Binstart.index();
    public static final int BINEND = AttributesEnum.Binend.index();
    public static final int PARTCLASS = AttributesEnum.Partclass.index();
    public static final int PARTSTART = AttributesEnum.Partstart.index();
    public static final int PARTEND = AttributesEnum.Partend.index();
    public static final int P1 = AttributesEnum.P1.index();
    public static final int P2 = AttributesEnum.P2.index();
    public static final int P3 = AttributesEnum.P3.index();
    public static final int P4 = AttributesEnum.P4.index();
    public static final int P5 = AttributesEnum.P5.index();
    public static final int P6 = AttributesEnum.P6.index();
    public static final int STTKNUM = AttributesEnum.Sttknum.index();
    public static final int RANGETYPE = AttributesEnum.RangeType.index();
    public static final int TSTOREROOM = AttributesEnum.tStoreroom.index();
    public static final int BIN = AttributesEnum.Bin.index();
    public static final int EMAILSTR = AttributesEnum.emailStr.index();
    public static final int JOBID = AttributesEnum.Jobid.index();
    public static final int MRLTCYCLECOUNTPARTSVIEW = AttributesEnum.MrltCyclecountpartsView.index();
    public static final int MRLTCYCLECOUNTPARTSTORESVIEW = AttributesEnum.MrltCyclecountpartstoresView.index();
    public static final int MRLTCYCLECOUNTPARTSMAINSTORE = AttributesEnum.MrltCyclecountpartsMainStore.index();
    public static final int MRLTFIFOHEADERVIEW = AttributesEnum.MrltFifoheaderView.index();
    public static final int CYCLECOUNTPARTSMAIN = AttributesEnum.CycleCountPartsMain.index();
    public static final int CYCLECOUNTPARTSMAIN_DISTBINVIEW = AttributesEnum.CycleCountPartsMain_distBinView.index();
    public static final int CCPARTVO = AttributesEnum.CCPartVO.index();
    public static final int MRLTCYCLECOUNTPARTSTORESVIEW1 = AttributesEnum.MrltCyclecountpartstoresView1.index();
    public static final int CCSTATUSLOV = AttributesEnum.CCStatusLOV.index();
    public static final int CCPARTSMULTBINEXISTENCE = AttributesEnum.CCPartsMultBinExistence.index();
    public static final int CCPARTSINOTHERCOUNTEXISTENCE = AttributesEnum.CCPartsInOtherCountExistence.index();
    public static final int MRLREFMP5PROFILEVIEW = AttributesEnum.MrlrefMp5profileView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltCyclecountheaderViewRowImpl() {
    }

    /**
     * Gets MrltCyclecountheader entity object.
     * @return the MrltCyclecountheader
     */
    public MrltCyclecountheaderImpl getMrltCyclecountheader() {
        return (MrltCyclecountheaderImpl)getEntity(ENTITY_MRLTCYCLECOUNTHEADER);
    }

    /**
     * Gets the attribute value for LISTID using the alias name Listid.
     * @return the LISTID
     */
    public Integer getListid() {
        return (Integer) getAttributeInternal(LISTID);
    }


    /**
     * Gets the attribute value for CCDESC using the alias name Ccdesc.
     * @return the CCDESC
     */
    public String getCcdesc() {
        return (String) getAttributeInternal(CCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for CCDESC using the alias name Ccdesc.
     * @param value value to set the CCDESC
     */
    public void setCcdesc(String value) {
        setAttributeInternal(CCDESC, value);
    }

    /**
     * Gets the attribute value for CCSTATUS using the alias name Ccstatus.
     * @return the CCSTATUS
     */
    public String getCcstatus() {
        return (String) getAttributeInternal(CCSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for CCSTATUS using the alias name Ccstatus.
     * @param value value to set the CCSTATUS
     */
    public void setCcstatus(String value) {
        setAttributeInternal(CCSTATUS, value);
    }

    /**
     * Gets the attribute value for CREATED using the alias name Created.
     * @return the CREATED
     */
    public Timestamp getCreated() {
        return (Timestamp) getAttributeInternal(CREATED);
    }


    /**
     * Gets the attribute value for FROZEN using the alias name Frozen.
     * @return the FROZEN
     */
    public Timestamp getFrozen() {
        return (Timestamp) getAttributeInternal(FROZEN);
    }

    /**
     * Sets <code>value</code> as attribute value for FROZEN using the alias name Frozen.
     * @param value value to set the FROZEN
     */
    public void setFrozen(Timestamp value) {
        setAttributeInternal(FROZEN, value);
    }

    /**
     * Gets the attribute value for COMPLETED using the alias name Completed.
     * @return the COMPLETED
     */
    public Timestamp getCompleted() {
        return (Timestamp) getAttributeInternal(COMPLETED);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPLETED using the alias name Completed.
     * @param value value to set the COMPLETED
     */
    public void setCompleted(Timestamp value) {
        setAttributeInternal(COMPLETED, value);
    }

    /**
     * Gets the attribute value for STORE using the alias name Store.
     * @return the STORE
     */
    public String getStore() {
        return (String) getAttributeInternal(STORE);
    }

    /**
     * Sets <code>value</code> as attribute value for STORE using the alias name Store.
     * @param value value to set the STORE
     */
    public void setStore(String value) {
        setAttributeInternal(STORE, value);
    }

    /**
     * Gets the attribute value for ORG using the alias name Org.
     * @return the ORG
     */
    public String getOrg() {
        return (String) getAttributeInternal(ORG);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG using the alias name Org.
     * @param value value to set the ORG
     */
    public void setOrg(String value) {
        setAttributeInternal(ORG, value);
    }

    /**
     * Gets the attribute value for BINSTART using the alias name Binstart.
     * @return the BINSTART
     */
    public String getBinstart() {
        return (String) getAttributeInternal(BINSTART);
    }

    /**
     * Sets <code>value</code> as attribute value for BINSTART using the alias name Binstart.
     * @param value value to set the BINSTART
     */
    public void setBinstart(String value) {
        setAttributeInternal(BINSTART, value);
    }

    /**
     * Gets the attribute value for BINEND using the alias name Binend.
     * @return the BINEND
     */
    public String getBinend() {
        return (String) getAttributeInternal(BINEND);
    }

    /**
     * Sets <code>value</code> as attribute value for BINEND using the alias name Binend.
     * @param value value to set the BINEND
     */
    public void setBinend(String value) {
        setAttributeInternal(BINEND, value);
    }

    /**
     * Gets the attribute value for PARTCLASS using the alias name Partclass.
     * @return the PARTCLASS
     */
    public String getPartclass() {
        return (String) getAttributeInternal(PARTCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTCLASS using the alias name Partclass.
     * @param value value to set the PARTCLASS
     */
    public void setPartclass(String value) {
        setAttributeInternal(PARTCLASS, value);
    }

    /**
     * Gets the attribute value for PARTSTART using the alias name Partstart.
     * @return the PARTSTART
     */
    public String getPartstart() {
        return (String) getAttributeInternal(PARTSTART);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTSTART using the alias name Partstart.
     * @param value value to set the PARTSTART
     */
    public void setPartstart(String value) {
        setAttributeInternal(PARTSTART, value);
    }

    /**
     * Gets the attribute value for PARTEND using the alias name Partend.
     * @return the PARTEND
     */
    public String getPartend() {
        return (String) getAttributeInternal(PARTEND);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTEND using the alias name Partend.
     * @param value value to set the PARTEND
     */
    public void setPartend(String value) {
        setAttributeInternal(PARTEND, value);
    }

    /**
     * Gets the attribute value for P1 using the alias name P1.
     * @return the P1
     */
    public String getP1() {
        return (String) getAttributeInternal(P1);
    }

    /**
     * Sets <code>value</code> as attribute value for P1 using the alias name P1.
     * @param value value to set the P1
     */
    public void setP1(String value) {
        setAttributeInternal(P1, value);
    }

    /**
     * Gets the attribute value for P2 using the alias name P2.
     * @return the P2
     */
    public String getP2() {
        return (String) getAttributeInternal(P2);
    }

    /**
     * Sets <code>value</code> as attribute value for P2 using the alias name P2.
     * @param value value to set the P2
     */
    public void setP2(String value) {
        setAttributeInternal(P2, value);
    }

    /**
     * Gets the attribute value for P3 using the alias name P3.
     * @return the P3
     */
    public String getP3() {
        return (String) getAttributeInternal(P3);
    }

    /**
     * Sets <code>value</code> as attribute value for P3 using the alias name P3.
     * @param value value to set the P3
     */
    public void setP3(String value) {
        setAttributeInternal(P3, value);
    }

    /**
     * Gets the attribute value for P4 using the alias name P4.
     * @return the P4
     */
    public String getP4() {
        return (String) getAttributeInternal(P4);
    }

    /**
     * Sets <code>value</code> as attribute value for P4 using the alias name P4.
     * @param value value to set the P4
     */
    public void setP4(String value) {
        setAttributeInternal(P4, value);
    }

    /**
     * Gets the attribute value for P5 using the alias name P5.
     * @return the P5
     */
    public String getP5() {
        return (String) getAttributeInternal(P5);
    }

    /**
     * Sets <code>value</code> as attribute value for P5 using the alias name P5.
     * @param value value to set the P5
     */
    public void setP5(String value) {
        setAttributeInternal(P5, value);
    }

    /**
     * Gets the attribute value for P6 using the alias name P6.
     * @return the P6
     */
    public String getP6() {
        return (String) getAttributeInternal(P6);
    }

    /**
     * Sets <code>value</code> as attribute value for P6 using the alias name P6.
     * @param value value to set the P6
     */
    public void setP6(String value) {
        setAttributeInternal(P6, value);
    }

    /**
     * Gets the attribute value for STTKNUM using the alias name Sttknum.
     * @return the STTKNUM
     */
    public String getSttknum() {
        return (String) getAttributeInternal(STTKNUM);
    }


    /**
     * Gets the attribute value for the calculated attribute RangeType.
     * @return the RangeType
     */
    public String getRangeType() {
        return (String) getAttributeInternal(RANGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RangeType.
     * @param value value to set the  RangeType
     */
    public void setRangeType(String value) {
        setAttributeInternal(RANGETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tStoreroom.
     * @return the tStoreroom
     */
    public String gettStoreroom() {
        return (String) getAttributeInternal(TSTOREROOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tStoreroom.
     * @param value value to set the  tStoreroom
     */
    public void settStoreroom(String value) {
        setAttributeInternal(TSTOREROOM, value);
    }

    /**
     * Gets the attribute value for BIN using the alias name Bin.
     * @return the BIN
     */
    public String getBin() {
        return (String) getAttributeInternal(BIN);
    }

    /**
     * Sets <code>value</code> as attribute value for BIN using the alias name Bin.
     * @param value value to set the BIN
     */
    public void setBin(String value) {
        setAttributeInternal(BIN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute emailStr.
     * @return the emailStr
     */
    public String getemailStr() {
        return (String) getAttributeInternal(EMAILSTR);
    }


    /**
     * Gets the attribute value for JOBID using the alias name Jobid.
     * @return the JOBID
     */
    public String getJobid() {
        return (String) getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as attribute value for JOBID using the alias name Jobid.
     * @param value value to set the JOBID
     */
    public void setJobid(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltCyclecountpartsView.
     */
    public RowIterator getMrltCyclecountpartsView() {
        return (RowIterator)getAttributeInternal(MRLTCYCLECOUNTPARTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltCyclecountpartstoresView.
     */
    public RowIterator getMrltCyclecountpartstoresView() {
        return (RowIterator)getAttributeInternal(MRLTCYCLECOUNTPARTSTORESVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltCyclecountpartsMainStore.
     */
    public RowIterator getMrltCyclecountpartsMainStore() {
        return (RowIterator)getAttributeInternal(MRLTCYCLECOUNTPARTSMAINSTORE);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MrltFifoheaderView.
     */
    public RowIterator getMrltFifoheaderView() {
        return (RowIterator)getAttributeInternal(MRLTFIFOHEADERVIEW);
    }

    /**
     * Sets the master-detail link MrltFifoheaderView between this object and <code>value</code>.
     */
    public void setMrltFifoheaderView(Row value) {
        setAttributeInternal(MRLTFIFOHEADERVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CycleCountPartsMain.
     */
    public RowIterator getCycleCountPartsMain() {
        return (RowIterator)getAttributeInternal(CYCLECOUNTPARTSMAIN);
    }


  /**
   * Gets the associated <code>RowIterator</code> using master-detail link CycleCountPartsMain_distBinView.
   */
  public RowIterator getCycleCountPartsMain_distBinView()
  {
    return (RowIterator) getAttributeInternal(CYCLECOUNTPARTSMAIN_DISTBINVIEW);
  }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CCPartVO.
     */
    public RowIterator getCCPartVO() {
        return (RowIterator) getAttributeInternal(CCPARTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltCyclecountpartstoresView1.
     */
    public RowSet getMrltCyclecountpartstoresView1() {
        return (RowSet)getAttributeInternal(MRLTCYCLECOUNTPARTSTORESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CCStatusLOV.
     */
    public RowSet getCCStatusLOV() {
        return (RowSet)getAttributeInternal(CCSTATUSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CCPartsMultBinExistence.
     */
    public RowSet getCCPartsMultBinExistence() {
        return (RowSet)getAttributeInternal(CCPARTSMULTBINEXISTENCE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CCPartsInOtherCountExistence.
     */
    public RowSet getCCPartsInOtherCountExistence() {
        return (RowSet)getAttributeInternal(CCPARTSINOTHERCOUNTEXISTENCE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefMp5profileView.
     */
    public RowSet getMrlrefMp5profileView() {
        return (RowSet)getAttributeInternal(MRLREFMP5PROFILEVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
