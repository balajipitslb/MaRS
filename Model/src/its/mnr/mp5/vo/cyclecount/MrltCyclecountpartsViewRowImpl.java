package its.mnr.mp5.vo.cyclecount;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 13 11:46:42 PDT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltCyclecountpartsViewRowImpl extends ExtendedViewRowImpl {


    public static final int ENTITY_MRLTCYCLECOUNTPARTS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        StlTrans {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlTrans();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlTrans((String) value);
            }
        }
        ,
        StlPart {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlPart();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlPart((String) value);
            }
        }
        ,
        StlBin {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlBin();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlBin((String) value);
            }
        }
        ,
        StlLot {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlLot();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlLot((String) value);
            }
        }
        ,
        StlStore {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlStore();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlStore((String) value);
            }
        }
        ,
        StlExpqty {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlExpqty();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlExpqty((Number) value);
            }
        }
        ,
        StlPhyqty {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlPhyqty();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlPhyqty((Number) value);
            }
        }
        ,
        StlType {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlType();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlType((String) value);
            }
        }
        ,
        StlPartOrg {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlPartOrg();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlPartOrg((String) value);
            }
        }
        ,
        StlListid {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlListid();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlListid((Integer) value);
            }
        }
        ,
        Ccpid {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getCcpid();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setCcpid((Number) value);
            }
        }
        ,
        StlTimestamp {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getStlTimestamp();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setStlTimestamp((Timestamp) value);
            }
        }
        ,
        Discrepant {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getDiscrepant();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        tDiscrepant {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.gettDiscrepant();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.settDiscrepant((String) value);
            }
        }
        ,
        tPartDesc {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.gettPartDesc();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        tTimeStamp {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.gettTimeStamp();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.settTimeStamp((String) value);
            }
        }
        ,
        tShowCycleCount {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.gettShowCycleCount();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.settShowCycleCount((String) value);
            }
        }
        ,
        PartsMaintView {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getPartsMaintView();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefCyclecountstoreViewLOV {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getMrlrefCyclecountstoreViewLOV();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        YesNoBoolean {
            public Object get(MrltCyclecountpartsViewRowImpl obj) {
                return obj.getYesNoBoolean();
            }

            public void put(MrltCyclecountpartsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(MrltCyclecountpartsViewRowImpl object);

        public abstract void put(MrltCyclecountpartsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int STLTRANS = AttributesEnum.StlTrans.index();
    public static final int STLPART = AttributesEnum.StlPart.index();
    public static final int STLBIN = AttributesEnum.StlBin.index();
    public static final int STLLOT = AttributesEnum.StlLot.index();
    public static final int STLSTORE = AttributesEnum.StlStore.index();
    public static final int STLEXPQTY = AttributesEnum.StlExpqty.index();
    public static final int STLPHYQTY = AttributesEnum.StlPhyqty.index();
    public static final int STLTYPE = AttributesEnum.StlType.index();
    public static final int STLPARTORG = AttributesEnum.StlPartOrg.index();
    public static final int STLLISTID = AttributesEnum.StlListid.index();
    public static final int CCPID = AttributesEnum.Ccpid.index();
    public static final int STLTIMESTAMP = AttributesEnum.StlTimestamp.index();
    public static final int DISCREPANT = AttributesEnum.Discrepant.index();
    public static final int TDISCREPANT = AttributesEnum.tDiscrepant.index();
    public static final int TPARTDESC = AttributesEnum.tPartDesc.index();
    public static final int TTIMESTAMP = AttributesEnum.tTimeStamp.index();
    public static final int TSHOWCYCLECOUNT = AttributesEnum.tShowCycleCount.index();
    public static final int PARTSMAINTVIEW = AttributesEnum.PartsMaintView.index();
    public static final int MRLREFCYCLECOUNTSTOREVIEWLOV = AttributesEnum.MrlrefCyclecountstoreViewLOV.index();
    public static final int YESNOBOOLEAN = AttributesEnum.YesNoBoolean.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltCyclecountpartsViewRowImpl() {
    }

    /**
     * Gets MrltCyclecountparts entity object.
     * @return the MrltCyclecountparts
     */
    public ExtendedEntityImpl getMrltCyclecountparts() {
        return (ExtendedEntityImpl) getEntity(ENTITY_MRLTCYCLECOUNTPARTS);
    }

    /**
     * Gets the attribute value for STL_TRANS using the alias name StlTrans.
     * @return the STL_TRANS
     */
    public String getStlTrans() {
        return (String) getAttributeInternal(STLTRANS);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_TRANS using the alias name StlTrans.
     * @param value value to set the STL_TRANS
     */
    public void setStlTrans(String value) {
        setAttributeInternal(STLTRANS, value);
    }

    /**
     * Gets the attribute value for STL_PART using the alias name StlPart.
     * @return the STL_PART
     */
    public String getStlPart() {
        return (String) getAttributeInternal(STLPART);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_PART using the alias name StlPart.
     * @param value value to set the STL_PART
     */
    public void setStlPart(String value) {
        setAttributeInternal(STLPART, value);
    }

    /**
     * Gets the attribute value for STL_BIN using the alias name StlBin.
     * @return the STL_BIN
     */
    public String getStlBin() {
        return (String) getAttributeInternal(STLBIN);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_BIN using the alias name StlBin.
     * @param value value to set the STL_BIN
     */
    public void setStlBin(String value) {
        setAttributeInternal(STLBIN, value);
    }

    /**
     * Gets the attribute value for STL_LOT using the alias name StlLot.
     * @return the STL_LOT
     */
    public String getStlLot() {
        return (String) getAttributeInternal(STLLOT);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_LOT using the alias name StlLot.
     * @param value value to set the STL_LOT
     */
    public void setStlLot(String value) {
        setAttributeInternal(STLLOT, value);
    }

    /**
     * Gets the attribute value for STL_STORE using the alias name StlStore.
     * @return the STL_STORE
     */
    public String getStlStore() {
        return (String) getAttributeInternal(STLSTORE);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_STORE using the alias name StlStore.
     * @param value value to set the STL_STORE
     */
    public void setStlStore(String value) {
        setAttributeInternal(STLSTORE, value);
    }

    /**
     * Gets the attribute value for STL_EXPQTY using the alias name StlExpqty.
     * @return the STL_EXPQTY
     */
    public Number getStlExpqty() {
        return (Number) getAttributeInternal(STLEXPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_EXPQTY using the alias name StlExpqty.
     * @param value value to set the STL_EXPQTY
     */
    public void setStlExpqty(Number value) {
        setAttributeInternal(STLEXPQTY, value);
    }

    /**
     * Gets the attribute value for STL_PHYQTY using the alias name StlPhyqty.
     * @return the STL_PHYQTY
     */
    public Number getStlPhyqty() {
        return (Number) getAttributeInternal(STLPHYQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_PHYQTY using the alias name StlPhyqty.
     * @param value value to set the STL_PHYQTY
     */
    public void setStlPhyqty(Number value) {
        setAttributeInternal(STLPHYQTY, value);
    }

    /**
     * Gets the attribute value for STL_TYPE using the alias name StlType.
     * @return the STL_TYPE
     */
    public String getStlType() {
        return (String) getAttributeInternal(STLTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_TYPE using the alias name StlType.
     * @param value value to set the STL_TYPE
     */
    public void setStlType(String value) {
        setAttributeInternal(STLTYPE, value);
    }

    /**
     * Gets the attribute value for STL_PART_ORG using the alias name StlPartOrg.
     * @return the STL_PART_ORG
     */
    public String getStlPartOrg() {
        return (String) getAttributeInternal(STLPARTORG);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_PART_ORG using the alias name StlPartOrg.
     * @param value value to set the STL_PART_ORG
     */
    public void setStlPartOrg(String value) {
        setAttributeInternal(STLPARTORG, value);
    }

    /**
     * Gets the attribute value for STL_LISTID using the alias name StlListid.
     * @return the STL_LISTID
     */
    public Integer getStlListid() {
        return (Integer) getAttributeInternal(STLLISTID);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_LISTID using the alias name StlListid.
     * @param value value to set the STL_LISTID
     */
    public void setStlListid(Integer value) {
        setAttributeInternal(STLLISTID, value);
    }

    /**
     * Gets the attribute value for CCPID using the alias name Ccpid.
     * @return the CCPID
     */
    public Number getCcpid() {
        return (Number) getAttributeInternal(CCPID);
    }

    /**
     * Sets <code>value</code> as attribute value for CCPID using the alias name Ccpid.
     * @param value value to set the CCPID
     */
    public void setCcpid(Number value) {
        setAttributeInternal(CCPID, value);
    }

    /**
     * Gets the attribute value for STL_TIMESTAMP using the alias name StlTimestamp.
     * @return the STL_TIMESTAMP
     */
    public Timestamp getStlTimestamp() {
        return (Timestamp) getAttributeInternal(STLTIMESTAMP);
    }

    /**
     * Sets <code>value</code> as attribute value for STL_TIMESTAMP using the alias name StlTimestamp.
     * @param value value to set the STL_TIMESTAMP
     */
    public void setStlTimestamp(Timestamp value) {
        setAttributeInternal(STLTIMESTAMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Discrepant.
     * @return the Discrepant
     */
    public String getDiscrepant() {
        return (String) getAttributeInternal(DISCREPANT);
    }

    /**
     * Gets the attribute value for the calculated attribute tDiscrepant.
     * @return the tDiscrepant
     */
    public String gettDiscrepant() {
        return (String) getAttributeInternal(TDISCREPANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tDiscrepant.
     * @param value value to set the  tDiscrepant
     */
    public void settDiscrepant(String value) {
        setAttributeInternal(TDISCREPANT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tPartDesc.
     * @return the tPartDesc
     */
    public String gettPartDesc() {
        return (String) getAttributeInternal(TPARTDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute tTimeStamp.
     * @return the tTimeStamp
     */
    public String gettTimeStamp() {
        return (String) getAttributeInternal(TTIMESTAMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tTimeStamp.
     * @param value value to set the  tTimeStamp
     */
    public void settTimeStamp(String value) {
        setAttributeInternal(TTIMESTAMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tShowCycleCount.
     * @return the tShowCycleCount
     */
    public String gettShowCycleCount() {
        return (String) getAttributeInternal(TSHOWCYCLECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tShowCycleCount.
     * @param value value to set the  tShowCycleCount
     */
    public void settShowCycleCount(String value) {
        setAttributeInternal(TSHOWCYCLECOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tDiscrepant.
     * @return the tDiscrepant
     */
    public String getTDiscrepant() {
        return (String) getAttributeInternal(TDISCREPANT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tDiscrepant.
     * @param value value to set the  tDiscrepant
     */
    public void setTDiscrepant(String value) {
        setAttributeInternal(TDISCREPANT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tPartDesc.
     * @return the tPartDesc
     */
    public String getTPartDesc() {
        return (String) getAttributeInternal(TPARTDESC);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tPartDesc.
     * @param value value to set the  tPartDesc
     */
    public void setTPartDesc(String value) {
        setAttributeInternal(TPARTDESC, value);
    }
    /**
     * Gets the attribute value for the calculated attribute tTimeStamp.
     * @return the tTimeStamp
     */
    public String getTTimeStamp() {
        return (String) getAttributeInternal(TTIMESTAMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tTimeStamp.
     * @param value value to set the  tTimeStamp
     */
    public void setTTimeStamp(String value) {
        setAttributeInternal(TTIMESTAMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tShowCycleCount.
     * @return the tShowCycleCount
     */
    public String getTShowCycleCount() {
        return (String) getAttributeInternal(TSHOWCYCLECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tShowCycleCount.
     * @param value value to set the  tShowCycleCount
     */
    public void setTShowCycleCount(String value) {
        setAttributeInternal(TSHOWCYCLECOUNT, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link PartsMaintView.
     */
    public Row getPartsMaintView() {
        return (Row) getAttributeInternal(PARTSMAINTVIEW);
    }

    /**
     * Sets the master-detail link PartsMaintView between this object and <code>value</code>.
     */
    public void setPartsMaintView(Row value) {
        setAttributeInternal(PARTSMAINTVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefCyclecountstoreViewLOV.
     */
    public RowSet getMrlrefCyclecountstoreViewLOV() {
        return (RowSet) getAttributeInternal(MRLREFCYCLECOUNTSTOREVIEWLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoBoolean.
     */
    public RowSet getYesNoBoolean() {
        return (RowSet) getAttributeInternal(YESNOBOOLEAN);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

