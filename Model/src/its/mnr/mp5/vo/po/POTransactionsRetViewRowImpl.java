package its.mnr.mp5.vo.po;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;
import its.mnr.mp5.eo.local.R5ordersImpl;
import its.mnr.mp5.eo.local.R5transactionsImpl;

import its.mnr.mp5.lov.POTransactionsPartsRecvdClsdImpl;
import its.mnr.mp5.lov.TranslinePartTotalImpl;
import its.mnr.mp5.vo.parts.PartsBinstockViewImpl;

import its.mnr.mp5.vo.po.common.POTransactionsRetViewRow;

import java.util.ArrayList;
import java.util.Iterator;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 28 08:29:51 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class POTransactionsRetViewRowImpl extends ExtendedViewRowImpl implements POTransactionsRetViewRow {


    public static final int ENTITY_R5TRANSACTIONS = 0;

    public ArrayList<Integer> ordLinesFetched() {
        //Get rows already fetched in VO
        System.out.println("Get current Fetched records:Start");
        RowSet rsT = (RowSet)getPOTranslinesView();
        rsT.reset();
        ArrayList<Integer> fetchedOrdLine = new ArrayList<Integer>();
        if (rsT.first() != null) {
            Row rwT = rsT.first();
            Integer iLine = (Integer)rwT.getAttribute("TrlOrdline");
            ////System.out.println("Line: " + iLine);
            fetchedOrdLine.add(iLine);
        }
        while (rsT.hasNext()) {
            Row rwT = rsT.next();
            Integer iLine = (Integer)rwT.getAttribute("TrlOrdline");
            ////System.out.println("Line: " + iLine);
            fetchedOrdLine.add(iLine);
        }
        rsT.closeRowSet();
        ////System.out.println("OrderLines already Fetched: ");
        // let us print all the values available in list
        for (Integer i : fetchedOrdLine) {
            System.out.println("Line " + i);
        }

        System.out.println("Get current Fetched records:End");
        return fetchedOrdLine;
    }
    
    public Double getSumPartRecv(String sOrder, String sPart, String sPartOrg){
            ////System.out.println("Calling getSumPartRecv()");
            Double ret;
            //set and execute View Criteria
            
            RowSet rs = this.getTranslinePartTotal();
            TranslinePartTotalImpl impl = (TranslinePartTotalImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("TranslinePartTotalCriteria");
            vc.resetCriteria();
            impl.setbType("RETN");
            impl.setbOrder(sOrder);
            impl.setbPart(sPart);
            impl.setbPartOrg(sPartOrg);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ret = (Double)rw.getAttribute("SumTrlQty");
                ////System.out.println("ret: " + ret);
                rs.closeRowSet();
                return ret;
            }

            return null;
        }
    
    public void fetchOrderlines_ORIG() {
        Boolean notRecvdYet = false;
        Boolean partialRecvd = false;
        String sOrder;
        Integer sOrdLine;
        String sPart;
        String sPartOrg;
        Double dOutstandingQty;
        
        RowSet rs = getPOTransactionsPartsRecvdClsd();
        POTransactionsPartsRecvdClsdImpl impl = (POTransactionsPartsRecvdClsdImpl)rs.getViewObject();
        ViewCriteria vc = impl.getViewCriteria("POTransactionsPartsRecvdClsdCriteria");
        vc.resetCriteria();
        impl.setbOrder(getTraOrder());
        ////System.out.println("getTraOrder(): " + getTraOrder());
        impl.applyViewCriteria(vc);
        // execute query to make sure we get latest data!
        impl.executeQuery();
        RowSetIterator  iter = impl.getRowSetIterator();
        Row rw = iter.first();
        
        RowIterator rit = getPOTranslinesView();
        //rit.reset();
        Integer count = 1;
        ////System.out.println(count);
        
        if (rw != null) {
           // //System.out.println(count++);
            //rw = iter.next();
            sOrder = (String)rw.getAttribute("TraOrder");
            sOrdLine = (Integer)rw.getAttribute("TrlOrdline");
            sPart = (String)rw.getAttribute("TrlPart");
            sPartOrg = (String)rw.getAttribute("TrlPartOrg");
//            dOutstandingQty = ((Double)rw.getAttribute("tTotalRecvd")== null ? 0 : (Double)rw.getAttribute("tTotalRecvd"))
//                              - ((Double)rw.getAttribute("tTotalRetn")== null ? 0:(Double)rw.getAttribute("tTotalRetn"));
//            //System.out.println("ACnt: " + count++ + ":: Part:" + sPart + ":: dOutstandingQty: " + dOutstandingQty );


            //if (dOutstandingQty <= 0) {
                POTranslinesViewRowImpl rowImpl = (POTranslinesViewRowImpl)rit.createRow();
                rit.insertRow(rowImpl);

                System.out.println("Inserting new row for Part#:" + sPart);

                String sDefaultBinLot = getDefaultBinLot(sPart, sPartOrg);
                String sBin = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "BIN:", ",") : null);
                String sLot = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "LOT:", ",") : null);

                rowImpl.setTrlType("RETN");
                rowImpl.setTrlRtype("RETN");
                rowImpl.setTrlPart(sPart);
                rowImpl.setTrlOrdline(sOrdLine);
                rowImpl.setTrlLot(sLot);
                rowImpl.setTrlBin(sBin);
                rowImpl.setTrlStore((String)rw.getAttribute("TrlStore"));
                rowImpl.setTrlPrice((Double)rw.getAttribute("TrlPrice"));
                //rowImpl.setTrlQty((Double)rw.getAttribute("OrlOrdqty"));
                rowImpl.setTrlOrder(sOrder);
                rowImpl.setTrlIo(-1);
                rowImpl.setTrlOrderOrg((String)rw.getAttribute("TraOrderOrg"));
                rowImpl.setTrlPartOrg(sPartOrg);
           // }
            }
        while (iter.hasNext()) {
            ////System.out.println(count++);
            rw = iter.next();
            // Row rw = rs.next();
            sOrder = (String)rw.getAttribute("TraOrder");
            sOrdLine = (Integer)rw.getAttribute("TrlOrdline");
            sPart = (String)rw.getAttribute("TrlPart");
            sPartOrg = (String)rw.getAttribute("TrlPartOrg");

            POTranslinesViewRowImpl rowImpl = (POTranslinesViewRowImpl)rit.createRow();
            rit.insertRow(rowImpl);

            System.out.println("Inserting new row for Part#:" + sPart);

            String sDefaultBinLot = getDefaultBinLot(sPart, sPartOrg);
            String sBin = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "BIN:", ",") : null);
            String sLot = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "LOT:", ",") : null);

            rowImpl.setTrlType("RETN");
            rowImpl.setTrlRtype("RETN");
            rowImpl.setTrlPart(sPart);
            rowImpl.setTrlOrdline(sOrdLine);
            rowImpl.setTrlLot(sLot);
            rowImpl.setTrlBin(sBin);
            rowImpl.setTrlStore((String)rw.getAttribute("TrlStore"));
            rowImpl.setTrlPrice((Double)rw.getAttribute("TrlPrice"));
            //rowImpl.setTrlQty((Double)rw.getAttribute("OrlOrdqty"));
            rowImpl.setTrlOrder(sOrder);
            rowImpl.setTrlIo(-1);
            rowImpl.setTrlOrderOrg((String)rw.getAttribute("TraOrderOrg"));
            rowImpl.setTrlPartOrg(sPartOrg);
        }
       
        rs.closeRowSet();

    }

    public void fetchOrderlines() {
        Boolean allReadyFetched = false;
        //Boolean partialRecvd = false;
        String sOrder;
        Integer sOrdLine;
        String sPart;
        String sPartOrg;
        Double dOutstandingQty;

        RowSet rs = getPOTransactionsPartsRecvdClsd();
        POTransactionsPartsRecvdClsdImpl impl = (POTransactionsPartsRecvdClsdImpl)rs.getViewObject();
        ViewCriteria vc = impl.getViewCriteria("POTransactionsPartsRecvdClsdCriteria");
        vc.resetCriteria();
        impl.setbOrder(getTraOrder());
        ////System.out.println("getTraOrder(): " + getTraOrder());
        impl.applyViewCriteria(vc);
        // execute query to make sure we get latest data!
        impl.executeQuery();
        RowSetIterator iter = impl.getRowSetIterator();
        Row rw = iter.first();

        //Get rows already received
        ArrayList<Integer> aList = ordLinesFetched();

        RowIterator rit = getPOTranslinesView();
        //rit.reset();
        Integer count = 1;
        ////System.out.println(count);

        if (rw != null) {
            // //System.out.println(count++);
            //rw = iter.next();
            sOrder = (String)rw.getAttribute("TraOrder");
            sOrdLine = (Integer)rw.getAttribute("TrlOrdline");
            sPart = (String)rw.getAttribute("TrlPart");
            sPartOrg = (String)rw.getAttribute("TrlPartOrg");
            //            dOutstandingQty = ((Double)rw.getAttribute("tTotalRecvd")== null ? 0 : (Double)rw.getAttribute("tTotalRecvd"))
            //                              - ((Double)rw.getAttribute("tTotalRetn")== null ? 0:(Double)rw.getAttribute("tTotalRetn"));
//            //System.out.println("ACnt: " + count++ + ":: Part:" + sPart) /*+ ":: dOutstandingQty: " + dOutstandingQty*/;

            allReadyFetched = aList.contains(sOrdLine);
//            //System.out.println("allReadyFetched: " + allReadyFetched);

            if (!allReadyFetched) {
                POTranslinesViewRowImpl rowImpl = (POTranslinesViewRowImpl)rit.createRow();
                rit.insertRow(rowImpl);

//                //System.out.println("Inserting new row for Part#:" + sPart);

                String sDefaultBinLot = getDefaultBinLot(sPart, sPartOrg);
                String sBin = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "BIN:", ",") : null);
                String sLot = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "LOT:", ",") : null);

                rowImpl.setTrlType("RETN");
                rowImpl.setTrlRtype("RETN");
                rowImpl.setTrlPart(sPart);
                rowImpl.setTrlOrdline(sOrdLine);
                rowImpl.setTrlLot(sLot);
                rowImpl.setTrlBin(sBin);
                rowImpl.setTrlStore((String)rw.getAttribute("TrlStore"));
                rowImpl.setTrlPrice((Double)rw.getAttribute("TrlPrice"));
                //rowImpl.setTrlQty((Double)rw.getAttribute("OrlOrdqty"));
                rowImpl.setTrlOrder(sOrder);
                rowImpl.setTrlIo(-1);
                rowImpl.setTrlOrderOrg((String)rw.getAttribute("TraOrderOrg"));
                rowImpl.setTrlPartOrg(sPartOrg);
            }
        }
        while (iter.hasNext()) {
            ////System.out.println(count++);
            rw = iter.next();
            // Row rw = rs.next();
            sOrder = (String)rw.getAttribute("TraOrder");
            sOrdLine = (Integer)rw.getAttribute("TrlOrdline");
            sPart = (String)rw.getAttribute("TrlPart");
            sPartOrg = (String)rw.getAttribute("TrlPartOrg");

//            //System.out.println("ACnt: " + count++ + ":: Part:" + sPart) /*+ ":: dOutstandingQty: " + dOutstandingQty*/;

            allReadyFetched = aList.contains(sOrdLine);
//            //System.out.println("allReadyFetched: " + allReadyFetched);

            if (!allReadyFetched) {
                POTranslinesViewRowImpl rowImpl = (POTranslinesViewRowImpl)rit.createRow();
                rit.insertRow(rowImpl);

//                //System.out.println("Inserting new row for Part#:" + sPart);

                String sDefaultBinLot = getDefaultBinLot(sPart, sPartOrg);
                String sBin = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "BIN:", ",") : null);
                String sLot = (sDefaultBinLot != null ? parseString(sDefaultBinLot, "LOT:", ",") : null);

                rowImpl.setTrlType("RETN");
                rowImpl.setTrlRtype("RETN");
                rowImpl.setTrlPart(sPart);
                rowImpl.setTrlOrdline(sOrdLine);
                rowImpl.setTrlLot(sLot);
                rowImpl.setTrlBin(sBin);
                rowImpl.setTrlStore((String)rw.getAttribute("TrlStore"));
                rowImpl.setTrlPrice((Double)rw.getAttribute("TrlPrice"));
                //rowImpl.setTrlQty((Double)rw.getAttribute("OrlOrdqty"));
                rowImpl.setTrlOrder(sOrder);
                rowImpl.setTrlIo(-1);
                rowImpl.setTrlOrderOrg((String)rw.getAttribute("TraOrderOrg"));
                rowImpl.setTrlPartOrg(sPartOrg);
            }
        }

        rs.closeRowSet();

    }
    
    public String getDefaultBinLot(String pPart, String pPartOrg){
            String ret;
            //set and execute View Criteria            
            RowSet rs = this.getPartsBinstockView();
            PartsBinstockViewImpl impl = (PartsBinstockViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("PartsBinstockByPart");
            vc.resetCriteria();
            impl.setbPart(pPart);
            impl.setbPartOrg(pPartOrg);
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ////System.out.println("ITS_EstimateIns Ret = " + (String)rw.getAttribute("Acctnum"));
                String sBin = (String)rw.getAttribute("BisBin");
                String sLot = (String)rw.getAttribute("BisLot");
                ////System.out.println("sEst: " + sEst);

                rs.closeRowSet();
                ret = "BIN:" + sBin + "," + "LOT:" + sLot+ ",";
                return ret;
            }
            return null;
        }
    
    private String parseString(String str, String separator, String delimiter) {
        if (separator == null) {
            return "";
        }
        int separatorPos = str.indexOf(separator);
        if (separatorPos == -1) {
            return "";
        }

        //return str.substring(pos + separator.length()); 1152,EQTYP:CH,RFFLG:
        String detail = str.substring(separatorPos + separator.length());
        int delimiterPos = detail.indexOf(delimiter);

        if (delimiterPos == -1) {
            return "";
        }
        return detail.substring(0, delimiterPos);
    }   
    
    public void setNewRowState(byte b) {
        if (b != Row.STATUS_INITIALIZED || getNewRowState() != Row.STATUS_NEW) {
            super.setNewRowState(b);
        }
    }
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TraAcd {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraAcd();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraAcd((Number)value);
            }
        }
        ,
        TraAuth {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraAuth();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraAuth((String)value);
            }
        }
        ,
        TraCode {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraCode();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraCode((String)value);
            }
        }
        ,
        TraCodeTransient {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraCodeTransient();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraCodeTransient((Number)value);
            }
        }
        ,
        TraDate {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraDate();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraDate((Date)value);
            }
        }
        ,
        TraDesc {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraDesc();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraDesc((String)value);
            }
        }
        ,
        TraFromcode {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromcode();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromcode((String)value);
            }
        }
        ,
        TraFromcodeOrg {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromcodeOrg();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromcodeOrg((String)value);
            }
        }
        ,
        TraFromentity {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromentity();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromentity((String)value);
            }
        }
        ,
        TraFromrentity {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromrentity();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromrentity((String)value);
            }
        }
        ,
        TraFromrtype {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromrtype();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromrtype((String)value);
            }
        }
        ,
        TraFromtype {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraFromtype();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraFromtype((String)value);
            }
        }
        ,
        TraOrder {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraOrder();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraOrder((String)value);
            }
        }
        ,
        TraOrderOrg {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraOrderOrg();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraOrderOrg((String)value);
            }
        }
        ,
        TraOrg {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraOrg();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraOrg((String)value);
            }
        }
        ,
        TraPrinted {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraPrinted();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraPrinted((String)value);
            }
        }
        ,
        TraRstatus {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraRstatus();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraRstatus((String)value);
            }
        }
        ,
        TraRtype {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraRtype();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraRtype((String)value);
            }
        }
        ,
        TraStatus {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraStatus();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraStatus((String)value);
            }
        }
        ,
        TraTocode {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraTocode();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraTocode((String)value);
            }
        }
        ,
        TraTocodeOrg {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraTocodeOrg();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraTocodeOrg((String)value);
            }
        }
        ,
        TraToentity {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraToentity();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraToentity((String)value);
            }
        }
        ,
        TraTorentity {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraTorentity();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraTorentity((String)value);
            }
        }
        ,
        TraTortype {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraTortype();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraTortype((String)value);
            }
        }
        ,
        TraTotype {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraTotype();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraTotype((String)value);
            }
        }
        ,
        TraType {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTraType();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setTraType((String)value);
            }
        }
        ,
        POrdersView {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getPOrdersView();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        POTranslinesView {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getPOTranslinesView();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        POTransactionRetnStatus {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getPOTransactionRetnStatus();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TranslinePartTotal {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getTranslinePartTotal();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PartsBinstockView {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getPartsBinstockView();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        POTransactionsPartsRecvdClsd {
            public Object get(POTransactionsRetViewRowImpl obj) {
                return obj.getPOTransactionsPartsRecvdClsd();
            }

            public void put(POTransactionsRetViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(POTransactionsRetViewRowImpl object);

        public abstract void put(POTransactionsRetViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRAACD = AttributesEnum.TraAcd.index();
    public static final int TRAAUTH = AttributesEnum.TraAuth.index();
    public static final int TRACODE = AttributesEnum.TraCode.index();
    public static final int TRACODETRANSIENT = AttributesEnum.TraCodeTransient.index();
    public static final int TRADATE = AttributesEnum.TraDate.index();
    public static final int TRADESC = AttributesEnum.TraDesc.index();
    public static final int TRAFROMCODE = AttributesEnum.TraFromcode.index();
    public static final int TRAFROMCODEORG = AttributesEnum.TraFromcodeOrg.index();
    public static final int TRAFROMENTITY = AttributesEnum.TraFromentity.index();
    public static final int TRAFROMRENTITY = AttributesEnum.TraFromrentity.index();
    public static final int TRAFROMRTYPE = AttributesEnum.TraFromrtype.index();
    public static final int TRAFROMTYPE = AttributesEnum.TraFromtype.index();
    public static final int TRAORDER = AttributesEnum.TraOrder.index();
    public static final int TRAORDERORG = AttributesEnum.TraOrderOrg.index();
    public static final int TRAORG = AttributesEnum.TraOrg.index();
    public static final int TRAPRINTED = AttributesEnum.TraPrinted.index();
    public static final int TRARSTATUS = AttributesEnum.TraRstatus.index();
    public static final int TRARTYPE = AttributesEnum.TraRtype.index();
    public static final int TRASTATUS = AttributesEnum.TraStatus.index();
    public static final int TRATOCODE = AttributesEnum.TraTocode.index();
    public static final int TRATOCODEORG = AttributesEnum.TraTocodeOrg.index();
    public static final int TRATOENTITY = AttributesEnum.TraToentity.index();
    public static final int TRATORENTITY = AttributesEnum.TraTorentity.index();
    public static final int TRATORTYPE = AttributesEnum.TraTortype.index();
    public static final int TRATOTYPE = AttributesEnum.TraTotype.index();
    public static final int TRATYPE = AttributesEnum.TraType.index();
    public static final int PORDERSVIEW = AttributesEnum.POrdersView.index();
    public static final int POTRANSLINESVIEW = AttributesEnum.POTranslinesView.index();
    public static final int POTRANSACTIONRETNSTATUS = AttributesEnum.POTransactionRetnStatus.index();
    public static final int TRANSLINEPARTTOTAL = AttributesEnum.TranslinePartTotal.index();
    public static final int PARTSBINSTOCKVIEW = AttributesEnum.PartsBinstockView.index();
    public static final int POTRANSACTIONSPARTSRECVDCLSD = AttributesEnum.POTransactionsPartsRecvdClsd.index();

    /**
     * This is the default constructor (do not remove).
     */
    public POTransactionsRetViewRowImpl() {
    }

    /**
     * Gets R5transactions entity object.
     * @return the R5transactions
     */
    public R5transactionsImpl getR5transactions() {
        return (R5transactionsImpl)getEntity(ENTITY_R5TRANSACTIONS);
    }

    /**
     * Gets the attribute value for TRA_ACD using the alias name TraAcd.
     * @return the TRA_ACD
     */
    public Number getTraAcd() {
        return (Number) getAttributeInternal(TRAACD);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_ACD using the alias name TraAcd.
     * @param value value to set the TRA_ACD
     */
    public void setTraAcd(Number value) {
        setAttributeInternal(TRAACD, value);
    }

    /**
     * Gets the attribute value for TRA_AUTH using the alias name TraAuth.
     * @return the TRA_AUTH
     */
    public String getTraAuth() {
        return (String) getAttributeInternal(TRAAUTH);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_AUTH using the alias name TraAuth.
     * @param value value to set the TRA_AUTH
     */
    public void setTraAuth(String value) {
        setAttributeInternal(TRAAUTH, value);
    }

    /**
     * Gets the attribute value for TRA_CODE using the alias name TraCode.
     * @return the TRA_CODE
     */
    public String getTraCode() {
        return (String) getAttributeInternal(TRACODE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_CODE using the alias name TraCode.
     * @param value value to set the TRA_CODE
     */
    public void setTraCode(String value) {
        setAttributeInternal(TRACODE, value);
    }

    /**
     * Gets the attribute value for TRA_CODE_TRANSIENT using the alias name TraCodeTransient.
     * @return the TRA_CODE_TRANSIENT
     */
    public Number getTraCodeTransient() {
        return (Number) getAttributeInternal(TRACODETRANSIENT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_CODE_TRANSIENT using the alias name TraCodeTransient.
     * @param value value to set the TRA_CODE_TRANSIENT
     */
    public void setTraCodeTransient(Number value) {
        setAttributeInternal(TRACODETRANSIENT, value);
    }

    /**
     * Gets the attribute value for TRA_DATE using the alias name TraDate.
     * @return the TRA_DATE
     */
    public Date getTraDate() {
        return (Date) getAttributeInternal(TRADATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_DATE using the alias name TraDate.
     * @param value value to set the TRA_DATE
     */
    public void setTraDate(Date value) {
        setAttributeInternal(TRADATE, value);
    }

    /**
     * Gets the attribute value for TRA_DESC using the alias name TraDesc.
     * @return the TRA_DESC
     */
    public String getTraDesc() {
        return (String) getAttributeInternal(TRADESC);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_DESC using the alias name TraDesc.
     * @param value value to set the TRA_DESC
     */
    public void setTraDesc(String value) {
        setAttributeInternal(TRADESC, value);
    }

    /**
     * Gets the attribute value for TRA_FROMCODE using the alias name TraFromcode.
     * @return the TRA_FROMCODE
     */
    public String getTraFromcode() {
        return (String) getAttributeInternal(TRAFROMCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMCODE using the alias name TraFromcode.
     * @param value value to set the TRA_FROMCODE
     */
    public void setTraFromcode(String value) {
        setAttributeInternal(TRAFROMCODE, value);
    }

    /**
     * Gets the attribute value for TRA_FROMCODE_ORG using the alias name TraFromcodeOrg.
     * @return the TRA_FROMCODE_ORG
     */
    public String getTraFromcodeOrg() {
        return (String) getAttributeInternal(TRAFROMCODEORG);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMCODE_ORG using the alias name TraFromcodeOrg.
     * @param value value to set the TRA_FROMCODE_ORG
     */
    public void setTraFromcodeOrg(String value) {
        setAttributeInternal(TRAFROMCODEORG, value);
    }

    /**
     * Gets the attribute value for TRA_FROMENTITY using the alias name TraFromentity.
     * @return the TRA_FROMENTITY
     */
    public String getTraFromentity() {
        return (String) getAttributeInternal(TRAFROMENTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMENTITY using the alias name TraFromentity.
     * @param value value to set the TRA_FROMENTITY
     */
    public void setTraFromentity(String value) {
        setAttributeInternal(TRAFROMENTITY, value);
    }

    /**
     * Gets the attribute value for TRA_FROMRENTITY using the alias name TraFromrentity.
     * @return the TRA_FROMRENTITY
     */
    public String getTraFromrentity() {
        return (String) getAttributeInternal(TRAFROMRENTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMRENTITY using the alias name TraFromrentity.
     * @param value value to set the TRA_FROMRENTITY
     */
    public void setTraFromrentity(String value) {
        setAttributeInternal(TRAFROMRENTITY, value);
    }

    /**
     * Gets the attribute value for TRA_FROMRTYPE using the alias name TraFromrtype.
     * @return the TRA_FROMRTYPE
     */
    public String getTraFromrtype() {
        return (String) getAttributeInternal(TRAFROMRTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMRTYPE using the alias name TraFromrtype.
     * @param value value to set the TRA_FROMRTYPE
     */
    public void setTraFromrtype(String value) {
        setAttributeInternal(TRAFROMRTYPE, value);
    }

    /**
     * Gets the attribute value for TRA_FROMTYPE using the alias name TraFromtype.
     * @return the TRA_FROMTYPE
     */
    public String getTraFromtype() {
        return (String) getAttributeInternal(TRAFROMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_FROMTYPE using the alias name TraFromtype.
     * @param value value to set the TRA_FROMTYPE
     */
    public void setTraFromtype(String value) {
        setAttributeInternal(TRAFROMTYPE, value);
    }

    /**
     * Gets the attribute value for TRA_ORDER using the alias name TraOrder.
     * @return the TRA_ORDER
     */
    public String getTraOrder() {
        return (String) getAttributeInternal(TRAORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_ORDER using the alias name TraOrder.
     * @param value value to set the TRA_ORDER
     */
    public void setTraOrder(String value) {
        setAttributeInternal(TRAORDER, value);
    }

    /**
     * Gets the attribute value for TRA_ORDER_ORG using the alias name TraOrderOrg.
     * @return the TRA_ORDER_ORG
     */
    public String getTraOrderOrg() {
        return (String) getAttributeInternal(TRAORDERORG);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_ORDER_ORG using the alias name TraOrderOrg.
     * @param value value to set the TRA_ORDER_ORG
     */
    public void setTraOrderOrg(String value) {
        setAttributeInternal(TRAORDERORG, value);
    }

    /**
     * Gets the attribute value for TRA_ORG using the alias name TraOrg.
     * @return the TRA_ORG
     */
    public String getTraOrg() {
        return (String) getAttributeInternal(TRAORG);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_ORG using the alias name TraOrg.
     * @param value value to set the TRA_ORG
     */
    public void setTraOrg(String value) {
        setAttributeInternal(TRAORG, value);
    }

    /**
     * Gets the attribute value for TRA_PRINTED using the alias name TraPrinted.
     * @return the TRA_PRINTED
     */
    public String getTraPrinted() {
        return (String) getAttributeInternal(TRAPRINTED);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_PRINTED using the alias name TraPrinted.
     * @param value value to set the TRA_PRINTED
     */
    public void setTraPrinted(String value) {
        setAttributeInternal(TRAPRINTED, value);
    }

    /**
     * Gets the attribute value for TRA_RSTATUS using the alias name TraRstatus.
     * @return the TRA_RSTATUS
     */
    public String getTraRstatus() {
        return (String) getAttributeInternal(TRARSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_RSTATUS using the alias name TraRstatus.
     * @param value value to set the TRA_RSTATUS
     */
    public void setTraRstatus(String value) {
        setAttributeInternal(TRARSTATUS, value);
    }

    /**
     * Gets the attribute value for TRA_RTYPE using the alias name TraRtype.
     * @return the TRA_RTYPE
     */
    public String getTraRtype() {
        return (String) getAttributeInternal(TRARTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_RTYPE using the alias name TraRtype.
     * @param value value to set the TRA_RTYPE
     */
    public void setTraRtype(String value) {
        setAttributeInternal(TRARTYPE, value);
    }

    /**
     * Gets the attribute value for TRA_STATUS using the alias name TraStatus.
     * @return the TRA_STATUS
     */
    public String getTraStatus() {
        return (String) getAttributeInternal(TRASTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_STATUS using the alias name TraStatus.
     * @param value value to set the TRA_STATUS
     */
    public void setTraStatus(String value) {
        setAttributeInternal(TRASTATUS, value);
    }

    /**
     * Gets the attribute value for TRA_TOCODE using the alias name TraTocode.
     * @return the TRA_TOCODE
     */
    public String getTraTocode() {
        return (String) getAttributeInternal(TRATOCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TOCODE using the alias name TraTocode.
     * @param value value to set the TRA_TOCODE
     */
    public void setTraTocode(String value) {
        setAttributeInternal(TRATOCODE, value);
    }

    /**
     * Gets the attribute value for TRA_TOCODE_ORG using the alias name TraTocodeOrg.
     * @return the TRA_TOCODE_ORG
     */
    public String getTraTocodeOrg() {
        return (String) getAttributeInternal(TRATOCODEORG);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TOCODE_ORG using the alias name TraTocodeOrg.
     * @param value value to set the TRA_TOCODE_ORG
     */
    public void setTraTocodeOrg(String value) {
        setAttributeInternal(TRATOCODEORG, value);
    }

    /**
     * Gets the attribute value for TRA_TOENTITY using the alias name TraToentity.
     * @return the TRA_TOENTITY
     */
    public String getTraToentity() {
        return (String) getAttributeInternal(TRATOENTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TOENTITY using the alias name TraToentity.
     * @param value value to set the TRA_TOENTITY
     */
    public void setTraToentity(String value) {
        setAttributeInternal(TRATOENTITY, value);
    }

    /**
     * Gets the attribute value for TRA_TORENTITY using the alias name TraTorentity.
     * @return the TRA_TORENTITY
     */
    public String getTraTorentity() {
        return (String) getAttributeInternal(TRATORENTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TORENTITY using the alias name TraTorentity.
     * @param value value to set the TRA_TORENTITY
     */
    public void setTraTorentity(String value) {
        setAttributeInternal(TRATORENTITY, value);
    }

    /**
     * Gets the attribute value for TRA_TORTYPE using the alias name TraTortype.
     * @return the TRA_TORTYPE
     */
    public String getTraTortype() {
        return (String) getAttributeInternal(TRATORTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TORTYPE using the alias name TraTortype.
     * @param value value to set the TRA_TORTYPE
     */
    public void setTraTortype(String value) {
        setAttributeInternal(TRATORTYPE, value);
    }

    /**
     * Gets the attribute value for TRA_TOTYPE using the alias name TraTotype.
     * @return the TRA_TOTYPE
     */
    public String getTraTotype() {
        return (String) getAttributeInternal(TRATOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TOTYPE using the alias name TraTotype.
     * @param value value to set the TRA_TOTYPE
     */
    public void setTraTotype(String value) {
        setAttributeInternal(TRATOTYPE, value);
    }

    /**
     * Gets the attribute value for TRA_TYPE using the alias name TraType.
     * @return the TRA_TYPE
     */
    public String getTraType() {
        return (String) getAttributeInternal(TRATYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRA_TYPE using the alias name TraType.
     * @param value value to set the TRA_TYPE
     */
    public void setTraType(String value) {
        setAttributeInternal(TRATYPE, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link POrdersView.
     */
    public Row getPOrdersView() {
        return (Row)getAttributeInternal(PORDERSVIEW);
    }

    /**
     * Sets the master-detail link POrdersView between this object and <code>value</code>.
     */
    public void setPOrdersView(Row value) {
        setAttributeInternal(PORDERSVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link POTranslinesView.
     */
    public RowIterator getPOTranslinesView() {
        return (RowIterator)getAttributeInternal(POTRANSLINESVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> POTransactionRetnStatus.
     */
    public RowSet getPOTransactionRetnStatus() {
        return (RowSet)getAttributeInternal(POTRANSACTIONRETNSTATUS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TranslinePartTotal.
     */
    public RowSet getTranslinePartTotal() {
        return (RowSet)getAttributeInternal(TRANSLINEPARTTOTAL);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PartsBinstockView.
     */
    public RowSet getPartsBinstockView() {
        return (RowSet)getAttributeInternal(PARTSBINSTOCKVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> POTransactionsPartsRecvdClsd.
     */
    public RowSet getPOTransactionsPartsRecvdClsd() {
        return (RowSet)getAttributeInternal(POTRANSACTIONSPARTSRECVDCLSD);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
