package its.mnr.mp5.vo.po;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;
import its.mnr.mp5.eo.local.R5translinesImpl;


import its.mnr.mp5.vo.parts.PartsBinstockViewImpl;
import its.mnr.mp5.vo.po.common.POTranslinesCompRcptsRow;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.VariableValueManager;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 10 14:17:38 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class POTranslinesCompRcptsRowImpl extends ExtendedViewRowImpl implements POTranslinesCompRcptsRow {


    public static final int ENTITY_R5TRANSLINES = 0;

    public boolean addPartToStock(String pPart, String pPartOrg, String pStore, Double pQty) {
        ////System.out.println("createPreSupplier()");
        boolean ret = true;
//        String pPart = this.getTrlPart();
//        String pPartOrg = this.getTrlPartOrg();
//        String pStore = this.getTrlStore();
//        Double pQty = this.getTrlQty();

        RowIterator iterCat = getPartStock();
        Row rowCat = iterCat.createRow();
        iterCat.insertRow(rowCat);

        rowCat.setAttribute("StoPart", pPart);
        rowCat.setAttribute("StoPartOrg", pPartOrg);
        rowCat.setAttribute("StoStore", pStore);
        rowCat.setAttribute("StoStocktake", new Timestamp(new java.sql.Timestamp(System.currentTimeMillis())));
        rowCat.setAttribute("StoQty", pQty);
        return ret;
    }
    
    public boolean isPartInCat(String pPart, String pPartOrg) {
        ////System.out.println("isPrefSuppInCat");
        boolean ret = false;
//        String pPart = this.getTrlPart();
//        String pPartOrg = this.getTrlPartOrg();
        //System.out.println(pPart );
        
        RowSet rs = this.getStockExistence();
        VariableValueManager vm = rs.ensureVariableManager();
        vm.setVariableValue("BPART", pPart);
        vm.setVariableValue("BPARTORG", pPartOrg);
        rs.setForwardOnly(true);
        rs.executeQuery();
        Row rw = rs.first();
        if (rw != null) {
            ret = true;
        }
        return ret;
    }
    
    public String getDefaultBinLot(){
            //System.out.println("getDefaultBinLot()");
            String ret;
            //set and execute View Criteria            
            RowSet rs = this.getPartsBinstockView();
            PartsBinstockViewImpl impl = (PartsBinstockViewImpl)rs.getViewObject();
            ViewCriteria vc = impl.getViewCriteria("PartsBinstockByPart");
            vc.resetCriteria();
            //System.out.println("getTrlPart(): " + getTrlPart());
            impl.setbPart(getTrlPart());
            impl.setbPartOrg(getTrlPartOrg());
            impl.applyViewCriteria(vc);
            // set range size to 1 since we expect a single record
            impl.setRangeSize(1);
            // execute query to make sure we get latest data!
            impl.executeQuery();
            Row rw = impl.first();
            if (rw != null) {
                ////System.out.println("ITS_EstimateIns Ret = " + (String)rw.getAttribute("Acctnum"));
                String sBin = (String)rw.getAttribute("BisBin");
                String sLot = (String)rw.getAttribute("BisLot");
                //System.out.println("Setting Bin/Lot: " + sBin + "/" + sLot );
                setTrlBin(sBin);
                setTrlLot(sLot);
                rs.closeRowSet();
//                ret = "BIN:" + sBin + "," + "LOT:" + sLot+ ",";
//                return ret;
            }
            return null;
        }

    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TrlLot {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlLot();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlLot((String)value);
            }
        }
        ,
        TrlIo {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlIo();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlIo((Integer)value);
            }
        }
        ,
        TrlBin {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlBin();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlBin((String)value);
            }
        }
        ,
        TrlAcd {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlAcd();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlAcd((Number)value);
            }
        }
        ,
        TrlLine {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlLine();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlLine((Integer)value);
            }
        }
        ,
        TrlDate {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlDate();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlDate((Timestamp)value);
            }
        }
        ,
        TrlMultiply {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlMultiply();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlMultiply((BigDecimal)value);
            }
        }
        ,
        TrlPart {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlPart();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlPart((String)value);
            }
        }
        ,
        TrlPartOrg {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlPartOrg();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlPartOrg((String)value);
            }
        }
        ,
        TrlPrice {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlPrice();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlPrice((Double)value);
            }
        }
        ,
        TrlQty {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlQty();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlQty((Double)value);
            }
        }
        ,
        TrlStore {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlStore();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlStore((String)value);
            }
        }
        ,
        TrlTrans {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlTrans();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlTrans((String)value);
            }
        }
        ,
        TrlType {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlType();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlType((String)value);
            }
        }
        ,
        TrlRtype {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getTrlRtype();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setTrlRtype((String)value);
            }
        }
        ,
        tBasePrice {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.gettBasePrice();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.settBasePrice((Double)value);
            }
        }
        ,
        tEntityState {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.gettEntityState();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.settEntityState((String)value);
            }
        }
        ,
        tPartDesc {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.gettPartDesc();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.settPartDesc((String)value);
            }
        }
        ,
        tPartUom {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.gettPartUom();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.settPartUom((String)value);
            }
        }
        ,
        tAvail {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.gettAvail();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.settAvail((String)value);
            }
        }
        ,
        POParts {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getPOParts();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PartBinsView {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getPartBinsView();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        R5lotsView {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getR5lotsView();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        POPartsCompRcpts {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getPOPartsCompRcpts();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StockExistence {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getStockExistence();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PartStock {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getPartStock();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PartsBinstockView {
            public Object get(POTranslinesCompRcptsRowImpl obj) {
                return obj.getPartsBinstockView();
            }

            public void put(POTranslinesCompRcptsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(POTranslinesCompRcptsRowImpl object);

        public abstract void put(POTranslinesCompRcptsRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRLLOT = AttributesEnum.TrlLot.index();
    public static final int TRLIO = AttributesEnum.TrlIo.index();
    public static final int TRLBIN = AttributesEnum.TrlBin.index();
    public static final int TRLACD = AttributesEnum.TrlAcd.index();
    public static final int TRLLINE = AttributesEnum.TrlLine.index();
    public static final int TRLDATE = AttributesEnum.TrlDate.index();
    public static final int TRLMULTIPLY = AttributesEnum.TrlMultiply.index();
    public static final int TRLPART = AttributesEnum.TrlPart.index();
    public static final int TRLPARTORG = AttributesEnum.TrlPartOrg.index();
    public static final int TRLPRICE = AttributesEnum.TrlPrice.index();
    public static final int TRLQTY = AttributesEnum.TrlQty.index();
    public static final int TRLSTORE = AttributesEnum.TrlStore.index();
    public static final int TRLTRANS = AttributesEnum.TrlTrans.index();
    public static final int TRLTYPE = AttributesEnum.TrlType.index();
    public static final int TRLRTYPE = AttributesEnum.TrlRtype.index();
    public static final int TBASEPRICE = AttributesEnum.tBasePrice.index();
    public static final int TENTITYSTATE = AttributesEnum.tEntityState.index();
    public static final int TPARTDESC = AttributesEnum.tPartDesc.index();
    public static final int TPARTUOM = AttributesEnum.tPartUom.index();
    public static final int TAVAIL = AttributesEnum.tAvail.index();
    public static final int POPARTS = AttributesEnum.POParts.index();
    public static final int PARTBINSVIEW = AttributesEnum.PartBinsView.index();
    public static final int R5LOTSVIEW = AttributesEnum.R5lotsView.index();
    public static final int POPARTSCOMPRCPTS = AttributesEnum.POPartsCompRcpts.index();
    public static final int STOCKEXISTENCE = AttributesEnum.StockExistence.index();
    public static final int PARTSTOCK = AttributesEnum.PartStock.index();
    public static final int PARTSBINSTOCKVIEW = AttributesEnum.PartsBinstockView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public POTranslinesCompRcptsRowImpl() {
    }

    /**
     * Gets R5translines entity object.
     * @return the R5translines
     */
    public R5translinesImpl getR5translines() {
        return (R5translinesImpl)getEntity(ENTITY_R5TRANSLINES);
    }

    /**
     * Gets the attribute value for TRL_LOT using the alias name TrlLot.
     * @return the TRL_LOT
     */
    public String getTrlLot() {
        return (String) getAttributeInternal(TRLLOT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_LOT using the alias name TrlLot.
     * @param value value to set the TRL_LOT
     */
    public void setTrlLot(String value) {
        setAttributeInternal(TRLLOT, value);
    }

    /**
     * Gets the attribute value for TRL_IO using the alias name TrlIo.
     * @return the TRL_IO
     */
    public Integer getTrlIo() {
        return (Integer) getAttributeInternal(TRLIO);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_IO using the alias name TrlIo.
     * @param value value to set the TRL_IO
     */
    public void setTrlIo(Integer value) {
        setAttributeInternal(TRLIO, value);
    }

    /**
     * Gets the attribute value for TRL_BIN using the alias name TrlBin.
     * @return the TRL_BIN
     */
    public String getTrlBin() {
        return (String) getAttributeInternal(TRLBIN);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_BIN using the alias name TrlBin.
     * @param value value to set the TRL_BIN
     */
    public void setTrlBin(String value) {
        setAttributeInternal(TRLBIN, value);
    }

    /**
     * Gets the attribute value for TRL_ACD using the alias name TrlAcd.
     * @return the TRL_ACD
     */
    public Number getTrlAcd() {
        return (Number) getAttributeInternal(TRLACD);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_ACD using the alias name TrlAcd.
     * @param value value to set the TRL_ACD
     */
    public void setTrlAcd(Number value) {
        setAttributeInternal(TRLACD, value);
    }

    /**
     * Gets the attribute value for TRL_LINE using the alias name TrlLine.
     * @return the TRL_LINE
     */
    public Integer getTrlLine() {
        return (Integer) getAttributeInternal(TRLLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_LINE using the alias name TrlLine.
     * @param value value to set the TRL_LINE
     */
    public void setTrlLine(Integer value) {
        setAttributeInternal(TRLLINE, value);
    }

    /**
     * Gets the attribute value for TRL_DATE using the alias name TrlDate.
     * @return the TRL_DATE
     */
    public Timestamp getTrlDate() {
        return (Timestamp) getAttributeInternal(TRLDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_DATE using the alias name TrlDate.
     * @param value value to set the TRL_DATE
     */
    public void setTrlDate(Timestamp value) {
        setAttributeInternal(TRLDATE, value);
    }

    /**
     * Gets the attribute value for TRL_MULTIPLY using the alias name TrlMultiply.
     * @return the TRL_MULTIPLY
     */
    public BigDecimal getTrlMultiply() {
        return (BigDecimal) getAttributeInternal(TRLMULTIPLY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_MULTIPLY using the alias name TrlMultiply.
     * @param value value to set the TRL_MULTIPLY
     */
    public void setTrlMultiply(BigDecimal value) {
        setAttributeInternal(TRLMULTIPLY, value);
    }

    /**
     * Gets the attribute value for TRL_PART using the alias name TrlPart.
     * @return the TRL_PART
     */
    public String getTrlPart() {
        return (String) getAttributeInternal(TRLPART);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_PART using the alias name TrlPart.
     * @param value value to set the TRL_PART
     */
    public void setTrlPart(String value) {
        setAttributeInternal(TRLPART, value);
    }

    /**
     * Gets the attribute value for TRL_PART_ORG using the alias name TrlPartOrg.
     * @return the TRL_PART_ORG
     */
    public String getTrlPartOrg() {
        return (String) getAttributeInternal(TRLPARTORG);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_PART_ORG using the alias name TrlPartOrg.
     * @param value value to set the TRL_PART_ORG
     */
    public void setTrlPartOrg(String value) {
        setAttributeInternal(TRLPARTORG, value);
    }

    /**
     * Gets the attribute value for TRL_PRICE using the alias name TrlPrice.
     * @return the TRL_PRICE
     */
    public Double getTrlPrice() {
        return (Double) getAttributeInternal(TRLPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_PRICE using the alias name TrlPrice.
     * @param value value to set the TRL_PRICE
     */
    public void setTrlPrice(Double value) {
        setAttributeInternal(TRLPRICE, value);
    }

    /**
     * Gets the attribute value for TRL_QTY using the alias name TrlQty.
     * @return the TRL_QTY
     */
    public Double getTrlQty() {
        return (Double) getAttributeInternal(TRLQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_QTY using the alias name TrlQty.
     * @param value value to set the TRL_QTY
     */
    public void setTrlQty(Double value) {
        setAttributeInternal(TRLQTY, value);
    }

    /**
     * Gets the attribute value for TRL_STORE using the alias name TrlStore.
     * @return the TRL_STORE
     */
    public String getTrlStore() {
        return (String) getAttributeInternal(TRLSTORE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_STORE using the alias name TrlStore.
     * @param value value to set the TRL_STORE
     */
    public void setTrlStore(String value) {
        setAttributeInternal(TRLSTORE, value);
    }

    /**
     * Gets the attribute value for TRL_TRANS using the alias name TrlTrans.
     * @return the TRL_TRANS
     */
    public String getTrlTrans() {
        return (String) getAttributeInternal(TRLTRANS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_TRANS using the alias name TrlTrans.
     * @param value value to set the TRL_TRANS
     */
    public void setTrlTrans(String value) {
        setAttributeInternal(TRLTRANS, value);
    }

    /**
     * Gets the attribute value for TRL_TYPE using the alias name TrlType.
     * @return the TRL_TYPE
     */
    public String getTrlType() {
        return (String) getAttributeInternal(TRLTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_TYPE using the alias name TrlType.
     * @param value value to set the TRL_TYPE
     */
    public void setTrlType(String value) {
        setAttributeInternal(TRLTYPE, value);
    }

    /**
     * Gets the attribute value for TRL_RTYPE using the alias name TrlRtype.
     * @return the TRL_RTYPE
     */
    public String getTrlRtype() {
        return (String) getAttributeInternal(TRLRTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRL_RTYPE using the alias name TrlRtype.
     * @param value value to set the TRL_RTYPE
     */
    public void setTrlRtype(String value) {
        setAttributeInternal(TRLRTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tBasePrice.
     * @return the tBasePrice
     */
    public Double gettBasePrice() {
        return (Double) getAttributeInternal(TBASEPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tBasePrice.
     * @param value value to set the  tBasePrice
     */
    public void settBasePrice(Double value) {
        setAttributeInternal(TBASEPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tEntityState.
     * @return the tEntityState
     */
    public String gettEntityState() {
        return (String) getAttributeInternal(TENTITYSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tEntityState.
     * @param value value to set the  tEntityState
     */
    public void settEntityState(String value) {
        setAttributeInternal(TENTITYSTATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tPartDesc.
     * @return the tPartDesc
     */
    public String gettPartDesc() {
        return (String) getAttributeInternal(TPARTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tPartDesc.
     * @param value value to set the  tPartDesc
     */
    public void settPartDesc(String value) {
        setAttributeInternal(TPARTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tPartUom.
     * @return the tPartUom
     */
    public String gettPartUom() {
        return (String) getAttributeInternal(TPARTUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tPartUom.
     * @param value value to set the  tPartUom
     */
    public void settPartUom(String value) {
        setAttributeInternal(TPARTUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute tAvail.
     * @return the tAvail
     */
    public String gettAvail() {
        return (String) getAttributeInternal(TAVAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute tAvail.
     * @param value value to set the  tAvail
     */
    public void settAvail(String value) {
        setAttributeInternal(TAVAIL, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link POParts.
     */
    public Row getPOParts() {
        return (Row)getAttributeInternal(POPARTS);
    }

    /**
     * Sets the master-detail link POParts between this object and <code>value</code>.
     */
    public void setPOParts(Row value) {
        setAttributeInternal(POPARTS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PartBinsView.
     */
    public RowSet getPartBinsView() {
        return (RowSet)getAttributeInternal(PARTBINSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> R5lotsView.
     */
    public RowSet getR5lotsView() {
        return (RowSet)getAttributeInternal(R5LOTSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> POPartsCompRcpts.
     */
    public RowSet getPOPartsCompRcpts() {
        return (RowSet)getAttributeInternal(POPARTSCOMPRCPTS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StockExistence.
     */
    public RowSet getStockExistence() {
        return (RowSet)getAttributeInternal(STOCKEXISTENCE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PartStock.
     */
    public RowSet getPartStock() {
        return (RowSet)getAttributeInternal(PARTSTOCK);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PartsBinstockView.
     */
    public RowSet getPartsBinstockView() {
        return (RowSet)getAttributeInternal(PARTSBINSTOCKVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
