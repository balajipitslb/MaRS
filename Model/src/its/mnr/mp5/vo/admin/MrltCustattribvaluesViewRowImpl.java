package its.mnr.mp5.vo.admin;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import its.mnr.mp5.lov.TranslinePartTotalImpl;

import its.mnr.mp5.vo.asset.MrltAssetViewRowImpl;
import its.mnr.mp5.vo.po.POTranslinesViewRowImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 06 09:33:42 PDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltCustattribvaluesViewRowImpl extends ExtendedViewRowImpl {


    public static final int ENTITY_MRLTCUSTATTRIBVALUES = 0;


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Org {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getOrg();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setOrg((String)value);
            }
        }
        ,
        Custattribitem {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getCustattribitem();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setCustattribitem((String)value);
            }
        }
        ,
        Custattribcd {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getCustattribcd();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setCustattribcd((String)value);
            }
        }
        ,
        Custattribvalue {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getCustattribvalue();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setCustattribvalue((String)value);
            }
        }
        ,
        tCustAttribDesc {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.gettCustAttribDesc();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.settCustAttribDesc((String)value);
            }
        }
        ,
        MrlrefCustattribsView1 {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getMrlrefCustattribsView1();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAssetView1 {
            public Object get(MrltCustattribvaluesViewRowImpl obj) {
                return obj.getMrltAssetView1();
            }

            public void put(MrltCustattribvaluesViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltCustattribvaluesViewRowImpl object);

        public abstract void put(MrltCustattribvaluesViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORG = AttributesEnum.Org.index();
    public static final int CUSTATTRIBITEM = AttributesEnum.Custattribitem.index();
    public static final int CUSTATTRIBCD = AttributesEnum.Custattribcd.index();
    public static final int CUSTATTRIBVALUE = AttributesEnum.Custattribvalue.index();
    public static final int TCUSTATTRIBDESC = AttributesEnum.tCustAttribDesc.index();
    public static final int MRLREFCUSTATTRIBSVIEW1 = AttributesEnum.MrlrefCustattribsView1.index();
    public static final int MRLTASSETVIEW1 = AttributesEnum.MrltAssetView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltCustattribvaluesViewRowImpl() {
    }

    /**
     * Gets MrltCustattribvalues entity object.
     * @return the MrltCustattribvalues
     */
    public ExtendedEntityImpl getMrltCustattribvalues() {
        return (ExtendedEntityImpl)getEntity(ENTITY_MRLTCUSTATTRIBVALUES);
    }

    /**
     * Gets the attribute value for ORG using the alias name Org.
     * @return the ORG
     */
    public String getOrg() {
        return (String) getAttributeInternal(ORG);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG using the alias name Org.
     * @param value value to set the ORG
     */
    public void setOrg(String value) {
        setAttributeInternal(ORG, value);
    }

    /**
     * Gets the attribute value for CUSTATTRIBITEM using the alias name Custattribitem.
     * @return the CUSTATTRIBITEM
     */
    public String getCustattribitem() {
        return (String) getAttributeInternal(CUSTATTRIBITEM);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTATTRIBITEM using the alias name Custattribitem.
     * @param value value to set the CUSTATTRIBITEM
     */
    public void setCustattribitem(String value) {
        setAttributeInternal(CUSTATTRIBITEM, value);
    }

    /**
     * Gets the attribute value for CUSTATTRIBCD using the alias name Custattribcd.
     * @return the CUSTATTRIBCD
     */
    public String getCustattribcd() {
        return (String) getAttributeInternal(CUSTATTRIBCD);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTATTRIBCD using the alias name Custattribcd.
     * @param value value to set the CUSTATTRIBCD
     */
    public void setCustattribcd(String value) {
        setAttributeInternal(CUSTATTRIBCD, value);
    }

    /**
     * Gets the attribute value for CUSTATTRIBVALUE using the alias name Custattribvalue.
     * @return the CUSTATTRIBVALUE
     */
    public String getCustattribvalue() {
        return (String) getAttributeInternal(CUSTATTRIBVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for CUSTATTRIBVALUE using the alias name Custattribvalue.
     * @param value value to set the CUSTATTRIBVALUE
     */
    public void setCustattribvalue(String value) {
        setAttributeInternal(CUSTATTRIBVALUE, value);
    }

    /**
     * Gets the attribute value for T_CUST_ATTRIB_DESC using the alias name tCustAttribDesc.
     * @return the T_CUST_ATTRIB_DESC
     */
    public String gettCustAttribDesc() {
        return (String) getAttributeInternal(TCUSTATTRIBDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for T_CUST_ATTRIB_DESC using the alias name tCustAttribDesc.
     * @param value value to set the T_CUST_ATTRIB_DESC
     */
    public void settCustAttribDesc(String value) {
        setAttributeInternal(TCUSTATTRIBDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrlrefCustattribsView1.
     */
    public RowSet getMrlrefCustattribsView1() {
        return (RowSet)getAttributeInternal(MRLREFCUSTATTRIBSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltAssetView1.
     */
    public RowSet getMrltAssetView1() {
        return (RowSet)getAttributeInternal(MRLTASSETVIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
