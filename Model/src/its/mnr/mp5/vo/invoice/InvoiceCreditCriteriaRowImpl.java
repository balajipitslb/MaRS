package its.mnr.mp5.vo.invoice;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 16 16:43:51 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvoiceCreditCriteriaRowImpl extends ExtendedViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RefInvoice {
            public Object get(InvoiceCreditCriteriaRowImpl obj) {
                return obj.getRefInvoice();
            }

            public void put(InvoiceCreditCriteriaRowImpl obj, Object value) {
                obj.setRefInvoice((Number) value);
            }
        }
        ,
        MrltInvoiceheaderView {
            public Object get(InvoiceCreditCriteriaRowImpl obj) {
                return obj.getMrltInvoiceheaderView();
            }

            public void put(InvoiceCreditCriteriaRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        InvoiceCreditResults {
            public Object get(InvoiceCreditCriteriaRowImpl obj) {
                return obj.getInvoiceCreditResults();
            }

            public void put(InvoiceCreditCriteriaRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(InvoiceCreditCriteriaRowImpl object);

        public abstract void put(InvoiceCreditCriteriaRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REFINVOICE = AttributesEnum.RefInvoice.index();
    public static final int MRLTINVOICEHEADERVIEW = AttributesEnum.MrltInvoiceheaderView.index();
    public static final int INVOICECREDITRESULTS = AttributesEnum.InvoiceCreditResults.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvoiceCreditCriteriaRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute RefInvoice.
     * @return the RefInvoice
     */
    public Number getRefInvoice() {
        return (Number) getAttributeInternal(REFINVOICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RefInvoice.
     * @param value value to set the  RefInvoice
     */
    public void setRefInvoice(Number value) {
        setAttributeInternal(REFINVOICE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltInvoiceheaderView.
     */
    public RowSet getMrltInvoiceheaderView() {
        return (RowSet)getAttributeInternal(MRLTINVOICEHEADERVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> InvoiceCreditResults.
     */
    public RowSet getInvoiceCreditResults() {
        return (RowSet) getAttributeInternal(INVOICECREDITRESULTS);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
