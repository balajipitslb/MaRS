package its.mnr.mp5.vo.invoice;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import its.mnr.mp5.vo.invoice.common.InvoiceCreditResultsRow;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 16 17:10:53 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvoiceCreditResultsRowImpl extends ExtendedViewRowImpl implements InvoiceCreditResultsRow {
    
    public Number createInvoiceHeader(){
        //System.out.println("inside InvoiceAssemblyResultsRowImpl:createInvoiceHeader()");
        Number pHeaderId;
        Double dLabor = this.getTotalLaborCr();
        Double dPart = this.getTotalPartCr();
        Double pTax = this.getTotalTaxCr();
        Double pTotal = this.getCurCrTotal();
        String pAcctNum = this.getAcctnum();
        String pInt = (this.getInternal() == null? "N":this.getInternal());
            //System.out.println("pInt:" + pInt);
        Double pInvCr = this.getInvoiceCr();
            //System.out.println("pInvCr:" + pInvCr);
        Number pRef = this.getInvnum();
        String pType ="CR";                                                                                                           
        DBTransaction trans = getDBTransaction();
        pHeaderId = getValueFromSequence("MRLTINVHEADERSEQ", trans); 
        
        RowSet rs = this.getMrltInvoiceheaderView1();
        MrltInvoiceheaderViewImpl invHeaderImpl = (MrltInvoiceheaderViewImpl)rs.getViewObject();
        
        Boolean chk = invHeaderImpl.createInvoiceHeader(pHeaderId, pType, dLabor, dPart, pTax, pTotal, pAcctNum, pInt, pInvCr, pRef);
        
        if(chk){
        return pHeaderId;
        }
        return null;
        }
    public boolean createInvoiceCrItem(Number pHeaderId,String pWO,Double pLabor, Double pPart, Double pTax, 
                                       Double pTaxPer, Double pLaborCr, Double pPartCr, Double pTaxCr, Double pTotal, String pHdrCode){
        //System.out.println("inside InvoiceAssemblyResultsRowImpl:createInvoiceCrItem()");
        Boolean ret = false;                                                                                             
        DBTransaction trans = getDBTransaction();

        Number pCrItemId = getValueFromSequence("MRLTINVCRITEMSEQ", trans); 
            
        RowSet rsItem = this.getMrltInvoicecritemView();
        MrltInvoicecritemViewImpl invItemImpl = (MrltInvoicecritemViewImpl)rsItem.getViewObject();
        ret = invItemImpl.createInvoiceCRItem(pCrItemId,pHeaderId,pWO,pLabor,pPart,pTax,pTaxPer,pLaborCr,pPartCr,pTaxCr,pTotal, pHdrCode);

        return ret;
        }
    public Number getInvoiceNum(Number pHeaderId) {
        //System.out.println("getInvoiceNum()");
        //set and execute View Criteria
        RowSet rs = this.getMrltInvoiceheaderView1();
        MrltInvoiceheaderViewImpl invHeaderImpl = (MrltInvoiceheaderViewImpl)rs.getViewObject();
        ViewCriteria vc = invHeaderImpl.getViewCriteria("getInvoiceNumByHeaderId");
        vc.resetCriteria();
        invHeaderImpl.setInvHeaderIdBind(pHeaderId);
        invHeaderImpl.applyViewCriteria(vc);
        // set range size to 1 since we expect a single record
        invHeaderImpl.setRangeSize(1);
        // execute query to make sure we get latest data!
        invHeaderImpl.executeQuery();
        Row rw = invHeaderImpl.first();
        if (rw != null) {
            //System.out.println("getInvoiceNum Ret = " + (Number)rw.getAttribute("Invnum"));
            Number nInvNum = (Number)rw.getAttribute("Invnum");
            rs.closeRowSet();
            return nInvNum;
        }
        return null;
    }
    public static Number getValueFromSequence(String sequenceName, DBTransaction trans){
        SequenceImpl s = new SequenceImpl(sequenceName, trans);
        return s.getSequenceNumber();
        }
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Invnum {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvnum();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvnum((Number)value);
            }
        }
        ,
        Acctnum {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getAcctnum();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAcctnum((String)value);
            }
        }
        ,
        Invtotal {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvtotal();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvtotal((Double)value);
            }
        }
        ,
        Wo {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getWo();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setWo((String)value);
            }
        }
        ,
        Labor {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getLabor();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setLabor((Double)value);
            }
        }
        ,
        Part {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getPart();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setPart((Double)value);
            }
        }
        ,
        Tax {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTax();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTax((Double)value);
            }
        }
        ,
        Total {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTotal();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTotal((Double)value);
            }
        }
        ,
        Hdrcode {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getHdrcode();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setHdrcode((String)value);
            }
        }
        ,
        Invcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvcr((Double)value);
            }
        }
        ,
        Invlaborcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvlaborcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvlaborcr((Double)value);
            }
        }
        ,
        Invpartcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvpartcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvpartcr((Double)value);
            }
        }
        ,
        Invtaxcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvtaxcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvtaxcr((Double)value);
            }
        }
        ,
        Invtotalcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvtotalcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvtotalcr((Double)value);
            }
        }
        ,
        Wolaborcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getWolaborcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setWolaborcr((Double)value);
            }
        }
        ,
        Wopartcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getWopartcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setWopartcr((Double)value);
            }
        }
        ,
        Wotaxcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getWotaxcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setWotaxcr((Double)value);
            }
        }
        ,
        Wototalcr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getWototalcr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setWototalcr((Double)value);
            }
        }
        ,
        LaborCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getLaborCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setLaborCr((Double)value);
            }
        }
        ,
        PartCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getPartCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setPartCr((Double)value);
            }
        }
        ,
        CurrentCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getCurrentCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setCurrentCr((Double)value);
            }
        }
        ,
        CurCrTotal {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getCurCrTotal();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setCurCrTotal((Double)value);
            }
        }
        ,
        InvoiceCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInvoiceCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInvoiceCr((Double)value);
            }
        }
        ,
        Internal {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getInternal();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setInternal((String)value);
            }
        }
        ,
        TotalLaborCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTotalLaborCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTotalLaborCr((Double)value);
            }
        }
        ,
        TotalPartCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTotalPartCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTotalPartCr((Double)value);
            }
        }
        ,
        AvailableLaborCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getAvailableLaborCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAvailableLaborCr((BigDecimal)value);
            }
        }
        ,
        AvailablePartCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getAvailablePartCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAvailablePartCr((BigDecimal)value);
            }
        }
        ,
        AvailableInvoiceCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getAvailableInvoiceCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAvailableInvoiceCr((BigDecimal)value);
            }
        }
        ,
        TaxCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTaxCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTaxCr((Double)value);
            }
        }
        ,
        AvailableTaxCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getAvailableTaxCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAvailableTaxCr((BigDecimal)value);
            }
        }
        ,
        TotalTaxCr {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getTotalTaxCr();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setTotalTaxCr((Double)value);
            }
        }
        ,
        MrltInvoiceheaderView1 {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getMrltInvoiceheaderView1();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltInvoicecritemView {
            public Object get(InvoiceCreditResultsRowImpl obj) {
                return obj.getMrltInvoicecritemView();
            }

            public void put(InvoiceCreditResultsRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(InvoiceCreditResultsRowImpl object);

        public abstract void put(InvoiceCreditResultsRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INVNUM = AttributesEnum.Invnum.index();
    public static final int ACCTNUM = AttributesEnum.Acctnum.index();
    public static final int INVTOTAL = AttributesEnum.Invtotal.index();
    public static final int WO = AttributesEnum.Wo.index();
    public static final int LABOR = AttributesEnum.Labor.index();
    public static final int PART = AttributesEnum.Part.index();
    public static final int TAX = AttributesEnum.Tax.index();
    public static final int TOTAL = AttributesEnum.Total.index();
    public static final int HDRCODE = AttributesEnum.Hdrcode.index();
    public static final int INVCR = AttributesEnum.Invcr.index();
    public static final int INVLABORCR = AttributesEnum.Invlaborcr.index();
    public static final int INVPARTCR = AttributesEnum.Invpartcr.index();
    public static final int INVTAXCR = AttributesEnum.Invtaxcr.index();
    public static final int INVTOTALCR = AttributesEnum.Invtotalcr.index();
    public static final int WOLABORCR = AttributesEnum.Wolaborcr.index();
    public static final int WOPARTCR = AttributesEnum.Wopartcr.index();
    public static final int WOTAXCR = AttributesEnum.Wotaxcr.index();
    public static final int WOTOTALCR = AttributesEnum.Wototalcr.index();
    public static final int LABORCR = AttributesEnum.LaborCr.index();
    public static final int PARTCR = AttributesEnum.PartCr.index();
    public static final int CURRENTCR = AttributesEnum.CurrentCr.index();
    public static final int CURCRTOTAL = AttributesEnum.CurCrTotal.index();
    public static final int INVOICECR = AttributesEnum.InvoiceCr.index();
    public static final int INTERNAL = AttributesEnum.Internal.index();
    public static final int TOTALLABORCR = AttributesEnum.TotalLaborCr.index();
    public static final int TOTALPARTCR = AttributesEnum.TotalPartCr.index();
    public static final int AVAILABLELABORCR = AttributesEnum.AvailableLaborCr.index();
    public static final int AVAILABLEPARTCR = AttributesEnum.AvailablePartCr.index();
    public static final int AVAILABLEINVOICECR = AttributesEnum.AvailableInvoiceCr.index();
    public static final int TAXCR = AttributesEnum.TaxCr.index();
    public static final int AVAILABLETAXCR = AttributesEnum.AvailableTaxCr.index();
    public static final int TOTALTAXCR = AttributesEnum.TotalTaxCr.index();
    public static final int MRLTINVOICEHEADERVIEW1 = AttributesEnum.MrltInvoiceheaderView1.index();
    public static final int MRLTINVOICECRITEMVIEW = AttributesEnum.MrltInvoicecritemView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvoiceCreditResultsRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Invnum.
     * @return the Invnum
     */
    public Number getInvnum() {
        return (Number) getAttributeInternal(INVNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invnum.
     * @param value value to set the  Invnum
     */
    public void setInvnum(Number value) {
        setAttributeInternal(INVNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Acctnum.
     * @return the Acctnum
     */
    public String getAcctnum() {
        return (String) getAttributeInternal(ACCTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Acctnum.
     * @param value value to set the  Acctnum
     */
    public void setAcctnum(String value) {
        setAttributeInternal(ACCTNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invtotal.
     * @return the Invtotal
     */
    public Double getInvtotal() {
        return (Double) getAttributeInternal(INVTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invtotal.
     * @param value value to set the  Invtotal
     */
    public void setInvtotal(Double value) {
        setAttributeInternal(INVTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wo.
     * @return the Wo
     */
    public String getWo() {
        return (String) getAttributeInternal(WO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wo.
     * @param value value to set the  Wo
     */
    public void setWo(String value) {
        setAttributeInternal(WO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Labor.
     * @return the Labor
     */
    public Double getLabor() {
        return (Double) getAttributeInternal(LABOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Labor.
     * @param value value to set the  Labor
     */
    public void setLabor(Double value) {
        setAttributeInternal(LABOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Part.
     * @return the Part
     */
    public Double getPart() {
        return (Double) getAttributeInternal(PART);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Part.
     * @param value value to set the  Part
     */
    public void setPart(Double value) {
        setAttributeInternal(PART, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Tax.
     * @return the Tax
     */
    public Double getTax() {
        return (Double) getAttributeInternal(TAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Tax.
     * @param value value to set the  Tax
     */
    public void setTax(Double value) {
        setAttributeInternal(TAX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Total.
     * @return the Total
     */
    public Double getTotal() {
        return (Double) getAttributeInternal(TOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Total.
     * @param value value to set the  Total
     */
    public void setTotal(Double value) {
        setAttributeInternal(TOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Hdrcode.
     * @return the Hdrcode
     */
    public String getHdrcode() {
        return (String) getAttributeInternal(HDRCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Hdrcode.
     * @param value value to set the  Hdrcode
     */
    public void setHdrcode(String value) {
        setAttributeInternal(HDRCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invcr.
     * @return the Invcr
     */
    public Double getInvcr() {
        return (Double) getAttributeInternal(INVCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invcr.
     * @param value value to set the  Invcr
     */
    public void setInvcr(Double value) {
        setAttributeInternal(INVCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invlaborcr.
     * @return the Invlaborcr
     */
    public Double getInvlaborcr() {
        return (Double) getAttributeInternal(INVLABORCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invlaborcr.
     * @param value value to set the  Invlaborcr
     */
    public void setInvlaborcr(Double value) {
        setAttributeInternal(INVLABORCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invpartcr.
     * @return the Invpartcr
     */
    public Double getInvpartcr() {
        return (Double) getAttributeInternal(INVPARTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invpartcr.
     * @param value value to set the  Invpartcr
     */
    public void setInvpartcr(Double value) {
        setAttributeInternal(INVPARTCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invtaxcr.
     * @return the Invtaxcr
     */
    public Double getInvtaxcr() {
        return (Double) getAttributeInternal(INVTAXCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invtaxcr.
     * @param value value to set the  Invtaxcr
     */
    public void setInvtaxcr(Double value) {
        setAttributeInternal(INVTAXCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Invtotalcr.
     * @return the Invtotalcr
     */
    public Double getInvtotalcr() {
        return (Double) getAttributeInternal(INVTOTALCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Invtotalcr.
     * @param value value to set the  Invtotalcr
     */
    public void setInvtotalcr(Double value) {
        setAttributeInternal(INVTOTALCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wolaborcr.
     * @return the Wolaborcr
     */
    public Double getWolaborcr() {
        return (Double) getAttributeInternal(WOLABORCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wolaborcr.
     * @param value value to set the  Wolaborcr
     */
    public void setWolaborcr(Double value) {
        setAttributeInternal(WOLABORCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wopartcr.
     * @return the Wopartcr
     */
    public Double getWopartcr() {
        return (Double) getAttributeInternal(WOPARTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wopartcr.
     * @param value value to set the  Wopartcr
     */
    public void setWopartcr(Double value) {
        setAttributeInternal(WOPARTCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wotaxcr.
     * @return the Wotaxcr
     */
    public Double getWotaxcr() {
        return (Double) getAttributeInternal(WOTAXCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wotaxcr.
     * @param value value to set the  Wotaxcr
     */
    public void setWotaxcr(Double value) {
        setAttributeInternal(WOTAXCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Wototalcr.
     * @return the Wototalcr
     */
    public Double getWototalcr() {
        return (Double) getAttributeInternal(WOTOTALCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Wototalcr.
     * @param value value to set the  Wototalcr
     */
    public void setWototalcr(Double value) {
        setAttributeInternal(WOTOTALCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LaborCr.
     * @return the LaborCr
     */
    public Double getLaborCr() {
        return (Double) getAttributeInternal(LABORCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LaborCr.
     * @param value value to set the  LaborCr
     */
    public void setLaborCr(Double value) {
        setAttributeInternal(LABORCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PartCr.
     * @return the PartCr
     */
    public Double getPartCr() {
        return (Double) getAttributeInternal(PARTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PartCr.
     * @param value value to set the  PartCr
     */
    public void setPartCr(Double value) {
        setAttributeInternal(PARTCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentCr.
     * @return the CurrentCr
     */
    public Double getCurrentCr() {
        return (Double) getAttributeInternal(CURRENTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentCr.
     * @param value value to set the  CurrentCr
     */
    public void setCurrentCr(Double value) {
        setAttributeInternal(CURRENTCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurCrTotal.
     * @return the CurCrTotal
     */
    public Double getCurCrTotal() {
        return (Double) getAttributeInternal(CURCRTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurCrTotal.
     * @param value value to set the  CurCrTotal
     */
    public void setCurCrTotal(Double value) {
        setAttributeInternal(CURCRTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceCr.
     * @return the InvoiceCr
     */
    public Double getInvoiceCr() {
        return (Double) getAttributeInternal(INVOICECR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceCr.
     * @param value value to set the  InvoiceCr
     */
    public void setInvoiceCr(Double value) {
        setAttributeInternal(INVOICECR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Internal.
     * @return the Internal
     */
    public String getInternal() {
        return (String) getAttributeInternal(INTERNAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Internal.
     * @param value value to set the  Internal
     */
    public void setInternal(String value) {
        setAttributeInternal(INTERNAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvailableLaborCr.
     * @return the AvailableLaborCr
     */
    public BigDecimal getAvailableLaborCr() {
        return (BigDecimal) getAttributeInternal(AVAILABLELABORCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailableLaborCr.
     * @param value value to set the  AvailableLaborCr
     */
    public void setAvailableLaborCr(BigDecimal value) {
        setAttributeInternal(AVAILABLELABORCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvailablePartCr.
     * @return the AvailablePartCr
     */
    public BigDecimal getAvailablePartCr() {
        return (BigDecimal) getAttributeInternal(AVAILABLEPARTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailablePartCr.
     * @param value value to set the  AvailablePartCr
     */
    public void setAvailablePartCr(BigDecimal value) {
        setAttributeInternal(AVAILABLEPARTCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvailableInvoiceCr.
     * @return the AvailableInvoiceCr
     */
    public BigDecimal getAvailableInvoiceCr() {
        return (BigDecimal) getAttributeInternal(AVAILABLEINVOICECR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailableInvoiceCr.
     * @param value value to set the  AvailableInvoiceCr
     */
    public void setAvailableInvoiceCr(BigDecimal value) {
        setAttributeInternal(AVAILABLEINVOICECR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaxCr.
     * @return the TaxCr
     */
    public Double getTaxCr() {
        return (Double) getAttributeInternal(TAXCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxCr.
     * @param value value to set the  TaxCr
     */
    public void setTaxCr(Double value) {
        setAttributeInternal(TAXCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvailableTaxCr.
     * @return the AvailableTaxCr
     */
    public BigDecimal getAvailableTaxCr() {
        return (BigDecimal) getAttributeInternal(AVAILABLETAXCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailableTaxCr.
     * @param value value to set the  AvailableTaxCr
     */
    public void setAvailableTaxCr(BigDecimal value) {
        setAttributeInternal(AVAILABLETAXCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalTaxCr.
     * @return the TotalTaxCr
     */
    public Double getTotalTaxCr() {
        return (Double) getAttributeInternal(TOTALTAXCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalTaxCr.
     * @param value value to set the  TotalTaxCr
     */
    public void setTotalTaxCr(Double value) {
        setAttributeInternal(TOTALTAXCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalLaborCr.
     * @return the TotalLaborCr
     */
    public Double getTotalLaborCr() {
        return (Double) getAttributeInternal(TOTALLABORCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalLaborCr.
     * @param value value to set the  TotalLaborCr
     */
    public void setTotalLaborCr(Double value) {
        setAttributeInternal(TOTALLABORCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalPartCr.
     * @return the TotalPartCr
     */
    public Double getTotalPartCr() {
        return (Double) getAttributeInternal(TOTALPARTCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalPartCr.
     * @param value value to set the  TotalPartCr
     */
    public void setTotalPartCr(Double value) {
        setAttributeInternal(TOTALPARTCR, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltInvoiceheaderView1.
     */
    public RowSet getMrltInvoiceheaderView1() {
        return (RowSet)getAttributeInternal(MRLTINVOICEHEADERVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltInvoicecritemView.
     */
    public RowSet getMrltInvoicecritemView() {
        return (RowSet)getAttributeInternal(MRLTINVOICECRITEMVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
