package its.mnr.mp5.vo.invoice;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 16 17:13:47 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltInvoicecritemViewRowImpl extends ExtendedViewRowImpl {


    public static final int ENTITY_MRLTINVOICECRITEM = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Invoicecritemid {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getInvoicecritemid();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setInvoicecritemid((Number)value);
            }
        }
        ,
        Invoiceheaderid {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getInvoiceheaderid();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setInvoiceheaderid((Number)value);
            }
        }
        ,
        Wo {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getWo();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setWo((String)value);
            }
        }
        ,
        Labor {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getLabor();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setLabor((Double)value);
            }
        }
        ,
        Part {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getPart();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setPart((Double)value);
            }
        }
        ,
        Tax {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getTax();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setTax((Double)value);
            }
        }
        ,
        Taxper {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getTaxper();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setTaxper((Double)value);
            }
        }
        ,
        Laborcr {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getLaborcr();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setLaborcr((Double)value);
            }
        }
        ,
        Partcr {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getPartcr();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setPartcr((Double)value);
            }
        }
        ,
        Taxcr {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getTaxcr();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setTaxcr((Double)value);
            }
        }
        ,
        Totalcr {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getTotalcr();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setTotalcr((Double)value);
            }
        }
        ,
        Hdrcode {
            public Object get(MrltInvoicecritemViewRowImpl obj) {
                return obj.getHdrcode();
            }

            public void put(MrltInvoicecritemViewRowImpl obj, Object value) {
                obj.setHdrcode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltInvoicecritemViewRowImpl object);

        public abstract void put(MrltInvoicecritemViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INVOICECRITEMID = AttributesEnum.Invoicecritemid.index();
    public static final int INVOICEHEADERID = AttributesEnum.Invoiceheaderid.index();
    public static final int WO = AttributesEnum.Wo.index();
    public static final int LABOR = AttributesEnum.Labor.index();
    public static final int PART = AttributesEnum.Part.index();
    public static final int TAX = AttributesEnum.Tax.index();
    public static final int TAXPER = AttributesEnum.Taxper.index();
    public static final int LABORCR = AttributesEnum.Laborcr.index();
    public static final int PARTCR = AttributesEnum.Partcr.index();
    public static final int TAXCR = AttributesEnum.Taxcr.index();
    public static final int TOTALCR = AttributesEnum.Totalcr.index();
    public static final int HDRCODE = AttributesEnum.Hdrcode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltInvoicecritemViewRowImpl() {
    }

    /**
     * Gets MrltInvoicecritem entity object.
     * @return the MrltInvoicecritem
     */
    public ExtendedEntityImpl getMrltInvoicecritem() {
        return (ExtendedEntityImpl)getEntity(ENTITY_MRLTINVOICECRITEM);
    }

    /**
     * Gets the attribute value for INVOICECRITEMID using the alias name Invoicecritemid.
     * @return the INVOICECRITEMID
     */
    public Number getInvoicecritemid() {
        return (Number) getAttributeInternal(INVOICECRITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICECRITEMID using the alias name Invoicecritemid.
     * @param value value to set the INVOICECRITEMID
     */
    public void setInvoicecritemid(Number value) {
        setAttributeInternal(INVOICECRITEMID, value);
    }

    /**
     * Gets the attribute value for INVOICEHEADERID using the alias name Invoiceheaderid.
     * @return the INVOICEHEADERID
     */
    public Number getInvoiceheaderid() {
        return (Number) getAttributeInternal(INVOICEHEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for INVOICEHEADERID using the alias name Invoiceheaderid.
     * @param value value to set the INVOICEHEADERID
     */
    public void setInvoiceheaderid(Number value) {
        setAttributeInternal(INVOICEHEADERID, value);
    }

    /**
     * Gets the attribute value for WO using the alias name Wo.
     * @return the WO
     */
    public String getWo() {
        return (String) getAttributeInternal(WO);
    }

    /**
     * Sets <code>value</code> as attribute value for WO using the alias name Wo.
     * @param value value to set the WO
     */
    public void setWo(String value) {
        setAttributeInternal(WO, value);
    }

    /**
     * Gets the attribute value for LABOR using the alias name Labor.
     * @return the LABOR
     */
    public Double getLabor() {
        return (Double) getAttributeInternal(LABOR);
    }

    /**
     * Sets <code>value</code> as attribute value for LABOR using the alias name Labor.
     * @param value value to set the LABOR
     */
    public void setLabor(Double value) {
        setAttributeInternal(LABOR, value);
    }

    /**
     * Gets the attribute value for PART using the alias name Part.
     * @return the PART
     */
    public Double getPart() {
        return (Double) getAttributeInternal(PART);
    }

    /**
     * Sets <code>value</code> as attribute value for PART using the alias name Part.
     * @param value value to set the PART
     */
    public void setPart(Double value) {
        setAttributeInternal(PART, value);
    }

    /**
     * Gets the attribute value for TAX using the alias name Tax.
     * @return the TAX
     */
    public Double getTax() {
        return (Double) getAttributeInternal(TAX);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX using the alias name Tax.
     * @param value value to set the TAX
     */
    public void setTax(Double value) {
        setAttributeInternal(TAX, value);
    }

    /**
     * Gets the attribute value for TAXPER using the alias name Taxper.
     * @return the TAXPER
     */
    public Double getTaxper() {
        return (Double) getAttributeInternal(TAXPER);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXPER using the alias name Taxper.
     * @param value value to set the TAXPER
     */
    public void setTaxper(Double value) {
        setAttributeInternal(TAXPER, value);
    }

    /**
     * Gets the attribute value for LABORCR using the alias name Laborcr.
     * @return the LABORCR
     */
    public Double getLaborcr() {
        return (Double) getAttributeInternal(LABORCR);
    }

    /**
     * Sets <code>value</code> as attribute value for LABORCR using the alias name Laborcr.
     * @param value value to set the LABORCR
     */
    public void setLaborcr(Double value) {
        setAttributeInternal(LABORCR, value);
    }

    /**
     * Gets the attribute value for PARTCR using the alias name Partcr.
     * @return the PARTCR
     */
    public Double getPartcr() {
        return (Double) getAttributeInternal(PARTCR);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTCR using the alias name Partcr.
     * @param value value to set the PARTCR
     */
    public void setPartcr(Double value) {
        setAttributeInternal(PARTCR, value);
    }

    /**
     * Gets the attribute value for TAXCR using the alias name Taxcr.
     * @return the TAXCR
     */
    public Double getTaxcr() {
        return (Double) getAttributeInternal(TAXCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXCR using the alias name Taxcr.
     * @param value value to set the TAXCR
     */
    public void setTaxcr(Double value) {
        setAttributeInternal(TAXCR, value);
    }

    /**
     * Gets the attribute value for TOTALCR using the alias name Totalcr.
     * @return the TOTALCR
     */
    public Double getTotalcr() {
        return (Double) getAttributeInternal(TOTALCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTALCR using the alias name Totalcr.
     * @param value value to set the TOTALCR
     */
    public void setTotalcr(Double value) {
        setAttributeInternal(TOTALCR, value);
    }

    /**
     * Gets the attribute value for HDRCODE using the alias name Hdrcode.
     * @return the HDRCODE
     */
    public String getHdrcode() {
        return (String) getAttributeInternal(HDRCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for HDRCODE using the alias name Hdrcode.
     * @param value value to set the HDRCODE
     */
    public void setHdrcode(String value) {
        setAttributeInternal(HDRCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
