package its.mnr.mp5.vo.invoice;

import its.mnr.mp5.baseclass.ExtendedViewRowImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 03 14:08:51 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvoiceAssemblyCriteriaRowImpl extends ExtendedViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AccountNum {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getAccountNum();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setAccountNum((String)value);
            }
        }
        ,
        WOType {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getWOType();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setWOType((String)value);
            }
        }
        ,
        HeaderCd {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getHeaderCd();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setHeaderCd((String)value);
            }
        }
        ,
        WeekEnding {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getWeekEnding();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setWeekEnding((Date)value);
            }
        }
        ,
        HeaderCodes {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getHeaderCodes();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WorkOrderMaster {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getWorkOrderMaster();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAccountmasterView {
            public Object get(InvoiceAssemblyCriteriaRowImpl obj) {
                return obj.getMrltAccountmasterView();
            }

            public void put(InvoiceAssemblyCriteriaRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(InvoiceAssemblyCriteriaRowImpl object);

        public abstract void put(InvoiceAssemblyCriteriaRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACCOUNTNUM = AttributesEnum.AccountNum.index();
    public static final int WOTYPE = AttributesEnum.WOType.index();
    public static final int HEADERCD = AttributesEnum.HeaderCd.index();
    public static final int WEEKENDING = AttributesEnum.WeekEnding.index();
    public static final int HEADERCODES = AttributesEnum.HeaderCodes.index();
    public static final int WORKORDERMASTER = AttributesEnum.WorkOrderMaster.index();
    public static final int MRLTACCOUNTMASTERVIEW = AttributesEnum.MrltAccountmasterView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvoiceAssemblyCriteriaRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute AccountNum.
     * @return the AccountNum
     */
    public String getAccountNum() {
        return (String) getAttributeInternal(ACCOUNTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccountNum.
     * @param value value to set the  AccountNum
     */
    public void setAccountNum(String value) {
        setAttributeInternal(ACCOUNTNUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WOType.
     * @return the WOType
     */
    public String getWOType() {
        return (String) getAttributeInternal(WOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WOType.
     * @param value value to set the  WOType
     */
    public void setWOType(String value) {
        setAttributeInternal(WOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderCd.
     * @return the HeaderCd
     */
    public String getHeaderCd() {
        return (String) getAttributeInternal(HEADERCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeaderCd.
     * @param value value to set the  HeaderCd
     */
    public void setHeaderCd(String value) {
        setAttributeInternal(HEADERCD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WeekEnding.
     * @return the WeekEnding
     */
    public Date getWeekEnding() {
        return (Date) getAttributeInternal(WEEKENDING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WeekEnding.
     * @param value value to set the  WeekEnding
     */
    public void setWeekEnding(Date value) {
        setAttributeInternal(WEEKENDING, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> HeaderCodes.
     */
    public RowSet getHeaderCodes() {
        return (RowSet)getAttributeInternal(HEADERCODES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WorkOrderMaster.
     */
    public RowSet getWorkOrderMaster() {
        return (RowSet)getAttributeInternal(WORKORDERMASTER);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrltAccountmasterView.
     */
    public RowSet getMrltAccountmasterView() {
        return (RowSet)getAttributeInternal(MRLTACCOUNTMASTERVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
