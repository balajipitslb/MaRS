package its.mnr.mp5.eo.master;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.eo.local.MrltAccountratetaskImpl;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 23 17:03:45 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltTaskImpl extends ExtendedEntityImpl {
    
    
    /**
     * Validation method for MrltTask.
     */

    public void brOneDamageDefaultOnly() {
        boolean ret = false;
        RowSet rs = this.getOneDamageDefaultOnly();
        rs.setForwardOnly(true);
        rs.executeQuery();
        Row rw = rs.first();
        if(rw == null){
        //Means this is new record
            ret = true;
        }
        if (rw != null) {
            Number cnt = (Number)rw.getAttribute("Count1");
            //System.out.println("cnt:" + cnt);
            ret = (cnt.equals(1) ? true : false);
        }


        if (!ret) {
            String msg = "'" + getTask() + "' must have ONE default Damage Code";
            throw new JboException(msg);
        }
    }
    public void brOneLocationDefaultOnly() {
        boolean ret = false;
        RowSet rs = this.getOneLocationDefaultOnly();
        rs.setForwardOnly(true);
        rs.executeQuery();
        Row rw = rs.first();
        if(rw == null){
        //Means this is new record
            ret = true;
        }
        if (rw != null) {
            Number cnt = (Number)rw.getAttribute("Count1");
            //System.out.println("cnt:" + cnt);
            ret = (cnt.equals(1) ? true : false);
        }


        if (!ret) {
            String msg = "'" + getTask() + "' must have ONE default Location Code";
            throw new JboException(msg);
        }
    }

    public void beforeCommit(TransactionEvent transactionEvent) {
        brOneDamageDefaultOnly();
        brOneLocationDefaultOnly();
        super.beforeCommit(transactionEvent);
    }
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Taskid {
            public Object get(MrltTaskImpl obj) {
                return obj.getTaskid();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setTaskid((String)value);
            }
        }
        ,
        Servicegroupid {
            public Object get(MrltTaskImpl obj) {
                return obj.getServicegroupid();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setServicegroupid((String)value);
            }
        }
        ,
        Task {
            public Object get(MrltTaskImpl obj) {
                return obj.getTask();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setTask((String)value);
            }
        }
        ,
        Taskcompcode {
            public Object get(MrltTaskImpl obj) {
                return obj.getTaskcompcode();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setTaskcompcode((String)value);
            }
        }
        ,
        Per {
            public Object get(MrltTaskImpl obj) {
                return obj.getPer();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setPer((String)value);
            }
        }
        ,
        Billtype {
            public Object get(MrltTaskImpl obj) {
                return obj.getBilltype();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setBilltype((String)value);
            }
        }
        ,
        Taskactive {
            public Object get(MrltTaskImpl obj) {
                return obj.getTaskactive();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setTaskactive((String)value);
            }
        }
        ,
        TaskCompCodeId {
            public Object get(MrltTaskImpl obj) {
                return obj.getTaskCompCodeId();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setTaskCompCodeId((String)value);
            }
        }
        ,
        MrltTaskdamage {
            public Object get(MrltTaskImpl obj) {
                return obj.getMrltTaskdamage();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltTasklocation {
            public Object get(MrltTaskImpl obj) {
                return obj.getMrltTasklocation();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrlrefComponent {
            public Object get(MrltTaskImpl obj) {
                return obj.getMrlrefComponent();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setMrlrefComponent((ExtendedEntityImpl)value);
            }
        }
        ,
        MrltAccountratetask {
            public Object get(MrltTaskImpl obj) {
                return obj.getMrltAccountratetask();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setMrltAccountratetask((MrltAccountratetaskImpl)value);
            }
        }
        ,
        OneDamageDefaultOnly {
            public Object get(MrltTaskImpl obj) {
                return obj.getOneDamageDefaultOnly();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OneLocationDefaultOnly {
            public Object get(MrltTaskImpl obj) {
                return obj.getOneLocationDefaultOnly();
            }

            public void put(MrltTaskImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltTaskImpl object);

        public abstract void put(MrltTaskImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TASKID = AttributesEnum.Taskid.index();
    public static final int SERVICEGROUPID = AttributesEnum.Servicegroupid.index();
    public static final int TASK = AttributesEnum.Task.index();
    public static final int TASKCOMPCODE = AttributesEnum.Taskcompcode.index();
    public static final int PER = AttributesEnum.Per.index();
    public static final int BILLTYPE = AttributesEnum.Billtype.index();
    public static final int TASKACTIVE = AttributesEnum.Taskactive.index();
    public static final int TASKCOMPCODEID = AttributesEnum.TaskCompCodeId.index();
    public static final int MRLTTASKDAMAGE = AttributesEnum.MrltTaskdamage.index();
    public static final int MRLTTASKLOCATION = AttributesEnum.MrltTasklocation.index();
    public static final int MRLREFCOMPONENT = AttributesEnum.MrlrefComponent.index();
    public static final int MRLTACCOUNTRATETASK = AttributesEnum.MrltAccountratetask.index();
    public static final int ONEDAMAGEDEFAULTONLY = AttributesEnum.OneDamageDefaultOnly.index();
    public static final int ONELOCATIONDEFAULTONLY = AttributesEnum.OneLocationDefaultOnly.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltTaskImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("its.mnr.mp5.eo.master.MrltTask");
    }

    /**
     * Gets the attribute value for Taskid, using the alias name Taskid.
     * @return the value of Taskid
     */
    public String getTaskid() {
        return (String)getAttributeInternal(TASKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Taskid.
     * @param value value to set the Taskid
     */
    public void setTaskid(String value) {
        setAttributeInternal(TASKID, value);
    }

    /**
     * Gets the attribute value for Servicegroupid, using the alias name Servicegroupid.
     * @return the value of Servicegroupid
     */
    public String getServicegroupid() {
        return (String)getAttributeInternal(SERVICEGROUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Servicegroupid.
     * @param value value to set the Servicegroupid
     */
    public void setServicegroupid(String value) {
        setAttributeInternal(SERVICEGROUPID, value);
    }

    /**
     * Gets the attribute value for Task, using the alias name Task.
     * @return the value of Task
     */
    public String getTask() {
        return (String)getAttributeInternal(TASK);
    }

    /**
     * Sets <code>value</code> as the attribute value for Task.
     * @param value value to set the Task
     */
    public void setTask(String value) {
        setAttributeInternal(TASK, value);
    }

    /**
     * Gets the attribute value for Taskcompcode, using the alias name Taskcompcode.
     * @return the value of Taskcompcode
     */
    public String getTaskcompcode() {
        return (String)getAttributeInternal(TASKCOMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Taskcompcode.
     * @param value value to set the Taskcompcode
     */
    public void setTaskcompcode(String value) {
        setAttributeInternal(TASKCOMPCODE, value);
    }

    /**
     * Gets the attribute value for Per, using the alias name Per.
     * @return the value of Per
     */
    public String getPer() {
        return (String)getAttributeInternal(PER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Per.
     * @param value value to set the Per
     */
    public void setPer(String value) {
        setAttributeInternal(PER, value);
    }

    /**
     * Gets the attribute value for Billtype, using the alias name Billtype.
     * @return the value of Billtype
     */
    public String getBilltype() {
        return (String)getAttributeInternal(BILLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Billtype.
     * @param value value to set the Billtype
     */
    public void setBilltype(String value) {
        setAttributeInternal(BILLTYPE, value);
    }

    /**
     * Gets the attribute value for Taskactive, using the alias name Taskactive.
     * @return the value of Taskactive
     */
    public String getTaskactive() {
        return (String)getAttributeInternal(TASKACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Taskactive.
     * @param value value to set the Taskactive
     */
    public void setTaskactive(String value) {
        setAttributeInternal(TASKACTIVE, value);
    }

    /**
     * Gets the attribute value for TaskCompCodeId, using the alias name TaskCompCodeId.
     * @return the value of TaskCompCodeId
     */
    public String getTaskCompCodeId() {
        return (String)getAttributeInternal(TASKCOMPCODEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskCompCodeId.
     * @param value value to set the TaskCompCodeId
     */
    public void setTaskCompCodeId(String value) {
        setAttributeInternal(TASKCOMPCODEID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltTaskdamage() {
        return (RowIterator)getAttributeInternal(MRLTTASKDAMAGE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltTasklocation() {
        return (RowIterator)getAttributeInternal(MRLTTASKLOCATION);
    }

    /**
     * @return the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public ExtendedEntityImpl getMrlrefComponent() {
        return (ExtendedEntityImpl)getAttributeInternal(MRLREFCOMPONENT);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public void setMrlrefComponent(ExtendedEntityImpl value) {
        setAttributeInternal(MRLREFCOMPONENT, value);
    }

    /**
     * @return the associated entity its.mnr.mp5.eo.local.MrltAccountratetaskImpl.
     */
    public MrltAccountratetaskImpl getMrltAccountratetask() {
        return (MrltAccountratetaskImpl)getAttributeInternal(MRLTACCOUNTRATETASK);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.eo.local.MrltAccountratetaskImpl.
     */
    public void setMrltAccountratetask(MrltAccountratetaskImpl value) {
        setAttributeInternal(MRLTACCOUNTRATETASK, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OneDamageDefaultOnly.
     */
    public RowSet getOneDamageDefaultOnly() {
        return (RowSet)getAttributeInternal(ONEDAMAGEDEFAULTONLY);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OneLocationDefaultOnly.
     */
    public RowSet getOneLocationDefaultOnly() {
        return (RowSet)getAttributeInternal(ONELOCATIONDEFAULTONLY);
    }

    /**
     * @param taskid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String taskid) {
        return new Key(new Object[]{taskid});
    }

    /**
     * Validation method for MrltTask.
     */
    public boolean validateMrltTaskOneDefaultOnly() {
        return true;
    }


}
