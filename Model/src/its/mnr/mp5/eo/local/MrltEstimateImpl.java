package its.mnr.mp5.eo.local;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 06 08:53:13 PST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltEstimateImpl extends ExtendedEntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }


    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        super.doDML(operation, e);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Estid {
            public Object get(MrltEstimateImpl obj) {
                return obj.getEstid();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setEstid((Number) value);
            }
        }
        ,
        Wonum {
            public Object get(MrltEstimateImpl obj) {
                return obj.getWonum();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setWonum((String) value);
            }
        }
        ,
        Ver {
            public Object get(MrltEstimateImpl obj) {
                return obj.getVer();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setVer((String) value);
            }
        }
        ,
        Estdt {
            public Object get(MrltEstimateImpl obj) {
                return obj.getEstdt();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setEstdt((Timestamp) value);
            }
        }
        ,
        Status {
            public Object get(MrltEstimateImpl obj) {
                return obj.getStatus();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setStatus((String) value);
            }
        }
        ,
        Updby {
            public Object get(MrltEstimateImpl obj) {
                return obj.getUpdby();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setUpdby((String) value);
            }
        }
        ,
        Appnum {
            public Object get(MrltEstimateImpl obj) {
                return obj.getAppnum();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setAppnum((String) value);
            }
        }
        ,
        Upddt {
            public Object get(MrltEstimateImpl obj) {
                return obj.getUpddt();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setUpddt((Timestamp) value);
            }
        }
        ,
        Reason {
            public Object get(MrltEstimateImpl obj) {
                return obj.getReason();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setReason((String) value);
            }
        }
        ,
        Equipnum {
            public Object get(MrltEstimateImpl obj) {
                return obj.getEquipnum();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setEquipnum((String) value);
            }
        }
        ,
        Acctnum {
            public Object get(MrltEstimateImpl obj) {
                return obj.getAcctnum();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setAcctnum((String) value);
            }
        }
        ,
        Hdrcd {
            public Object get(MrltEstimateImpl obj) {
                return obj.getHdrcd();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setHdrcd((String) value);
            }
        }
        ,
        Tlbrhrs {
            public Object get(MrltEstimateImpl obj) {
                return obj.getTlbrhrs();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setTlbrhrs((BigDecimal) value);
            }
        }
        ,
        Tlbrcst {
            public Object get(MrltEstimateImpl obj) {
                return obj.getTlbrcst();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setTlbrcst((BigDecimal) value);
            }
        }
        ,
        Tpartcst {
            public Object get(MrltEstimateImpl obj) {
                return obj.getTpartcst();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setTpartcst((BigDecimal) value);
            }
        }
        ,
        Ip {
            public Object get(MrltEstimateImpl obj) {
                return obj.getIp();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setIp((String) value);
            }
        }
        ,
        Rsptype {
            public Object get(MrltEstimateImpl obj) {
                return obj.getRsptype();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setRsptype((String) value);
            }
        }
        ,
        Eqtype {
            public Object get(MrltEstimateImpl obj) {
                return obj.getEqtype();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setEqtype((String) value);
            }
        }
        ,
        Locode {
            public Object get(MrltEstimateImpl obj) {
                return obj.getLocode();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setLocode((String) value);
            }
        }
        ,
        isCurVer {
            public Object get(MrltEstimateImpl obj) {
                return obj.getisCurVer();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setisCurVer((String) value);
            }
        }
        ,
        testvar {
            public Object get(MrltEstimateImpl obj) {
                return obj.gettestvar();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.settestvar((String) value);
            }
        }
        ,
        R5events {
            public Object get(MrltEstimateImpl obj) {
                return obj.getR5events();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setR5events((R5eventsImpl) value);
            }
        }
        ,
        MrltEstimatetaskdetail {
            public Object get(MrltEstimateImpl obj) {
                return obj.getMrltEstimatetaskdetail();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WOEvents {
            public Object get(MrltEstimateImpl obj) {
                return obj.getWOEvents();
            }

            public void put(MrltEstimateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MrltEstimateImpl object);

        public abstract void put(MrltEstimateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ESTID = AttributesEnum.Estid.index();
    public static final int WONUM = AttributesEnum.Wonum.index();
    public static final int VER = AttributesEnum.Ver.index();
    public static final int ESTDT = AttributesEnum.Estdt.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int UPDBY = AttributesEnum.Updby.index();
    public static final int APPNUM = AttributesEnum.Appnum.index();
    public static final int UPDDT = AttributesEnum.Upddt.index();
    public static final int REASON = AttributesEnum.Reason.index();
    public static final int EQUIPNUM = AttributesEnum.Equipnum.index();
    public static final int ACCTNUM = AttributesEnum.Acctnum.index();
    public static final int HDRCD = AttributesEnum.Hdrcd.index();
    public static final int TLBRHRS = AttributesEnum.Tlbrhrs.index();
    public static final int TLBRCST = AttributesEnum.Tlbrcst.index();
    public static final int TPARTCST = AttributesEnum.Tpartcst.index();
    public static final int IP = AttributesEnum.Ip.index();
    public static final int RSPTYPE = AttributesEnum.Rsptype.index();
    public static final int EQTYPE = AttributesEnum.Eqtype.index();
    public static final int LOCODE = AttributesEnum.Locode.index();
    public static final int ISCURVER = AttributesEnum.isCurVer.index();
    public static final int TESTVAR = AttributesEnum.testvar.index();
    public static final int R5EVENTS = AttributesEnum.R5events.index();
    public static final int MRLTESTIMATETASKDETAIL = AttributesEnum.MrltEstimatetaskdetail.index();
    public static final int WOEVENTS = AttributesEnum.WOEvents.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltEstimateImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("its.mnr.mp5.eo.local.MrltEstimate");
    }


    /**
     * Gets the attribute value for Estid, using the alias name Estid.
     * @return the value of Estid
     */
    public Number getEstid() {
        return (Number) getAttributeInternal(ESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Estid.
     * @param value value to set the Estid
     */
    public void setEstid(Number value) {
        setAttributeInternal(ESTID, value);
    }

    /**
     * Gets the attribute value for Wonum, using the alias name Wonum.
     * @return the value of Wonum
     */
    public String getWonum() {
        return (String) getAttributeInternal(WONUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wonum.
     * @param value value to set the Wonum
     */
    public void setWonum(String value) {
        setAttributeInternal(WONUM, value);
    }

    /**
     * Gets the attribute value for Ver, using the alias name Ver.
     * @return the value of Ver
     */
    public String getVer() {
        return (String) getAttributeInternal(VER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ver.
     * @param value value to set the Ver
     */
    public void setVer(String value) {
        setAttributeInternal(VER, value);
    }

    /**
     * Gets the attribute value for Estdt, using the alias name Estdt.
     * @return the value of Estdt
     */
    public Timestamp getEstdt() {
        return (Timestamp) getAttributeInternal(ESTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Estdt.
     * @param value value to set the Estdt
     */
    public void setEstdt(Timestamp value) {
        setAttributeInternal(ESTDT, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Updby, using the alias name Updby.
     * @return the value of Updby
     */
    public String getUpdby() {
        return (String) getAttributeInternal(UPDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updby.
     * @param value value to set the Updby
     */
    public void setUpdby(String value) {
        setAttributeInternal(UPDBY, value);
    }

    /**
     * Gets the attribute value for Appnum, using the alias name Appnum.
     * @return the value of Appnum
     */
    public String getAppnum() {
        return (String) getAttributeInternal(APPNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Appnum.
     * @param value value to set the Appnum
     */
    public void setAppnum(String value) {
        setAttributeInternal(APPNUM, value);
    }

    /**
     * Gets the attribute value for Upddt, using the alias name Upddt.
     * @return the value of Upddt
     */
    public Timestamp getUpddt() {
        return (Timestamp) getAttributeInternal(UPDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Upddt.
     * @param value value to set the Upddt
     */
    public void setUpddt(Timestamp value) {
        setAttributeInternal(UPDDT, value);
    }

    /**
     * Gets the attribute value for Reason, using the alias name Reason.
     * @return the value of Reason
     */
    public String getReason() {
        return (String) getAttributeInternal(REASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reason.
     * @param value value to set the Reason
     */
    public void setReason(String value) {
        setAttributeInternal(REASON, value);
    }

    /**
     * Gets the attribute value for Equipnum, using the alias name Equipnum.
     * @return the value of Equipnum
     */
    public String getEquipnum() {
        return (String) getAttributeInternal(EQUIPNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Equipnum.
     * @param value value to set the Equipnum
     */
    public void setEquipnum(String value) {
        setAttributeInternal(EQUIPNUM, value);
    }

    /**
     * Gets the attribute value for Acctnum, using the alias name Acctnum.
     * @return the value of Acctnum
     */
    public String getAcctnum() {
        return (String) getAttributeInternal(ACCTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Acctnum.
     * @param value value to set the Acctnum
     */
    public void setAcctnum(String value) {
        setAttributeInternal(ACCTNUM, value);
    }

    /**
     * Gets the attribute value for Hdrcd, using the alias name Hdrcd.
     * @return the value of Hdrcd
     */
    public String getHdrcd() {
        return (String) getAttributeInternal(HDRCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Hdrcd.
     * @param value value to set the Hdrcd
     */
    public void setHdrcd(String value) {
        setAttributeInternal(HDRCD, value);
    }

    /**
     * Gets the attribute value for Tlbrhrs, using the alias name Tlbrhrs.
     * @return the value of Tlbrhrs
     */
    public BigDecimal getTlbrhrs() {
        return (BigDecimal) getAttributeInternal(TLBRHRS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tlbrhrs.
     * @param value value to set the Tlbrhrs
     */
    public void setTlbrhrs(BigDecimal value) {
        setAttributeInternal(TLBRHRS, value);
    }

    /**
     * Gets the attribute value for Tlbrcst, using the alias name Tlbrcst.
     * @return the value of Tlbrcst
     */
    public BigDecimal getTlbrcst() {
        return (BigDecimal) getAttributeInternal(TLBRCST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tlbrcst.
     * @param value value to set the Tlbrcst
     */
    public void setTlbrcst(BigDecimal value) {
        setAttributeInternal(TLBRCST, value);
    }

    /**
     * Gets the attribute value for Tpartcst, using the alias name Tpartcst.
     * @return the value of Tpartcst
     */
    public BigDecimal getTpartcst() {
        return (BigDecimal) getAttributeInternal(TPARTCST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tpartcst.
     * @param value value to set the Tpartcst
     */
    public void setTpartcst(BigDecimal value) {
        setAttributeInternal(TPARTCST, value);
    }

    /**
     * Gets the attribute value for Ip, using the alias name Ip.
     * @return the value of Ip
     */
    public String getIp() {
        return (String) getAttributeInternal(IP);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ip.
     * @param value value to set the Ip
     */
    public void setIp(String value) {
        setAttributeInternal(IP, value);
    }

    /**
     * Gets the attribute value for Rsptype, using the alias name Rsptype.
     * @return the value of Rsptype
     */
    public String getRsptype() {
        return (String) getAttributeInternal(RSPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rsptype.
     * @param value value to set the Rsptype
     */
    public void setRsptype(String value) {
        setAttributeInternal(RSPTYPE, value);
    }

    /**
     * Gets the attribute value for Eqtype, using the alias name Eqtype.
     * @return the value of Eqtype
     */
    public String getEqtype() {
        return (String) getAttributeInternal(EQTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Eqtype.
     * @param value value to set the Eqtype
     */
    public void setEqtype(String value) {
        setAttributeInternal(EQTYPE, value);
    }

    /**
     * Gets the attribute value for Locode, using the alias name Locode.
     * @return the value of Locode
     */
    public String getLocode() {
        return (String) getAttributeInternal(LOCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locode.
     * @param value value to set the Locode
     */
    public void setLocode(String value) {
        setAttributeInternal(LOCODE, value);
    }

    /**
     * Gets the attribute value for isCurVer, using the alias name isCurVer.
     * @return the value of isCurVer
     */
    public String getisCurVer() {
        return (String) getAttributeInternal(ISCURVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for isCurVer.
     * @param value value to set the isCurVer
     */
    public void setisCurVer(String value) {
        setAttributeInternal(ISCURVER, value);
    }

    /**
     * Gets the attribute value for testvar, using the alias name testvar.
     * @return the value of testvar
     */
    public String gettestvar() {
        return (String) getAttributeInternal(TESTVAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for testvar.
     * @param value value to set the testvar
     */
    public void settestvar(String value) {
        setAttributeInternal(TESTVAR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity R5eventsImpl.
     */
    public R5eventsImpl getR5events() {
        return (R5eventsImpl) getAttributeInternal(R5EVENTS);
    }

    /**
     * Sets <code>value</code> as the associated entity R5eventsImpl.
     */
    public void setR5events(R5eventsImpl value) {
        setAttributeInternal(R5EVENTS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltEstimatetaskdetail() {
        return (RowIterator) getAttributeInternal(MRLTESTIMATETASKDETAIL);
    }


    /**
     * Gets the view accessor <code>RowSet</code> WOEvents.
     */
    public RowSet getWOEvents() {
        return (RowSet) getAttributeInternal(WOEVENTS);
    }

    /*
      public boolean isAttributeUpdateable(int index) {
        final String UNAPPROVED = "UNA";
        final String APPROVED = "APP";
        final String REJECT = "REJ";
        final String ISTATUS = getPostedAttribute(STATUS).toString();

        if (ISTATUS.equals(APPROVED) &&
            (index == APPNUM || index == REASON)) {
            return false;
        } else if (ISTATUS.equals(UNAPPROVED) &&
            (index == APPNUM || index == REASON)) {
            return false;
        }  else if (ISTATUS.equals(REJECT) &&
            (index == APPNUM || index == REASON)) {
            return false;
            }
        return super.isAttributeUpdateable(index);
    }
 */


    /**
     * @param estid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number estid) {
        return new Key(new Object[] { estid });
    }

    public boolean isAttributeUpdateable(int index) {
        final String OPEN = "OPEN";
        final String UNAPPROVED = "UNA";
        final String APPROVED = "APP";
        final String REJECT = "REJ";
        final String ISTATUS = getPostedAttribute(STATUS).toString();
        final String T = "T";
        final String F = "F";
       /// final String STRISCURVER= getPostedAttribute(ISCURVER).toString();
       final String STRISCURVER= getisCurVer();
       //// System.out.println("Inside isAttributeUpdateable VER: "+getVer()+" STRISCURVER: "+getisCurVer());

        if(STRISCURVER.equals(F)){
            if((index == APPNUM)||(index == REASON)||(index ==STATUS))
            return false;
        }
        /*
        else if (ISTATUS.equals(OPEN) &&
            (index == APPNUM)) {
            return false;
        }*/
        /*
        else if (ISTATUS.equals(APPROVED) &&
            (index == REASON)) {
            return false;
        } 
        */
        else if (ISTATUS.equals(UNAPPROVED) &&
            (index == APPNUM )) {
            return false;
        }  else if (ISTATUS.equals(REJECT) &&
            (index == APPNUM)) {
            return false;
            }
        return super.isAttributeUpdateable(index);
    }


}

