package its.mnr.mp5.eo.local;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 19 14:28:00 PDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltAssetImpl extends ExtendedEntityImpl {
    /**
     * Add locking logic here.
     */
    public void lock() {
        
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        /**
          * Business Rule calls
          */
            super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Assetcd {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetcd();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetcd((String)value);
            }
        }
        ,
        Assetclass {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetclass();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetclass((String)value);
            }
        }
        ,
        Assetmanufact {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetmanufact();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetmanufact((String)value);
            }
        }
        ,
        Assetstatus {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetstatus();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetstatus((String)value);
            }
        }
        ,
        Commiss {
            public Object get(MrltAssetImpl obj) {
                return obj.getCommiss();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setCommiss((Timestamp)value);
            }
        }
        ,
        Withdraw {
            public Object get(MrltAssetImpl obj) {
                return obj.getWithdraw();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setWithdraw((Timestamp)value);
            }
        }
        ,
        Created {
            public Object get(MrltAssetImpl obj) {
                return obj.getCreated();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Model {
            public Object get(MrltAssetImpl obj) {
                return obj.getModel();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setModel((String)value);
            }
        }
        ,
        Updated {
            public Object get(MrltAssetImpl obj) {
                return obj.getUpdated();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Updatedby {
            public Object get(MrltAssetImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Org {
            public Object get(MrltAssetImpl obj) {
                return obj.getOrg();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Assetacctnum {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetacctnum();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetacctnum((String)value);
            }
        }
        ,
        Uom {
            public Object get(MrltAssetImpl obj) {
                return obj.getUom();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        Criticality {
            public Object get(MrltAssetImpl obj) {
                return obj.getCriticality();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setCriticality((String)value);
            }
        }
        ,
        Assetdocid {
            public Object get(MrltAssetImpl obj) {
                return obj.getAssetdocid();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAssetdocid((Long)value);
            }
        }
        ,
        Isresource {
            public Object get(MrltAssetImpl obj) {
                return obj.getIsresource();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setIsresource((String)value);
            }
        }
        ,
        Notavailable {
            public Object get(MrltAssetImpl obj) {
                return obj.getNotavailable();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setNotavailable((String)value);
            }
        }
        ,
        Serialno {
            public Object get(MrltAssetImpl obj) {
                return obj.getSerialno();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setSerialno((String)value);
            }
        }
        ,
        tPostedAssetDocId {
            public Object get(MrltAssetImpl obj) {
                return obj.gettPostedAssetDocId();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.settPostedAssetDocId((String)value);
            }
        }
        ,
        MrltCustattribvalues {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltCustattribvalues();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltReading {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltReading();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltSpares {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltSpares();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        R5events {
            public Object get(MrltAssetImpl obj) {
                return obj.getR5events();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAssetdocuments {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltAssetdocuments();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAssetdocsvw {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltAssetdocsvw();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltWorkordertotalvw {
            public Object get(MrltAssetImpl obj) {
                return obj.getMrltWorkordertotalvw();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FirstEquipDateAsset {
            public Object get(MrltAssetImpl obj) {
                return obj.getFirstEquipDateAsset();
            }

            public void put(MrltAssetImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltAssetImpl object);

        public abstract void put(MrltAssetImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ASSETCD = AttributesEnum.Assetcd.index();
    public static final int ASSETCLASS = AttributesEnum.Assetclass.index();
    public static final int ASSETMANUFACT = AttributesEnum.Assetmanufact.index();
    public static final int ASSETSTATUS = AttributesEnum.Assetstatus.index();
    public static final int COMMISS = AttributesEnum.Commiss.index();
    public static final int WITHDRAW = AttributesEnum.Withdraw.index();
    public static final int CREATED = AttributesEnum.Created.index();
    public static final int MODEL = AttributesEnum.Model.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int ORG = AttributesEnum.Org.index();
    public static final int ASSETACCTNUM = AttributesEnum.Assetacctnum.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int CRITICALITY = AttributesEnum.Criticality.index();
    public static final int ASSETDOCID = AttributesEnum.Assetdocid.index();
    public static final int ISRESOURCE = AttributesEnum.Isresource.index();
    public static final int NOTAVAILABLE = AttributesEnum.Notavailable.index();
    public static final int SERIALNO = AttributesEnum.Serialno.index();
    public static final int TPOSTEDASSETDOCID = AttributesEnum.tPostedAssetDocId.index();
    public static final int MRLTCUSTATTRIBVALUES = AttributesEnum.MrltCustattribvalues.index();
    public static final int MRLTREADING = AttributesEnum.MrltReading.index();
    public static final int MRLTSPARES = AttributesEnum.MrltSpares.index();
    public static final int R5EVENTS = AttributesEnum.R5events.index();
    public static final int MRLTASSETDOCUMENTS = AttributesEnum.MrltAssetdocuments.index();
    public static final int MRLTASSETDOCSVW = AttributesEnum.MrltAssetdocsvw.index();
    public static final int MRLTWORKORDERTOTALVW = AttributesEnum.MrltWorkordertotalvw.index();
    public static final int FIRSTEQUIPDATEASSET = AttributesEnum.FirstEquipDateAsset.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltAssetImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("its.mnr.mp5.eo.local.MrltAsset");
    }

    /**
     * Gets the attribute value for Assetcd, using the alias name Assetcd.
     * @return the value of Assetcd
     */
    public String getAssetcd() {
        return (String)getAttributeInternal(ASSETCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetcd.
     * @param value value to set the Assetcd
     */
    public void setAssetcd(String value) {
        setAttributeInternal(ASSETCD, value);
    }

    /**
     * Gets the attribute value for Assetclass, using the alias name Assetclass.
     * @return the value of Assetclass
     */
    public String getAssetclass() {
        return (String)getAttributeInternal(ASSETCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetclass.
     * @param value value to set the Assetclass
     */
    public void setAssetclass(String value) {
        setAttributeInternal(ASSETCLASS, value);
    }

    /**
     * Gets the attribute value for Assetmanufact, using the alias name Assetmanufact.
     * @return the value of Assetmanufact
     */
    public String getAssetmanufact() {
        return (String)getAttributeInternal(ASSETMANUFACT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetmanufact.
     * @param value value to set the Assetmanufact
     */
    public void setAssetmanufact(String value) {
        setAttributeInternal(ASSETMANUFACT, value);
    }

    /**
     * Gets the attribute value for Assetstatus, using the alias name Assetstatus.
     * @return the value of Assetstatus
     */
    public String getAssetstatus() {
        return (String)getAttributeInternal(ASSETSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetstatus.
     * @param value value to set the Assetstatus
     */
    public void setAssetstatus(String value) {
        setAttributeInternal(ASSETSTATUS, value);
    }

    /**
     * Gets the attribute value for Commiss, using the alias name Commiss.
     * @return the value of Commiss
     */
    public Timestamp getCommiss() {
        return (Timestamp)getAttributeInternal(COMMISS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Commiss.
     * @param value value to set the Commiss
     */
    public void setCommiss(Timestamp value) {
        setAttributeInternal(COMMISS, value);
    }

    /**
     * Gets the attribute value for Withdraw, using the alias name Withdraw.
     * @return the value of Withdraw
     */
    public Timestamp getWithdraw() {
        return (Timestamp)getAttributeInternal(WITHDRAW);
    }

    /**
     * Sets <code>value</code> as the attribute value for Withdraw.
     * @param value value to set the Withdraw
     */
    public void setWithdraw(Timestamp value) {
        setAttributeInternal(WITHDRAW, value);
    }

    /**
     * Gets the attribute value for Created, using the alias name Created.
     * @return the value of Created
     */
    public Timestamp getCreated() {
        return (Timestamp)getAttributeInternal(CREATED);
    }

    /**
     * Gets the attribute value for Model, using the alias name Model.
     * @return the value of Model
     */
    public String getModel() {
        return (String)getAttributeInternal(MODEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Model.
     * @param value value to set the Model
     */
    public void setModel(String value) {
        setAttributeInternal(MODEL, value);
    }

    /**
     * Gets the attribute value for Updated, using the alias name Updated.
     * @return the value of Updated
     */
    public Timestamp getUpdated() {
        return (Timestamp)getAttributeInternal(UPDATED);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the value of Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Gets the attribute value for Org, using the alias name Org.
     * @return the value of Org
     */
    public String getOrg() {
        return (String)getAttributeInternal(ORG);
    }

    /**
     * Gets the attribute value for Assetacctnum, using the alias name Assetacctnum.
     * @return the value of Assetacctnum
     */
    public String getAssetacctnum() {
        return (String)getAttributeInternal(ASSETACCTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetacctnum.
     * @param value value to set the Assetacctnum
     */
    public void setAssetacctnum(String value) {
        setAttributeInternal(ASSETACCTNUM, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the value of Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for Criticality, using the alias name Criticality.
     * @return the value of Criticality
     */
    public String getCriticality() {
        return (String)getAttributeInternal(CRITICALITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Criticality.
     * @param value value to set the Criticality
     */
    public void setCriticality(String value) {
        setAttributeInternal(CRITICALITY, value);
    }

    /**
     * Gets the attribute value for Assetdocid, using the alias name Assetdocid.
     * @return the value of Assetdocid
     */
    public Long getAssetdocid() {
        return (Long)getAttributeInternal(ASSETDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assetdocid.
     * @param value value to set the Assetdocid
     */
    public void setAssetdocid(Long value) {
        setAttributeInternal(ASSETDOCID, value);
    }

    /**
     * Gets the attribute value for Isresource, using the alias name Isresource.
     * @return the value of Isresource
     */
    public String getIsresource() {
        return (String)getAttributeInternal(ISRESOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Isresource.
     * @param value value to set the Isresource
     */
    public void setIsresource(String value) {
        setAttributeInternal(ISRESOURCE, value);
    }

    /**
     * Gets the attribute value for Notavailable, using the alias name Notavailable.
     * @return the value of Notavailable
     */
    public String getNotavailable() {
        return (String)getAttributeInternal(NOTAVAILABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notavailable.
     * @param value value to set the Notavailable
     */
    public void setNotavailable(String value) {
        setAttributeInternal(NOTAVAILABLE, value);
    }

    /**
     * Gets the attribute value for Serialno, using the alias name Serialno.
     * @return the value of Serialno
     */
    public String getSerialno() {
        return (String)getAttributeInternal(SERIALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Serialno.
     * @param value value to set the Serialno
     */
    public void setSerialno(String value) {
        setAttributeInternal(SERIALNO, value);
    }

    /**
     * Gets the attribute value for tPostedAssetDocId, using the alias name tPostedAssetDocId.
     * @return the value of tPostedAssetDocId
     */
    public String gettPostedAssetDocId() {
        return (String)getAttributeInternal(TPOSTEDASSETDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for tPostedAssetDocId.
     * @param value value to set the tPostedAssetDocId
     */
    public void settPostedAssetDocId(String value) {
        setAttributeInternal(TPOSTEDASSETDOCID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltCustattribvalues() {
        return (RowIterator)getAttributeInternal(MRLTCUSTATTRIBVALUES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltReading() {
        return (RowIterator)getAttributeInternal(MRLTREADING);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltSpares() {
        return (RowIterator)getAttributeInternal(MRLTSPARES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getR5events() {
        return (RowIterator)getAttributeInternal(R5EVENTS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltAssetdocuments() {
        return (RowIterator)getAttributeInternal(MRLTASSETDOCUMENTS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltAssetdocsvw() {
        return (RowIterator)getAttributeInternal(MRLTASSETDOCSVW);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltWorkordertotalvw() {
        return (RowIterator)getAttributeInternal(MRLTWORKORDERTOTALVW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FirstEquipDateAsset.
     */
    public RowSet getFirstEquipDateAsset() {
        return (RowSet)getAttributeInternal(FIRSTEQUIPDATEASSET);
    }

    /**
     * @param assetcd key constituent
     * @param org key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String assetcd, String org) {
        return new Key(new Object[]{assetcd, org});
    }


}
