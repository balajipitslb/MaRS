package its.mnr.mp5.eo.local;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;
import its.mnr.mp5.eo.master.MrltAccountmasterImpl;

import java.math.BigDecimal;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.VariableValueManager;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 03 17:02:38 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MrltAccountrateImpl extends ExtendedEntityImpl {
    /**
     * BR: Account Rate Versions can NOT be deleted if any Work Orders have been created against Version
     */
    public void brCheckWOVer() {
        //System.out.println("Inside brCheckWOVer()");
        String sAcct = getAcctnum();
        String sVer = getVer();
        String msg;
        
        //check View Object for WO existence.
        RowSet rs = this.getWOAccountRateVerExistence();
        VariableValueManager vm = rs.ensureVariableManager();
        vm.setVariableValue("WOAcctNum", sAcct);
        vm.setVariableValue("VerNum", sVer);
        rs.setForwardOnly(true);
        rs.executeQuery();
        Row rw = rs.first();

        if (rw != null) {
            //unfinished WO exists
            //Display message and throw Exception if ANY new Tasks do not exist
            msg = "Work Order(s) have been created against Account " + sAcct + ": Rate Version #" + sVer;
            throw new JboException(msg);
        } else if (rw == null) {
        }
    }


    public void remove() {
        //System.out.println("inside ACCOUNTRATE:remove()");
        brCheckWOVer();
        super.remove();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Accountrateid {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getAccountrateid();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Ver {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getVer();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Acctnum {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getAcctnum();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAcctnum((String)value);
            }
        }
        ,
        Effectivedt {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getEffectivedt();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setEffectivedt((Date)value);
            }
        }
        ,
        Base {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getBase();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setBase((BigDecimal)value);
            }
        }
        ,
        M1 {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM1();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM1((BigDecimal)value);
            }
        }
        ,
        M1o {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM1o();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM1o((BigDecimal)value);
            }
        }
        ,
        M2 {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM2();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM2((BigDecimal)value);
            }
        }
        ,
        M2o {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM2o();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM2o((BigDecimal)value);
            }
        }
        ,
        M3 {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM3();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM3((BigDecimal)value);
            }
        }
        ,
        M3o {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getM3o();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setM3o((BigDecimal)value);
            }
        }
        ,
        AcctBillType {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getAcctBillType();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAcctBillType((String)value);
            }
        }
        ,
        AcctNumDesc {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getAcctNumDesc();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAcctNumDesc((String)value);
            }
        }
        ,
        MrltAccountratetask {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getMrltAccountratetask();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MrltAccountmaster {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getMrltAccountmaster();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setMrltAccountmaster((MrltAccountmasterImpl)value);
            }
        }
        ,
        WOAccountRateVerExistence {
            public Object get(MrltAccountrateImpl obj) {
                return obj.getWOAccountRateVerExistence();
            }

            public void put(MrltAccountrateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MrltAccountrateImpl object);

        public abstract void put(MrltAccountrateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACCOUNTRATEID = AttributesEnum.Accountrateid.index();
    public static final int VER = AttributesEnum.Ver.index();
    public static final int ACCTNUM = AttributesEnum.Acctnum.index();
    public static final int EFFECTIVEDT = AttributesEnum.Effectivedt.index();
    public static final int BASE = AttributesEnum.Base.index();
    public static final int M1 = AttributesEnum.M1.index();
    public static final int M1O = AttributesEnum.M1o.index();
    public static final int M2 = AttributesEnum.M2.index();
    public static final int M2O = AttributesEnum.M2o.index();
    public static final int M3 = AttributesEnum.M3.index();
    public static final int M3O = AttributesEnum.M3o.index();
    public static final int ACCTBILLTYPE = AttributesEnum.AcctBillType.index();
    public static final int ACCTNUMDESC = AttributesEnum.AcctNumDesc.index();
    public static final int MRLTACCOUNTRATETASK = AttributesEnum.MrltAccountratetask.index();
    public static final int MRLTACCOUNTMASTER = AttributesEnum.MrltAccountmaster.index();
    public static final int WOACCOUNTRATEVEREXISTENCE = AttributesEnum.WOAccountRateVerExistence.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MrltAccountrateImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("its.mnr.mp5.eo.local.MrltAccountrate");
    }

    /**
     * Gets the attribute value for Accountrateid, using the alias name Accountrateid.
     * @return the value of Accountrateid
     */
    public String getAccountrateid() {
        return (String)getAttributeInternal(ACCOUNTRATEID);
    }

    /**
     * Gets the attribute value for Ver, using the alias name Ver.
     * @return the value of Ver
     */
    public String getVer() {
        return (String)getAttributeInternal(VER);
    }

    /**
     * Gets the attribute value for Acctnum, using the alias name Acctnum.
     * @return the value of Acctnum
     */
    public String getAcctnum() {
        return (String)getAttributeInternal(ACCTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Acctnum.
     * @param value value to set the Acctnum
     */
    public void setAcctnum(String value) {
        setAttributeInternal(ACCTNUM, value);
    }

    /**
     * Gets the attribute value for Effectivedt, using the alias name Effectivedt.
     * @return the value of Effectivedt
     */
    public Date getEffectivedt() {
        return (Date)getAttributeInternal(EFFECTIVEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Effectivedt.
     * @param value value to set the Effectivedt
     */
    public void setEffectivedt(Date value) {
        setAttributeInternal(EFFECTIVEDT, value);
    }

    /**
     * Gets the attribute value for Base, using the alias name Base.
     * @return the value of Base
     */
    public BigDecimal getBase() {
        return (BigDecimal)getAttributeInternal(BASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Base.
     * @param value value to set the Base
     */
    public void setBase(BigDecimal value) {
        setAttributeInternal(BASE, value);
    }

    /**
     * Gets the attribute value for M1, using the alias name M1.
     * @return the value of M1
     */
    public BigDecimal getM1() {
        return (BigDecimal)getAttributeInternal(M1);
    }

    /**
     * Sets <code>value</code> as the attribute value for M1.
     * @param value value to set the M1
     */
    public void setM1(BigDecimal value) {
        setAttributeInternal(M1, value);
    }

    /**
     * Gets the attribute value for M1o, using the alias name M1o.
     * @return the value of M1o
     */
    public BigDecimal getM1o() {
        return (BigDecimal)getAttributeInternal(M1O);
    }

    /**
     * Sets <code>value</code> as the attribute value for M1o.
     * @param value value to set the M1o
     */
    public void setM1o(BigDecimal value) {
        setAttributeInternal(M1O, value);
    }

    /**
     * Gets the attribute value for M2, using the alias name M2.
     * @return the value of M2
     */
    public BigDecimal getM2() {
        return (BigDecimal)getAttributeInternal(M2);
    }

    /**
     * Sets <code>value</code> as the attribute value for M2.
     * @param value value to set the M2
     */
    public void setM2(BigDecimal value) {
        setAttributeInternal(M2, value);
    }

    /**
     * Gets the attribute value for M2o, using the alias name M2o.
     * @return the value of M2o
     */
    public BigDecimal getM2o() {
        return (BigDecimal)getAttributeInternal(M2O);
    }

    /**
     * Sets <code>value</code> as the attribute value for M2o.
     * @param value value to set the M2o
     */
    public void setM2o(BigDecimal value) {
        setAttributeInternal(M2O, value);
    }

    /**
     * Gets the attribute value for M3, using the alias name M3.
     * @return the value of M3
     */
    public BigDecimal getM3() {
        return (BigDecimal)getAttributeInternal(M3);
    }

    /**
     * Sets <code>value</code> as the attribute value for M3.
     * @param value value to set the M3
     */
    public void setM3(BigDecimal value) {
        setAttributeInternal(M3, value);
    }

    /**
     * Gets the attribute value for M3o, using the alias name M3o.
     * @return the value of M3o
     */
    public BigDecimal getM3o() {
        return (BigDecimal)getAttributeInternal(M3O);
    }

    /**
     * Sets <code>value</code> as the attribute value for M3o.
     * @param value value to set the M3o
     */
    public void setM3o(BigDecimal value) {
        setAttributeInternal(M3O, value);
    }

    /**
     * Gets the attribute value for AcctBillType, using the alias name AcctBillType.
     * @return the value of AcctBillType
     */
    public String getAcctBillType() {
        return (String)getAttributeInternal(ACCTBILLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcctBillType.
     * @param value value to set the AcctBillType
     */
    public void setAcctBillType(String value) {
        setAttributeInternal(ACCTBILLTYPE, value);
    }

    /**
     * Gets the attribute value for AcctNumDesc, using the alias name AcctNumDesc.
     * @return the value of AcctNumDesc
     */
    public String getAcctNumDesc() {
        return (String)getAttributeInternal(ACCTNUMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcctNumDesc.
     * @param value value to set the AcctNumDesc
     */
    public void setAcctNumDesc(String value) {
        setAttributeInternal(ACCTNUMDESC, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMrltAccountratetask() {
        return (RowIterator)getAttributeInternal(MRLTACCOUNTRATETASK);
    }

    /**
     * @return the associated entity its.mnr.mp5.eo.master.MrltAccountmasterImpl.
     */
    public MrltAccountmasterImpl getMrltAccountmaster() {
        return (MrltAccountmasterImpl)getAttributeInternal(MRLTACCOUNTMASTER);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.eo.master.MrltAccountmasterImpl.
     */
    public void setMrltAccountmaster(MrltAccountmasterImpl value) {
        setAttributeInternal(MRLTACCOUNTMASTER, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WOAccountRateVerExistence.
     */
    public RowSet getWOAccountRateVerExistence() {
        return (RowSet)getAttributeInternal(WOACCOUNTRATEVEREXISTENCE);
    }


    /**
     * @param accountrateid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String accountrateid) {
        return new Key(new Object[]{accountrateid});
    }


}
