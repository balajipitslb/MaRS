package its.mnr.mp5.eo.local;

import com.sun.org.apache.bcel.internal.generic.NEW;

import its.mnr.mp5.baseclass.ExtendedEntityImpl;

import its.mnr.mp5.model.Util;

import java.util.ArrayList;

import java.util.List;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.VariableValueManager;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 05 15:42:27 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class R5binstockImpl extends ExtendedEntityImpl {
    

    /**
     * Validation method for R5binstock.
     */
    /*
    public void validateBin2Bin() {
        //System.out.println(" validateBinTransfer()");
        //false returns validition error
        //System.out.println(gettNewBin() + ":" + gettNewLot() + ":" +gettNewQty());
        if (Util.isBlank(gettNewBin()) || Util.isBlank(gettNewLot()) || gettNewQty() == null) {
            String msg = "New Bin, New Lot and transfer Qty are required";
            throw new JboException(msg);
        } else if (gettNewBin() == getBisBin() && gettNewLot() == getBisLot()) {
            String msg = "New Bin and New Lot are same as current location";
            throw new JboException(msg);

        }
        //System.out.println(gettNewQty().getLength());
    }


    /**
     * Validation method for R5binstock.
     */
    public void isBinEmpty() {
        //System.out.println(" validateBinTransfer()");
        //false returns validition error
        if (getBisQty().compareTo(0) > 0) {
            String msg = "Bin is not empty";
            throw new JboException(msg);
        }
        //System.out.println(gettNewQty().getLength());
    }

    public void isPartIssued() {
        String pPart = getBisPart();
        String pBin = getBisBin();
        String pLot = getBisLot();
        //System.out.println("isPartIssued -> " + pPart + ":" + pBin + ":" + pLot);
        List list = new ArrayList();
        RowSet rs = this.getPartsIssuedExistence();
        VariableValueManager vm = rs.ensureVariableManager();
        vm.setVariableValue("Part", pPart);
        vm.setVariableValue("Bin", pBin);
        vm.setVariableValue("Lot", pLot);
        //rs.setForwardOnly(true);
        rs.executeQuery();
        //Row rw = rs.first();
        //if (rw != null) {
           // System.out.println("record found");
              while (rs.hasNext()) {
            //while ((rw = rs.next()) != null) {    
                Row rw = rs.next();
                //System.out.println("rs.hasNext()");
                String sEvtCode = (String)rw.getAttribute("EvtCode");
                String sEvtStatus = (String)rw.getAttribute("EvtStatus");
                //System.out.println(sEvtCode + " found");
                list.add("#" + sEvtCode + " (" + sEvtStatus + ") ");
            }
            //Display message and throw Exception
            if (!list.isEmpty()) {
                String msg = "Part " + pPart + " is currently issued:" + '\n';
                for (int i = 0; i < list.size(); i++) {
                    msg = msg + list.get(i) + '\n';
                }
                throw new JboException(msg);
            }
       // }
    }

    protected void doDML(int i, TransactionEvent transactionEvent) {
        /**
          * Business Rule calls
          */
        /*
        if (isAttributeChanged(TNEWBIN) || isAttributeChanged(TNEWLOT) || isAttributeChanged(TNEWQTY)) {
            //System.out.println("calling brChangeActAccountCode()");
            validateBin2Bin();
        }
*/
        if (i == DML_DELETE) {
            isBinEmpty();
            //isPartIssued();
        }
        super.doDML(i, transactionEvent);
        /*
        transactionEvent.getDBTransaction().clearEntityCache("R5binstock");
        settNewBin(null);
        settNewLot(null);
        settNewQty(null);
*/
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BisPart {
            public Object get(R5binstockImpl obj) {
                return obj.getBisPart();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisPart((String)value);
            }
        }
        ,
        BisStore {
            public Object get(R5binstockImpl obj) {
                return obj.getBisStore();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisStore((String)value);
            }
        }
        ,
        BisBin {
            public Object get(R5binstockImpl obj) {
                return obj.getBisBin();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisBin((String)value);
            }
        }
        ,
        BisLot {
            public Object get(R5binstockImpl obj) {
                return obj.getBisLot();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisLot((String)value);
            }
        }
        ,
        BisQty {
            public Object get(R5binstockImpl obj) {
                return obj.getBisQty();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisQty((Number)value);
            }
        }
        ,
        BisPartOrg {
            public Object get(R5binstockImpl obj) {
                return obj.getBisPartOrg();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisPartOrg((String)value);
            }
        }
        ,
        BisCreated {
            public Object get(R5binstockImpl obj) {
                return obj.getBisCreated();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisCreated((Timestamp)value);
            }
        }
        ,
        BisCreatedby {
            public Object get(R5binstockImpl obj) {
                return obj.getBisCreatedby();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisCreatedby((String)value);
            }
        }
        ,
        BisUpdated {
            public Object get(R5binstockImpl obj) {
                return obj.getBisUpdated();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisUpdated((Timestamp)value);
            }
        }
        ,
        BisUpdatedby {
            public Object get(R5binstockImpl obj) {
                return obj.getBisUpdatedby();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setBisUpdatedby((String)value);
            }
        }
        ,
        tNewBin {
            public Object get(R5binstockImpl obj) {
                return obj.gettNewBin();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.settNewBin((String)value);
            }
        }
        ,
        tNewLot {
            public Object get(R5binstockImpl obj) {
                return obj.gettNewLot();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.settNewLot((String)value);
            }
        }
        ,
        tNewQty {
            public Object get(R5binstockImpl obj) {
                return obj.gettNewQty();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.settNewQty((Number)value);
            }
        }
        ,
        R5bins {
            public Object get(R5binstockImpl obj) {
                return obj.getR5bins();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setR5bins((ExtendedEntityImpl)value);
            }
        }
        ,
        R5matlparts {
            public Object get(R5binstockImpl obj) {
                return obj.getR5matlparts();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setR5matlparts((R5matlpartsImpl)value);
            }
        }
        ,
        R5parts {
            public Object get(R5binstockImpl obj) {
                return obj.getR5parts();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setR5parts((R5partsImpl)value);
            }
        }
        ,
        R5stock {
            public Object get(R5binstockImpl obj) {
                return obj.getR5stock();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setR5stock((R5stockImpl)value);
            }
        }
        ,
        R5lots {
            public Object get(R5binstockImpl obj) {
                return obj.getR5lots();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setR5lots((ExtendedEntityImpl)value);
            }
        }
        ,
        PartsIssuedExistence {
            public Object get(R5binstockImpl obj) {
                return obj.getPartsIssuedExistence();
            }

            public void put(R5binstockImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(R5binstockImpl object);

        public abstract void put(R5binstockImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BISPART = AttributesEnum.BisPart.index();
    public static final int BISSTORE = AttributesEnum.BisStore.index();
    public static final int BISBIN = AttributesEnum.BisBin.index();
    public static final int BISLOT = AttributesEnum.BisLot.index();
    public static final int BISQTY = AttributesEnum.BisQty.index();
    public static final int BISPARTORG = AttributesEnum.BisPartOrg.index();
    public static final int BISCREATED = AttributesEnum.BisCreated.index();
    public static final int BISCREATEDBY = AttributesEnum.BisCreatedby.index();
    public static final int BISUPDATED = AttributesEnum.BisUpdated.index();
    public static final int BISUPDATEDBY = AttributesEnum.BisUpdatedby.index();
    public static final int TNEWBIN = AttributesEnum.tNewBin.index();
    public static final int TNEWLOT = AttributesEnum.tNewLot.index();
    public static final int TNEWQTY = AttributesEnum.tNewQty.index();
    public static final int R5BINS = AttributesEnum.R5bins.index();
    public static final int R5MATLPARTS = AttributesEnum.R5matlparts.index();
    public static final int R5PARTS = AttributesEnum.R5parts.index();
    public static final int R5STOCK = AttributesEnum.R5stock.index();
    public static final int R5LOTS = AttributesEnum.R5lots.index();
    public static final int PARTSISSUEDEXISTENCE = AttributesEnum.PartsIssuedExistence.index();

    /**
     * This is the default constructor (do not remove).
     */
    public R5binstockImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("its.mnr.mp5.eo.local.R5binstock");
    }

    /**
     * Gets the attribute value for BisPart, using the alias name BisPart.
     * @return the value of BisPart
     */
    public String getBisPart() {
        return (String)getAttributeInternal(BISPART);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisPart.
     * @param value value to set the BisPart
     */
    public void setBisPart(String value) {
        setAttributeInternal(BISPART, value);
    }

    /**
     * Gets the attribute value for BisStore, using the alias name BisStore.
     * @return the value of BisStore
     */
    public String getBisStore() {
        return (String)getAttributeInternal(BISSTORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisStore.
     * @param value value to set the BisStore
     */
    public void setBisStore(String value) {
        setAttributeInternal(BISSTORE, value);
    }

    /**
     * Gets the attribute value for BisBin, using the alias name BisBin.
     * @return the value of BisBin
     */
    public String getBisBin() {
        return (String)getAttributeInternal(BISBIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisBin.
     * @param value value to set the BisBin
     */
    public void setBisBin(String value) {
        setAttributeInternal(BISBIN, value);
    }

    /**
     * Gets the attribute value for BisLot, using the alias name BisLot.
     * @return the value of BisLot
     */
    public String getBisLot() {
        return (String)getAttributeInternal(BISLOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisLot.
     * @param value value to set the BisLot
     */
    public void setBisLot(String value) {
        setAttributeInternal(BISLOT, value);
    }

    /**
     * Gets the attribute value for BisQty, using the alias name BisQty.
     * @return the value of BisQty
     */
    public Number getBisQty() {
        return (Number)getAttributeInternal(BISQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisQty.
     * @param value value to set the BisQty
     */
    public void setBisQty(Number value) {
        setAttributeInternal(BISQTY, value);
    }

    /**
     * Gets the attribute value for BisPartOrg, using the alias name BisPartOrg.
     * @return the value of BisPartOrg
     */
    public String getBisPartOrg() {
        return (String)getAttributeInternal(BISPARTORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisPartOrg.
     * @param value value to set the BisPartOrg
     */
    public void setBisPartOrg(String value) {
        setAttributeInternal(BISPARTORG, value);
    }

    /**
     * Gets the attribute value for BisCreated, using the alias name BisCreated.
     * @return the value of BisCreated
     */
    public Timestamp getBisCreated() {
        return (Timestamp)getAttributeInternal(BISCREATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisCreated.
     * @param value value to set the BisCreated
     */
    public void setBisCreated(Timestamp value) {
        setAttributeInternal(BISCREATED, value);
    }

    /**
     * Gets the attribute value for BisCreatedby, using the alias name BisCreatedby.
     * @return the value of BisCreatedby
     */
    public String getBisCreatedby() {
        return (String)getAttributeInternal(BISCREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisCreatedby.
     * @param value value to set the BisCreatedby
     */
    public void setBisCreatedby(String value) {
        setAttributeInternal(BISCREATEDBY, value);
    }

    /**
     * Gets the attribute value for BisUpdated, using the alias name BisUpdated.
     * @return the value of BisUpdated
     */
    public Timestamp getBisUpdated() {
        return (Timestamp)getAttributeInternal(BISUPDATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisUpdated.
     * @param value value to set the BisUpdated
     */
    public void setBisUpdated(Timestamp value) {
        setAttributeInternal(BISUPDATED, value);
    }

    /**
     * Gets the attribute value for BisUpdatedby, using the alias name BisUpdatedby.
     * @return the value of BisUpdatedby
     */
    public String getBisUpdatedby() {
        return (String)getAttributeInternal(BISUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BisUpdatedby.
     * @param value value to set the BisUpdatedby
     */
    public void setBisUpdatedby(String value) {
        setAttributeInternal(BISUPDATEDBY, value);
    }


    /**
     * Gets the attribute value for tNewBin, using the alias name tNewBin.
     * @return the value of tNewBin
     */
    public String gettNewBin() {
        return (String)getAttributeInternal(TNEWBIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for tNewBin.
     * @param value value to set the tNewBin
     */
    public void settNewBin(String value) {
        setAttributeInternal(TNEWBIN, value);
    }

    /**
     * Gets the attribute value for tNewLot, using the alias name tNewLot.
     * @return the value of tNewLot
     */
    public String gettNewLot() {
        return (String)getAttributeInternal(TNEWLOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for tNewLot.
     * @param value value to set the tNewLot
     */
    public void settNewLot(String value) {
        setAttributeInternal(TNEWLOT, value);
    }

    /**
     * Gets the attribute value for tNewQty, using the alias name tNewQty.
     * @return the value of tNewQty
     */
    public Number gettNewQty() {
        return (Number)getAttributeInternal(TNEWQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for tNewQty.
     * @param value value to set the tNewQty
     */
    public void settNewQty(Number value) {
        setAttributeInternal(TNEWQTY, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public ExtendedEntityImpl getR5bins() {
        return (ExtendedEntityImpl)getAttributeInternal(R5BINS);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public void setR5bins(ExtendedEntityImpl value) {
        setAttributeInternal(R5BINS, value);
    }

    /**
     * @return the associated entity R5matlpartsImpl.
     */
    public R5matlpartsImpl getR5matlparts() {
        return (R5matlpartsImpl)getAttributeInternal(R5MATLPARTS);
    }

    /**
     * Sets <code>value</code> as the associated entity R5matlpartsImpl.
     */
    public void setR5matlparts(R5matlpartsImpl value) {
        setAttributeInternal(R5MATLPARTS, value);
    }

    /**
     * @return the associated entity R5partsImpl.
     */
    public R5partsImpl getR5parts() {
        return (R5partsImpl)getAttributeInternal(R5PARTS);
    }

    /**
     * Sets <code>value</code> as the associated entity R5partsImpl.
     */
    public void setR5parts(R5partsImpl value) {
        setAttributeInternal(R5PARTS, value);
    }

    /**
     * @return the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public R5stockImpl getR5stock() {
        return (R5stockImpl)getAttributeInternal(R5STOCK);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public void setR5stock(R5stockImpl value) {
        setAttributeInternal(R5STOCK, value);
    }

    /**
     * @return the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public ExtendedEntityImpl getR5lots() {
        return (ExtendedEntityImpl)getAttributeInternal(R5LOTS);
    }

    /**
     * Sets <code>value</code> as the associated entity its.mnr.mp5.baseclass.ExtendedEntityImpl.
     */
    public void setR5lots(ExtendedEntityImpl value) {
        setAttributeInternal(R5LOTS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PartsIssuedExistence.
     */
    public RowSet getPartsIssuedExistence() {
        return (RowSet)getAttributeInternal(PARTSISSUEDEXISTENCE);
    }

    /**
     * @param bisPart key constituent
     * @param bisStore key constituent
     * @param bisBin key constituent
     * @param bisLot key constituent
     * @param bisPartOrg key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String bisPart, String bisStore, String bisBin, String bisLot,
                                       String bisPartOrg) {
        return new Key(new Object[]{bisPart, bisStore, bisBin, bisLot, bisPartOrg});
    }


}
